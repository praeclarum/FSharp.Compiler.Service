// Implementation file for parser generated by fsyacc
module internal Microsoft.FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 3 "../pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open Internal.Utilities

open Microsoft.FSharp.Compiler.AbstractIL
open Microsoft.FSharp.Compiler.AbstractIL.Internal
open Microsoft.FSharp.Compiler.AbstractIL.Internal.Library
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Parsing

open System
open Microsoft.FSharp.Compiler.Range
open Microsoft.FSharp.Compiler.Ast
open Microsoft.FSharp.Compiler.Lib
open Microsoft.FSharp.Compiler.PrettyNaming
open Microsoft.FSharp.Compiler.ErrorLogger

#if DEBUG
let debugPrint(s) =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint(s) = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError(e,e.Range)
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr (m: range) xopt = 
    let m = m.MakeSynthetic()
    match xopt with 
    | None -> mkSynLidGet m Ast.FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m Ast.FSharpLib.CorePath "Some",x,m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false
let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis,strict,expr,m) = 
    if isSome vis then errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations(),m));
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false,false,[],PreXmlDoc.Empty,SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             None,expr,m,NoSequencePointAtDoBinding)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then NoSequencePointAtDoBinding else SequencePointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p,attrs,p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange)
type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic,initialRangeOpt,attrs,vis,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,bindingSetRange)) = 
   let ignoredFreeAttrs,decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(),wholeRange));
   SynMemberDefn.LetBindings (decls,isStatic,isRec,wholeRange)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_),body) = 
   let ignoredFreeAttrs,decls = declsPreAttrs [] None 
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),mWhole));
   SynExpr.LetOrUse (isRec,isUse,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange),attrs,vis,attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(),mWhole));
    let freeAttrs,decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec,decls,mWhole) ] 
    let attrDecls = if nonNil freeAttrs then [ SynModuleDecl.Attributes (freeAttrs,attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat m p = 
    match p with 
    | SynPat.Named (SynPat.Wild _,id,false,_,_) -> id 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let grabXmlDoc(parseState:IParseState,elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer,rhs parseState elemIdx)

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfNonNilAttrs(attrs:SynAttributes) =
    (attrs.Head.Range,attrs.Tail) ||> unionRangeWithListBy (fun a -> a.Range)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 159 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ELSE of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ENDIF of (range * string * Ast.LexerWhitespaceContinuation)
  | COMMENT of (Ast.LexerWhitespaceContinuation)
  | WHITESPACE of (Ast.LexerWhitespaceContinuation)
  | HASH_LINE of (Ast.LexerWhitespaceContinuation)
  | HASH_LIGHT of (Ast.LexerWhitespaceContinuation)
  | INACTIVECODE of (Ast.LexerWhitespaceContinuation)
  | LINE_COMMENT of (Ast.LexerWhitespaceContinuation)
  | STRING_TEXT of (Ast.LexerWhitespaceContinuation)
  | EOF of (Ast.LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM__starttypedSeqExprEOF
    | NONTERM__starttypEOF
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_inlineAssemblyTyconRepr
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_openDecl
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_rationalConstant
    | NONTERM_atomicUnsignedRationalConstant
    | NONTERM_atomicRationalConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_typedSeqExprEOF
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRangeSeqExpr
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_inlineAssemblyExpr
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_opt_inlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_forLoopDirection
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_typEOF
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_stringOrKeywordString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | OBLOCKEND_COMING_SOON  -> 15 
  | OBLOCKEND_IS_HERE  -> 16 
  | ORIGHT_BLOCK_END  -> 17 
  | ODECLEND  -> 18 
  | OEND  -> 19 
  | OBLOCKSEP  -> 20 
  | OBLOCKBEGIN  -> 21 
  | ORESET  -> 22 
  | OFUN  -> 23 
  | OFUNCTION  -> 24 
  | OWITH  -> 25 
  | OELSE  -> 26 
  | OTHEN  -> 27 
  | ODO_BANG  -> 28 
  | ODO  -> 29 
  | OBINDER _ -> 30 
  | OLET _ -> 31 
  | HIGH_PRECEDENCE_TYAPP  -> 32 
  | HIGH_PRECEDENCE_PAREN_APP  -> 33 
  | HIGH_PRECEDENCE_BRACK_APP  -> 34 
  | TYPE_COMING_SOON  -> 35 
  | TYPE_IS_HERE  -> 36 
  | MODULE_COMING_SOON  -> 37 
  | MODULE_IS_HERE  -> 38 
  | EXTERN  -> 39 
  | VOID  -> 40 
  | PUBLIC  -> 41 
  | PRIVATE  -> 42 
  | INTERNAL  -> 43 
  | GLOBAL  -> 44 
  | STATIC  -> 45 
  | MEMBER  -> 46 
  | CLASS  -> 47 
  | ABSTRACT  -> 48 
  | OVERRIDE  -> 49 
  | DEFAULT  -> 50 
  | CONSTRUCTOR  -> 51 
  | INHERIT  -> 52 
  | GREATER_RBRACK  -> 53 
  | STRUCT  -> 54 
  | SIG  -> 55 
  | BAR  -> 56 
  | RBRACK  -> 57 
  | RBRACE  -> 58 
  | RBRACE_COMING_SOON  -> 59 
  | RBRACE_IS_HERE  -> 60 
  | MINUS  -> 61 
  | DOLLAR  -> 62 
  | LBRACE_LESS  -> 63 
  | BAR_RBRACK  -> 64 
  | GREATER_RBRACE  -> 65 
  | UNDERSCORE  -> 66 
  | SEMICOLON_SEMICOLON  -> 67 
  | LARROW  -> 68 
  | EQUALS  -> 69 
  | LBRACK  -> 70 
  | LBRACK_BAR  -> 71 
  | LBRACK_LESS  -> 72 
  | LBRACE  -> 73 
  | QMARK  -> 74 
  | QMARK_QMARK  -> 75 
  | DOT  -> 76 
  | COLON  -> 77 
  | COLON_COLON  -> 78 
  | COLON_GREATER  -> 79 
  | COLON_QMARK_GREATER  -> 80 
  | COLON_QMARK  -> 81 
  | COLON_EQUALS  -> 82 
  | SEMICOLON  -> 83 
  | WHEN  -> 84 
  | WHILE  -> 85 
  | WITH  -> 86 
  | HASH  -> 87 
  | AMP  -> 88 
  | AMP_AMP  -> 89 
  | QUOTE  -> 90 
  | LPAREN  -> 91 
  | RPAREN  -> 92 
  | RPAREN_COMING_SOON  -> 93 
  | RPAREN_IS_HERE  -> 94 
  | STAR  -> 95 
  | COMMA  -> 96 
  | RARROW  -> 97 
  | GREATER_BAR_RBRACK  -> 98 
  | LPAREN_STAR_RPAREN  -> 99 
  | OPEN  -> 100 
  | OR  -> 101 
  | REC  -> 102 
  | THEN  -> 103 
  | TO  -> 104 
  | TRUE  -> 105 
  | TRY  -> 106 
  | TYPE  -> 107 
  | VAL  -> 108 
  | INLINE  -> 109 
  | INTERFACE  -> 110 
  | INSTANCE  -> 111 
  | CONST  -> 112 
  | LAZY  -> 113 
  | OLAZY  -> 114 
  | MATCH  -> 115 
  | MUTABLE  -> 116 
  | NEW  -> 117 
  | OF  -> 118 
  | EXCEPTION  -> 119 
  | FALSE  -> 120 
  | FOR  -> 121 
  | FUN  -> 122 
  | FUNCTION  -> 123 
  | IF  -> 124 
  | IN  -> 125 
  | JOIN_IN  -> 126 
  | FINALLY  -> 127 
  | DO_BANG  -> 128 
  | AND  -> 129 
  | AS  -> 130 
  | ASSERT  -> 131 
  | OASSERT  -> 132 
  | ASR  -> 133 
  | BEGIN  -> 134 
  | DO  -> 135 
  | DONE  -> 136 
  | DOWNTO  -> 137 
  | ELSE  -> 138 
  | ELIF  -> 139 
  | END  -> 140 
  | DOT_DOT  -> 141 
  | BAR_BAR  -> 142 
  | UPCAST  -> 143 
  | DOWNCAST  -> 144 
  | NULL  -> 145 
  | RESERVED  -> 146 
  | MODULE  -> 147 
  | NAMESPACE  -> 148 
  | DELEGATE  -> 149 
  | CONSTRAINT  -> 150 
  | BASE  -> 151 
  | LQUOTE _ -> 152 
  | RQUOTE _ -> 153 
  | RQUOTE_DOT _ -> 154 
  | PERCENT_OP _ -> 155 
  | BINDER _ -> 156 
  | LESS _ -> 157 
  | GREATER _ -> 158 
  | LET _ -> 159 
  | YIELD _ -> 160 
  | YIELD_BANG _ -> 161 
  | BIGNUM _ -> 162 
  | DECIMAL _ -> 163 
  | CHAR _ -> 164 
  | IEEE64 _ -> 165 
  | IEEE32 _ -> 166 
  | NATIVEINT _ -> 167 
  | UNATIVEINT _ -> 168 
  | UINT64 _ -> 169 
  | UINT32 _ -> 170 
  | UINT16 _ -> 171 
  | UINT8 _ -> 172 
  | INT64 _ -> 173 
  | INT32 _ -> 174 
  | INT32_DOT_DOT _ -> 175 
  | INT16 _ -> 176 
  | INT8 _ -> 177 
  | FUNKY_OPERATOR_NAME _ -> 178 
  | ADJACENT_PREFIX_OP _ -> 179 
  | PLUS_MINUS_OP _ -> 180 
  | INFIX_AMP_OP _ -> 181 
  | INFIX_STAR_DIV_MOD_OP _ -> 182 
  | PREFIX_OP _ -> 183 
  | INFIX_BAR_OP _ -> 184 
  | INFIX_AT_HAT_OP _ -> 185 
  | INFIX_COMPARE_OP _ -> 186 
  | INFIX_STAR_STAR_OP _ -> 187 
  | IDENT _ -> 188 
  | KEYWORD_STRING _ -> 189 
  | STRING _ -> 190 
  | BYTEARRAY _ -> 191 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 16 -> TOKEN_OBLOCKEND_IS_HERE 
  | 17 -> TOKEN_ORIGHT_BLOCK_END 
  | 18 -> TOKEN_ODECLEND 
  | 19 -> TOKEN_OEND 
  | 20 -> TOKEN_OBLOCKSEP 
  | 21 -> TOKEN_OBLOCKBEGIN 
  | 22 -> TOKEN_ORESET 
  | 23 -> TOKEN_OFUN 
  | 24 -> TOKEN_OFUNCTION 
  | 25 -> TOKEN_OWITH 
  | 26 -> TOKEN_OELSE 
  | 27 -> TOKEN_OTHEN 
  | 28 -> TOKEN_ODO_BANG 
  | 29 -> TOKEN_ODO 
  | 30 -> TOKEN_OBINDER 
  | 31 -> TOKEN_OLET 
  | 32 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 33 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 34 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 35 -> TOKEN_TYPE_COMING_SOON 
  | 36 -> TOKEN_TYPE_IS_HERE 
  | 37 -> TOKEN_MODULE_COMING_SOON 
  | 38 -> TOKEN_MODULE_IS_HERE 
  | 39 -> TOKEN_EXTERN 
  | 40 -> TOKEN_VOID 
  | 41 -> TOKEN_PUBLIC 
  | 42 -> TOKEN_PRIVATE 
  | 43 -> TOKEN_INTERNAL 
  | 44 -> TOKEN_GLOBAL 
  | 45 -> TOKEN_STATIC 
  | 46 -> TOKEN_MEMBER 
  | 47 -> TOKEN_CLASS 
  | 48 -> TOKEN_ABSTRACT 
  | 49 -> TOKEN_OVERRIDE 
  | 50 -> TOKEN_DEFAULT 
  | 51 -> TOKEN_CONSTRUCTOR 
  | 52 -> TOKEN_INHERIT 
  | 53 -> TOKEN_GREATER_RBRACK 
  | 54 -> TOKEN_STRUCT 
  | 55 -> TOKEN_SIG 
  | 56 -> TOKEN_BAR 
  | 57 -> TOKEN_RBRACK 
  | 58 -> TOKEN_RBRACE 
  | 59 -> TOKEN_RBRACE_COMING_SOON 
  | 60 -> TOKEN_RBRACE_IS_HERE 
  | 61 -> TOKEN_MINUS 
  | 62 -> TOKEN_DOLLAR 
  | 63 -> TOKEN_LBRACE_LESS 
  | 64 -> TOKEN_BAR_RBRACK 
  | 65 -> TOKEN_GREATER_RBRACE 
  | 66 -> TOKEN_UNDERSCORE 
  | 67 -> TOKEN_SEMICOLON_SEMICOLON 
  | 68 -> TOKEN_LARROW 
  | 69 -> TOKEN_EQUALS 
  | 70 -> TOKEN_LBRACK 
  | 71 -> TOKEN_LBRACK_BAR 
  | 72 -> TOKEN_LBRACK_LESS 
  | 73 -> TOKEN_LBRACE 
  | 74 -> TOKEN_QMARK 
  | 75 -> TOKEN_QMARK_QMARK 
  | 76 -> TOKEN_DOT 
  | 77 -> TOKEN_COLON 
  | 78 -> TOKEN_COLON_COLON 
  | 79 -> TOKEN_COLON_GREATER 
  | 80 -> TOKEN_COLON_QMARK_GREATER 
  | 81 -> TOKEN_COLON_QMARK 
  | 82 -> TOKEN_COLON_EQUALS 
  | 83 -> TOKEN_SEMICOLON 
  | 84 -> TOKEN_WHEN 
  | 85 -> TOKEN_WHILE 
  | 86 -> TOKEN_WITH 
  | 87 -> TOKEN_HASH 
  | 88 -> TOKEN_AMP 
  | 89 -> TOKEN_AMP_AMP 
  | 90 -> TOKEN_QUOTE 
  | 91 -> TOKEN_LPAREN 
  | 92 -> TOKEN_RPAREN 
  | 93 -> TOKEN_RPAREN_COMING_SOON 
  | 94 -> TOKEN_RPAREN_IS_HERE 
  | 95 -> TOKEN_STAR 
  | 96 -> TOKEN_COMMA 
  | 97 -> TOKEN_RARROW 
  | 98 -> TOKEN_GREATER_BAR_RBRACK 
  | 99 -> TOKEN_LPAREN_STAR_RPAREN 
  | 100 -> TOKEN_OPEN 
  | 101 -> TOKEN_OR 
  | 102 -> TOKEN_REC 
  | 103 -> TOKEN_THEN 
  | 104 -> TOKEN_TO 
  | 105 -> TOKEN_TRUE 
  | 106 -> TOKEN_TRY 
  | 107 -> TOKEN_TYPE 
  | 108 -> TOKEN_VAL 
  | 109 -> TOKEN_INLINE 
  | 110 -> TOKEN_INTERFACE 
  | 111 -> TOKEN_INSTANCE 
  | 112 -> TOKEN_CONST 
  | 113 -> TOKEN_LAZY 
  | 114 -> TOKEN_OLAZY 
  | 115 -> TOKEN_MATCH 
  | 116 -> TOKEN_MUTABLE 
  | 117 -> TOKEN_NEW 
  | 118 -> TOKEN_OF 
  | 119 -> TOKEN_EXCEPTION 
  | 120 -> TOKEN_FALSE 
  | 121 -> TOKEN_FOR 
  | 122 -> TOKEN_FUN 
  | 123 -> TOKEN_FUNCTION 
  | 124 -> TOKEN_IF 
  | 125 -> TOKEN_IN 
  | 126 -> TOKEN_JOIN_IN 
  | 127 -> TOKEN_FINALLY 
  | 128 -> TOKEN_DO_BANG 
  | 129 -> TOKEN_AND 
  | 130 -> TOKEN_AS 
  | 131 -> TOKEN_ASSERT 
  | 132 -> TOKEN_OASSERT 
  | 133 -> TOKEN_ASR 
  | 134 -> TOKEN_BEGIN 
  | 135 -> TOKEN_DO 
  | 136 -> TOKEN_DONE 
  | 137 -> TOKEN_DOWNTO 
  | 138 -> TOKEN_ELSE 
  | 139 -> TOKEN_ELIF 
  | 140 -> TOKEN_END 
  | 141 -> TOKEN_DOT_DOT 
  | 142 -> TOKEN_BAR_BAR 
  | 143 -> TOKEN_UPCAST 
  | 144 -> TOKEN_DOWNCAST 
  | 145 -> TOKEN_NULL 
  | 146 -> TOKEN_RESERVED 
  | 147 -> TOKEN_MODULE 
  | 148 -> TOKEN_NAMESPACE 
  | 149 -> TOKEN_DELEGATE 
  | 150 -> TOKEN_CONSTRAINT 
  | 151 -> TOKEN_BASE 
  | 152 -> TOKEN_LQUOTE 
  | 153 -> TOKEN_RQUOTE 
  | 154 -> TOKEN_RQUOTE_DOT 
  | 155 -> TOKEN_PERCENT_OP 
  | 156 -> TOKEN_BINDER 
  | 157 -> TOKEN_LESS 
  | 158 -> TOKEN_GREATER 
  | 159 -> TOKEN_LET 
  | 160 -> TOKEN_YIELD 
  | 161 -> TOKEN_YIELD_BANG 
  | 162 -> TOKEN_BIGNUM 
  | 163 -> TOKEN_DECIMAL 
  | 164 -> TOKEN_CHAR 
  | 165 -> TOKEN_IEEE64 
  | 166 -> TOKEN_IEEE32 
  | 167 -> TOKEN_NATIVEINT 
  | 168 -> TOKEN_UNATIVEINT 
  | 169 -> TOKEN_UINT64 
  | 170 -> TOKEN_UINT32 
  | 171 -> TOKEN_UINT16 
  | 172 -> TOKEN_UINT8 
  | 173 -> TOKEN_INT64 
  | 174 -> TOKEN_INT32 
  | 175 -> TOKEN_INT32_DOT_DOT 
  | 176 -> TOKEN_INT16 
  | 177 -> TOKEN_INT8 
  | 178 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 179 -> TOKEN_ADJACENT_PREFIX_OP 
  | 180 -> TOKEN_PLUS_MINUS_OP 
  | 181 -> TOKEN_INFIX_AMP_OP 
  | 182 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 183 -> TOKEN_PREFIX_OP 
  | 184 -> TOKEN_INFIX_BAR_OP 
  | 185 -> TOKEN_INFIX_AT_HAT_OP 
  | 186 -> TOKEN_INFIX_COMPARE_OP 
  | 187 -> TOKEN_INFIX_STAR_STAR_OP 
  | 188 -> TOKEN_IDENT 
  | 189 -> TOKEN_KEYWORD_STRING 
  | 190 -> TOKEN_STRING 
  | 191 -> TOKEN_BYTEARRAY 
  | 194 -> TOKEN_end_of_input
  | 192 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM__starttypedSeqExprEOF 
    | 4 -> NONTERM__starttypEOF 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interaction 
    | 7 -> NONTERM_interaction 
    | 8 -> NONTERM_interactiveTerminator 
    | 9 -> NONTERM_interactiveTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveDefns 
    | 18 -> NONTERM_interactiveDefns 
    | 19 -> NONTERM_interactiveExpr 
    | 20 -> NONTERM_interactiveHash 
    | 21 -> NONTERM_interactiveSeparators 
    | 22 -> NONTERM_interactiveSeparators 
    | 23 -> NONTERM_interactiveSeparator 
    | 24 -> NONTERM_interactiveSeparator 
    | 25 -> NONTERM_hashDirective 
    | 26 -> NONTERM_hashDirectiveArgs 
    | 27 -> NONTERM_hashDirectiveArgs 
    | 28 -> NONTERM_hashDirectiveArg 
    | 29 -> NONTERM_signatureFile 
    | 30 -> NONTERM_signatureFile 
    | 31 -> NONTERM_signatureFile 
    | 32 -> NONTERM_moduleIntro 
    | 33 -> NONTERM_namespaceIntro 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecs 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpecList 
    | 38 -> NONTERM_fileNamespaceSpec 
    | 39 -> NONTERM_fileModuleSpec 
    | 40 -> NONTERM_fileModuleSpec 
    | 41 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 46 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 48 -> NONTERM_moduleSpfns 
    | 49 -> NONTERM_moduleSpfns 
    | 50 -> NONTERM_moduleSpfns 
    | 51 -> NONTERM_moduleSpfn 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_moduleSpfn 
    | 57 -> NONTERM_moduleSpfn 
    | 58 -> NONTERM_valSpfn 
    | 59 -> NONTERM_optLiteralValueSpfn 
    | 60 -> NONTERM_optLiteralValueSpfn 
    | 61 -> NONTERM_optLiteralValueSpfn 
    | 62 -> NONTERM_moduleSpecBlock 
    | 63 -> NONTERM_moduleSpecBlock 
    | 64 -> NONTERM_moduleSpecBlock 
    | 65 -> NONTERM_tyconSpfns 
    | 66 -> NONTERM_tyconSpfnList 
    | 67 -> NONTERM_tyconSpfnList 
    | 68 -> NONTERM_tyconSpfn 
    | 69 -> NONTERM_tyconSpfn 
    | 70 -> NONTERM_tyconSpfnRhsBlock 
    | 71 -> NONTERM_tyconSpfnRhsBlock 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconSpfnRhs 
    | 74 -> NONTERM_tyconSpfnRhs 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_tyconClassSpfn 
    | 78 -> NONTERM_tyconClassSpfn 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlockKindUnspecified 
    | 82 -> NONTERM_classSpfnBlockKindUnspecified 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnBlock 
    | 85 -> NONTERM_classSpfnBlock 
    | 86 -> NONTERM_classSpfnMembers 
    | 87 -> NONTERM_classSpfnMembers 
    | 88 -> NONTERM_classSpfnMembersAtLeastOne 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfn 
    | 95 -> NONTERM_classMemberSpfn 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSet 
    | 99 -> NONTERM_classMemberSpfnGetSet 
    | 100 -> NONTERM_classMemberSpfnGetSetElements 
    | 101 -> NONTERM_classMemberSpfnGetSetElements 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_memberSpecFlags 
    | 104 -> NONTERM_memberSpecFlags 
    | 105 -> NONTERM_exconSpfn 
    | 106 -> NONTERM_opt_classSpfn 
    | 107 -> NONTERM_opt_classSpfn 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_implementationFile 
    | 110 -> NONTERM_implementationFile 
    | 111 -> NONTERM_fileNamespaceImpls 
    | 112 -> NONTERM_fileNamespaceImpls 
    | 113 -> NONTERM_fileNamespaceImplList 
    | 114 -> NONTERM_fileNamespaceImplList 
    | 115 -> NONTERM_fileNamespaceImpl 
    | 116 -> NONTERM_fileModuleImpl 
    | 117 -> NONTERM_fileModuleImpl 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 122 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 123 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefnsOrExpr 
    | 128 -> NONTERM_moduleDefnsOrExpr 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefns 
    | 133 -> NONTERM_moduleDefns 
    | 134 -> NONTERM_moduleDefnOrDirective 
    | 135 -> NONTERM_moduleDefnOrDirective 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_moduleDefn 
    | 143 -> NONTERM_moduleDefn 
    | 144 -> NONTERM_namedModuleAbbrevBlock 
    | 145 -> NONTERM_namedModuleAbbrevBlock 
    | 146 -> NONTERM_namedModuleDefnBlock 
    | 147 -> NONTERM_namedModuleDefnBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_namedModuleDefnBlock 
    | 152 -> NONTERM_namedModuleDefnBlock 
    | 153 -> NONTERM_wrappedNamedModuleDefn 
    | 154 -> NONTERM_wrappedNamedModuleDefn 
    | 155 -> NONTERM_wrappedNamedModuleDefn 
    | 156 -> NONTERM_tyconDefnAugmentation 
    | 157 -> NONTERM_opt_attributes 
    | 158 -> NONTERM_opt_attributes 
    | 159 -> NONTERM_attributes 
    | 160 -> NONTERM_attributes 
    | 161 -> NONTERM_attributeList 
    | 162 -> NONTERM_attributeList 
    | 163 -> NONTERM_attributeList 
    | 164 -> NONTERM_attributeList 
    | 165 -> NONTERM_attributeListElements 
    | 166 -> NONTERM_attributeListElements 
    | 167 -> NONTERM_attribute 
    | 168 -> NONTERM_attribute 
    | 169 -> NONTERM_attribute 
    | 170 -> NONTERM_attributeTarget 
    | 171 -> NONTERM_attributeTarget 
    | 172 -> NONTERM_attributeTarget 
    | 173 -> NONTERM_attributeTarget 
    | 174 -> NONTERM_memberFlags 
    | 175 -> NONTERM_memberFlags 
    | 176 -> NONTERM_memberFlags 
    | 177 -> NONTERM_memberFlags 
    | 178 -> NONTERM_typeNameInfo 
    | 179 -> NONTERM_tyconDefnList 
    | 180 -> NONTERM_tyconDefnList 
    | 181 -> NONTERM_tyconDefn 
    | 182 -> NONTERM_tyconDefn 
    | 183 -> NONTERM_tyconDefn 
    | 184 -> NONTERM_tyconDefn 
    | 185 -> NONTERM_tyconDefnRhsBlock 
    | 186 -> NONTERM_tyconDefnRhsBlock 
    | 187 -> NONTERM_tyconDefnRhsBlock 
    | 188 -> NONTERM_tyconDefnRhs 
    | 189 -> NONTERM_tyconDefnRhs 
    | 190 -> NONTERM_tyconDefnRhs 
    | 191 -> NONTERM_tyconClassDefn 
    | 192 -> NONTERM_tyconClassDefn 
    | 193 -> NONTERM_tyconClassDefn 
    | 194 -> NONTERM_tyconClassDefn 
    | 195 -> NONTERM_classDefnBlockKindUnspecified 
    | 196 -> NONTERM_classDefnBlockKindUnspecified 
    | 197 -> NONTERM_classDefnBlock 
    | 198 -> NONTERM_classDefnBlock 
    | 199 -> NONTERM_classDefnBlock 
    | 200 -> NONTERM_classDefnMembers 
    | 201 -> NONTERM_classDefnMembers 
    | 202 -> NONTERM_classDefnMembers 
    | 203 -> NONTERM_classDefnMembersAtLeastOne 
    | 204 -> NONTERM_classDefnMemberGetSet 
    | 205 -> NONTERM_classDefnMemberGetSet 
    | 206 -> NONTERM_classDefnMemberGetSet 
    | 207 -> NONTERM_classDefnMemberGetSetElements 
    | 208 -> NONTERM_classDefnMemberGetSetElements 
    | 209 -> NONTERM_classDefnMemberGetSetElement 
    | 210 -> NONTERM_memberCore 
    | 211 -> NONTERM_memberCore 
    | 212 -> NONTERM_abstractMemberFlags 
    | 213 -> NONTERM_abstractMemberFlags 
    | 214 -> NONTERM_classDefnMember 
    | 215 -> NONTERM_classDefnMember 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_classDefnMember 
    | 224 -> NONTERM_classDefnMember 
    | 225 -> NONTERM_valDefnDecl 
    | 226 -> NONTERM_autoPropsDefnDecl 
    | 227 -> NONTERM_opt_typ 
    | 228 -> NONTERM_opt_typ 
    | 229 -> NONTERM_atomicPatternLongIdent 
    | 230 -> NONTERM_atomicPatternLongIdent 
    | 231 -> NONTERM_atomicPatternLongIdent 
    | 232 -> NONTERM_opt_access 
    | 233 -> NONTERM_opt_access 
    | 234 -> NONTERM_access 
    | 235 -> NONTERM_access 
    | 236 -> NONTERM_access 
    | 237 -> NONTERM_opt_declVisibility 
    | 238 -> NONTERM_opt_declVisibility 
    | 239 -> NONTERM_opt_interfaceImplDefn 
    | 240 -> NONTERM_opt_interfaceImplDefn 
    | 241 -> NONTERM_opt_classDefn 
    | 242 -> NONTERM_opt_classDefn 
    | 243 -> NONTERM_inheritsDefn 
    | 244 -> NONTERM_inheritsDefn 
    | 245 -> NONTERM_inheritsDefn 
    | 246 -> NONTERM_optAsSpec 
    | 247 -> NONTERM_optAsSpec 
    | 248 -> NONTERM_asSpec 
    | 249 -> NONTERM_optBaseSpec 
    | 250 -> NONTERM_optBaseSpec 
    | 251 -> NONTERM_baseSpec 
    | 252 -> NONTERM_baseSpec 
    | 253 -> NONTERM_objectImplementationBlock 
    | 254 -> NONTERM_objectImplementationBlock 
    | 255 -> NONTERM_objectImplementationBlock 
    | 256 -> NONTERM_objectImplementationMembers 
    | 257 -> NONTERM_objectImplementationMembers 
    | 258 -> NONTERM_objectImplementationMember 
    | 259 -> NONTERM_objectImplementationMember 
    | 260 -> NONTERM_objectImplementationMember 
    | 261 -> NONTERM_objectImplementationMember 
    | 262 -> NONTERM_memberOrOverride 
    | 263 -> NONTERM_memberOrOverride 
    | 264 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 265 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 266 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 267 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 268 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 269 -> NONTERM_braceFieldDeclList 
    | 270 -> NONTERM_braceFieldDeclList 
    | 271 -> NONTERM_braceFieldDeclList 
    | 272 -> NONTERM_inlineAssemblyTyconRepr 
    | 273 -> NONTERM_classOrInterfaceOrStruct 
    | 274 -> NONTERM_classOrInterfaceOrStruct 
    | 275 -> NONTERM_classOrInterfaceOrStruct 
    | 276 -> NONTERM_interfaceMember 
    | 277 -> NONTERM_interfaceMember 
    | 278 -> NONTERM_tyconNameAndTyparDecls 
    | 279 -> NONTERM_tyconNameAndTyparDecls 
    | 280 -> NONTERM_tyconNameAndTyparDecls 
    | 281 -> NONTERM_prefixTyparDecls 
    | 282 -> NONTERM_prefixTyparDecls 
    | 283 -> NONTERM_typarDeclList 
    | 284 -> NONTERM_typarDeclList 
    | 285 -> NONTERM_typarDecl 
    | 286 -> NONTERM_postfixTyparDecls 
    | 287 -> NONTERM_explicitValTyparDeclsCore 
    | 288 -> NONTERM_explicitValTyparDeclsCore 
    | 289 -> NONTERM_explicitValTyparDeclsCore 
    | 290 -> NONTERM_explicitValTyparDecls 
    | 291 -> NONTERM_opt_explicitValTyparDecls 
    | 292 -> NONTERM_opt_explicitValTyparDecls 
    | 293 -> NONTERM_opt_explicitValTyparDecls2 
    | 294 -> NONTERM_opt_explicitValTyparDecls2 
    | 295 -> NONTERM_opt_typeConstraints 
    | 296 -> NONTERM_opt_typeConstraints 
    | 297 -> NONTERM_typeConstraints 
    | 298 -> NONTERM_typeConstraints 
    | 299 -> NONTERM_typeConstraint 
    | 300 -> NONTERM_typeConstraint 
    | 301 -> NONTERM_typeConstraint 
    | 302 -> NONTERM_typeConstraint 
    | 303 -> NONTERM_typeConstraint 
    | 304 -> NONTERM_typeConstraint 
    | 305 -> NONTERM_typeConstraint 
    | 306 -> NONTERM_typeConstraint 
    | 307 -> NONTERM_typeConstraint 
    | 308 -> NONTERM_typeConstraint 
    | 309 -> NONTERM_typarAlts 
    | 310 -> NONTERM_typarAlts 
    | 311 -> NONTERM_unionTypeRepr 
    | 312 -> NONTERM_unionTypeRepr 
    | 313 -> NONTERM_unionTypeRepr 
    | 314 -> NONTERM_barAndgrabXmlDoc 
    | 315 -> NONTERM_attrUnionCaseDecls 
    | 316 -> NONTERM_attrUnionCaseDecls 
    | 317 -> NONTERM_attrUnionCaseDecl 
    | 318 -> NONTERM_attrUnionCaseDecl 
    | 319 -> NONTERM_attrUnionCaseDecl 
    | 320 -> NONTERM_attrUnionCaseDecl 
    | 321 -> NONTERM_unionCaseName 
    | 322 -> NONTERM_unionCaseName 
    | 323 -> NONTERM_unionCaseName 
    | 324 -> NONTERM_firstUnionCaseDeclOfMany 
    | 325 -> NONTERM_firstUnionCaseDeclOfMany 
    | 326 -> NONTERM_firstUnionCaseDeclOfMany 
    | 327 -> NONTERM_firstUnionCaseDecl 
    | 328 -> NONTERM_firstUnionCaseDecl 
    | 329 -> NONTERM_unionCaseReprElements 
    | 330 -> NONTERM_unionCaseReprElements 
    | 331 -> NONTERM_unionCaseReprElement 
    | 332 -> NONTERM_unionCaseReprElement 
    | 333 -> NONTERM_unionCaseRepr 
    | 334 -> NONTERM_unionCaseRepr 
    | 335 -> NONTERM_recdFieldDeclList 
    | 336 -> NONTERM_recdFieldDeclList 
    | 337 -> NONTERM_recdFieldDecl 
    | 338 -> NONTERM_fieldDecl 
    | 339 -> NONTERM_exconDefn 
    | 340 -> NONTERM_exceptionAndGrabDoc 
    | 341 -> NONTERM_exconCore 
    | 342 -> NONTERM_exconIntro 
    | 343 -> NONTERM_exconIntro 
    | 344 -> NONTERM_exconRepr 
    | 345 -> NONTERM_exconRepr 
    | 346 -> NONTERM_openDecl 
    | 347 -> NONTERM_defnBindings 
    | 348 -> NONTERM_defnBindings 
    | 349 -> NONTERM_doBinding 
    | 350 -> NONTERM_hardwhiteLetBindings 
    | 351 -> NONTERM_hardwhiteDoBinding 
    | 352 -> NONTERM_classDefnBindings 
    | 353 -> NONTERM_classDefnBindings 
    | 354 -> NONTERM_classDefnBindings 
    | 355 -> NONTERM_classDefnBindings 
    | 356 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 357 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 358 -> NONTERM_cPrototype 
    | 359 -> NONTERM_cArgs 
    | 360 -> NONTERM_cArgs 
    | 361 -> NONTERM_cArgs 
    | 362 -> NONTERM_cMoreArgs 
    | 363 -> NONTERM_cMoreArgs 
    | 364 -> NONTERM_cArg 
    | 365 -> NONTERM_cArg 
    | 366 -> NONTERM_cType 
    | 367 -> NONTERM_cType 
    | 368 -> NONTERM_cType 
    | 369 -> NONTERM_cType 
    | 370 -> NONTERM_cType 
    | 371 -> NONTERM_cRetType 
    | 372 -> NONTERM_cRetType 
    | 373 -> NONTERM_localBindings 
    | 374 -> NONTERM_moreLocalBindings 
    | 375 -> NONTERM_moreLocalBindings 
    | 376 -> NONTERM_attr_localBinding 
    | 377 -> NONTERM_attr_localBinding 
    | 378 -> NONTERM_localBinding 
    | 379 -> NONTERM_localBinding 
    | 380 -> NONTERM_localBinding 
    | 381 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 382 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 383 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 384 -> NONTERM_typedExprWithStaticOptimizations 
    | 385 -> NONTERM_opt_staticOptimizations 
    | 386 -> NONTERM_opt_staticOptimizations 
    | 387 -> NONTERM_staticOptimization 
    | 388 -> NONTERM_staticOptimizationConditions 
    | 389 -> NONTERM_staticOptimizationConditions 
    | 390 -> NONTERM_staticOptimizationCondition 
    | 391 -> NONTERM_staticOptimizationCondition 
    | 392 -> NONTERM_rawConstant 
    | 393 -> NONTERM_rawConstant 
    | 394 -> NONTERM_rawConstant 
    | 395 -> NONTERM_rawConstant 
    | 396 -> NONTERM_rawConstant 
    | 397 -> NONTERM_rawConstant 
    | 398 -> NONTERM_rawConstant 
    | 399 -> NONTERM_rawConstant 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_rawConstant 
    | 408 -> NONTERM_rawConstant 
    | 409 -> NONTERM_rationalConstant 
    | 410 -> NONTERM_rationalConstant 
    | 411 -> NONTERM_rationalConstant 
    | 412 -> NONTERM_rationalConstant 
    | 413 -> NONTERM_atomicUnsignedRationalConstant 
    | 414 -> NONTERM_atomicUnsignedRationalConstant 
    | 415 -> NONTERM_atomicRationalConstant 
    | 416 -> NONTERM_atomicRationalConstant 
    | 417 -> NONTERM_constant 
    | 418 -> NONTERM_constant 
    | 419 -> NONTERM_bindingPattern 
    | 420 -> NONTERM_simplePattern 
    | 421 -> NONTERM_simplePattern 
    | 422 -> NONTERM_simplePattern 
    | 423 -> NONTERM_simplePattern 
    | 424 -> NONTERM_simplePatternCommaList 
    | 425 -> NONTERM_simplePatternCommaList 
    | 426 -> NONTERM_simplePatterns 
    | 427 -> NONTERM_simplePatterns 
    | 428 -> NONTERM_simplePatterns 
    | 429 -> NONTERM_simplePatterns 
    | 430 -> NONTERM_simplePatterns 
    | 431 -> NONTERM_headBindingPattern 
    | 432 -> NONTERM_headBindingPattern 
    | 433 -> NONTERM_headBindingPattern 
    | 434 -> NONTERM_headBindingPattern 
    | 435 -> NONTERM_headBindingPattern 
    | 436 -> NONTERM_headBindingPattern 
    | 437 -> NONTERM_tuplePatternElements 
    | 438 -> NONTERM_tuplePatternElements 
    | 439 -> NONTERM_conjPatternElements 
    | 440 -> NONTERM_conjPatternElements 
    | 441 -> NONTERM_namePatPairs 
    | 442 -> NONTERM_namePatPairs 
    | 443 -> NONTERM_namePatPair 
    | 444 -> NONTERM_constrPattern 
    | 445 -> NONTERM_constrPattern 
    | 446 -> NONTERM_constrPattern 
    | 447 -> NONTERM_constrPattern 
    | 448 -> NONTERM_constrPattern 
    | 449 -> NONTERM_constrPattern 
    | 450 -> NONTERM_atomicPatsOrNamePatPairs 
    | 451 -> NONTERM_atomicPatsOrNamePatPairs 
    | 452 -> NONTERM_atomicPatterns 
    | 453 -> NONTERM_atomicPatterns 
    | 454 -> NONTERM_atomicPatterns 
    | 455 -> NONTERM_atomicPatterns 
    | 456 -> NONTERM_atomicPattern 
    | 457 -> NONTERM_atomicPattern 
    | 458 -> NONTERM_atomicPattern 
    | 459 -> NONTERM_atomicPattern 
    | 460 -> NONTERM_atomicPattern 
    | 461 -> NONTERM_atomicPattern 
    | 462 -> NONTERM_atomicPattern 
    | 463 -> NONTERM_atomicPattern 
    | 464 -> NONTERM_atomicPattern 
    | 465 -> NONTERM_atomicPattern 
    | 466 -> NONTERM_atomicPattern 
    | 467 -> NONTERM_atomicPattern 
    | 468 -> NONTERM_atomicPattern 
    | 469 -> NONTERM_atomicPattern 
    | 470 -> NONTERM_atomicPattern 
    | 471 -> NONTERM_atomicPattern 
    | 472 -> NONTERM_parenPatternBody 
    | 473 -> NONTERM_parenPatternBody 
    | 474 -> NONTERM_parenPattern 
    | 475 -> NONTERM_parenPattern 
    | 476 -> NONTERM_parenPattern 
    | 477 -> NONTERM_parenPattern 
    | 478 -> NONTERM_parenPattern 
    | 479 -> NONTERM_parenPattern 
    | 480 -> NONTERM_parenPattern 
    | 481 -> NONTERM_parenPattern 
    | 482 -> NONTERM_tupleParenPatternElements 
    | 483 -> NONTERM_tupleParenPatternElements 
    | 484 -> NONTERM_conjParenPatternElements 
    | 485 -> NONTERM_conjParenPatternElements 
    | 486 -> NONTERM_recordPatternElements 
    | 487 -> NONTERM_recordPatternElementsAux 
    | 488 -> NONTERM_recordPatternElementsAux 
    | 489 -> NONTERM_recordPatternElement 
    | 490 -> NONTERM_listPatternElements 
    | 491 -> NONTERM_listPatternElements 
    | 492 -> NONTERM_listPatternElements 
    | 493 -> NONTERM_typedSeqExprBlock 
    | 494 -> NONTERM_typedSeqExprBlock 
    | 495 -> NONTERM_typedSeqExprBlock 
    | 496 -> NONTERM_declExprBlock 
    | 497 -> NONTERM_declExprBlock 
    | 498 -> NONTERM_typedSeqExprBlockR 
    | 499 -> NONTERM_typedSeqExprBlockR 
    | 500 -> NONTERM_typedSeqExpr 
    | 501 -> NONTERM_typedSeqExpr 
    | 502 -> NONTERM_typedSeqExprEOF 
    | 503 -> NONTERM_seqExpr 
    | 504 -> NONTERM_seqExpr 
    | 505 -> NONTERM_seqExpr 
    | 506 -> NONTERM_seqExpr 
    | 507 -> NONTERM_seqExpr 
    | 508 -> NONTERM_seqExpr 
    | 509 -> NONTERM_recover 
    | 510 -> NONTERM_recover 
    | 511 -> NONTERM_declExpr 
    | 512 -> NONTERM_declExpr 
    | 513 -> NONTERM_declExpr 
    | 514 -> NONTERM_declExpr 
    | 515 -> NONTERM_declExpr 
    | 516 -> NONTERM_declExpr 
    | 517 -> NONTERM_declExpr 
    | 518 -> NONTERM_declExpr 
    | 519 -> NONTERM_declExpr 
    | 520 -> NONTERM_declExpr 
    | 521 -> NONTERM_declExpr 
    | 522 -> NONTERM_declExpr 
    | 523 -> NONTERM_declExpr 
    | 524 -> NONTERM_declExpr 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_declExpr 
    | 600 -> NONTERM_declExpr 
    | 601 -> NONTERM_declExpr 
    | 602 -> NONTERM_declExpr 
    | 603 -> NONTERM_declExpr 
    | 604 -> NONTERM_declExpr 
    | 605 -> NONTERM_declExpr 
    | 606 -> NONTERM_declExpr 
    | 607 -> NONTERM_declExpr 
    | 608 -> NONTERM_declExpr 
    | 609 -> NONTERM_declExpr 
    | 610 -> NONTERM_dynamicArg 
    | 611 -> NONTERM_dynamicArg 
    | 612 -> NONTERM_withClauses 
    | 613 -> NONTERM_withClauses 
    | 614 -> NONTERM_withClauses 
    | 615 -> NONTERM_withPatternClauses 
    | 616 -> NONTERM_withPatternClauses 
    | 617 -> NONTERM_withPatternClauses 
    | 618 -> NONTERM_withPatternClauses 
    | 619 -> NONTERM_patternAndGuard 
    | 620 -> NONTERM_patternClauses 
    | 621 -> NONTERM_patternClauses 
    | 622 -> NONTERM_patternClauses 
    | 623 -> NONTERM_patternClauses 
    | 624 -> NONTERM_patternClauses 
    | 625 -> NONTERM_patternGuard 
    | 626 -> NONTERM_patternGuard 
    | 627 -> NONTERM_patternResult 
    | 628 -> NONTERM_ifExprCases 
    | 629 -> NONTERM_ifExprThen 
    | 630 -> NONTERM_ifExprThen 
    | 631 -> NONTERM_ifExprThen 
    | 632 -> NONTERM_ifExprElifs 
    | 633 -> NONTERM_ifExprElifs 
    | 634 -> NONTERM_ifExprElifs 
    | 635 -> NONTERM_ifExprElifs 
    | 636 -> NONTERM_ifExprElifs 
    | 637 -> NONTERM_ifExprElifs 
    | 638 -> NONTERM_tupleExpr 
    | 639 -> NONTERM_tupleExpr 
    | 640 -> NONTERM_tupleExpr 
    | 641 -> NONTERM_tupleExpr 
    | 642 -> NONTERM_minusExpr 
    | 643 -> NONTERM_minusExpr 
    | 644 -> NONTERM_minusExpr 
    | 645 -> NONTERM_minusExpr 
    | 646 -> NONTERM_minusExpr 
    | 647 -> NONTERM_minusExpr 
    | 648 -> NONTERM_minusExpr 
    | 649 -> NONTERM_minusExpr 
    | 650 -> NONTERM_minusExpr 
    | 651 -> NONTERM_minusExpr 
    | 652 -> NONTERM_minusExpr 
    | 653 -> NONTERM_minusExpr 
    | 654 -> NONTERM_appExpr 
    | 655 -> NONTERM_appExpr 
    | 656 -> NONTERM_argExpr 
    | 657 -> NONTERM_argExpr 
    | 658 -> NONTERM_atomicExpr 
    | 659 -> NONTERM_atomicExpr 
    | 660 -> NONTERM_atomicExpr 
    | 661 -> NONTERM_atomicExpr 
    | 662 -> NONTERM_atomicExpr 
    | 663 -> NONTERM_atomicExpr 
    | 664 -> NONTERM_atomicExpr 
    | 665 -> NONTERM_atomicExpr 
    | 666 -> NONTERM_atomicExpr 
    | 667 -> NONTERM_atomicExpr 
    | 668 -> NONTERM_atomicExpr 
    | 669 -> NONTERM_atomicExpr 
    | 670 -> NONTERM_atomicExpr 
    | 671 -> NONTERM_atomicExpr 
    | 672 -> NONTERM_atomicExpr 
    | 673 -> NONTERM_atomicExprQualification 
    | 674 -> NONTERM_atomicExprQualification 
    | 675 -> NONTERM_atomicExprQualification 
    | 676 -> NONTERM_atomicExprQualification 
    | 677 -> NONTERM_atomicExprQualification 
    | 678 -> NONTERM_atomicExprQualification 
    | 679 -> NONTERM_atomicExprQualification 
    | 680 -> NONTERM_atomicExprQualification 
    | 681 -> NONTERM_atomicExprQualification 
    | 682 -> NONTERM_atomicExprQualification 
    | 683 -> NONTERM_atomicExprQualification 
    | 684 -> NONTERM_optRangeSeqExpr 
    | 685 -> NONTERM_optRangeSeqExpr 
    | 686 -> NONTERM_optRange 
    | 687 -> NONTERM_optRange 
    | 688 -> NONTERM_optRange 
    | 689 -> NONTERM_optRange 
    | 690 -> NONTERM_optRange 
    | 691 -> NONTERM_atomicExprAfterType 
    | 692 -> NONTERM_atomicExprAfterType 
    | 693 -> NONTERM_atomicExprAfterType 
    | 694 -> NONTERM_atomicExprAfterType 
    | 695 -> NONTERM_atomicExprAfterType 
    | 696 -> NONTERM_atomicExprAfterType 
    | 697 -> NONTERM_atomicExprAfterType 
    | 698 -> NONTERM_atomicExprAfterType 
    | 699 -> NONTERM_atomicExprAfterType 
    | 700 -> NONTERM_beginEndExpr 
    | 701 -> NONTERM_beginEndExpr 
    | 702 -> NONTERM_beginEndExpr 
    | 703 -> NONTERM_beginEndExpr 
    | 704 -> NONTERM_quoteExpr 
    | 705 -> NONTERM_quoteExpr 
    | 706 -> NONTERM_quoteExpr 
    | 707 -> NONTERM_quoteExpr 
    | 708 -> NONTERM_arrayExpr 
    | 709 -> NONTERM_arrayExpr 
    | 710 -> NONTERM_arrayExpr 
    | 711 -> NONTERM_arrayExpr 
    | 712 -> NONTERM_parenExpr 
    | 713 -> NONTERM_parenExpr 
    | 714 -> NONTERM_parenExpr 
    | 715 -> NONTERM_parenExpr 
    | 716 -> NONTERM_parenExpr 
    | 717 -> NONTERM_parenExpr 
    | 718 -> NONTERM_parenExpr 
    | 719 -> NONTERM_parenExpr 
    | 720 -> NONTERM_parenExpr 
    | 721 -> NONTERM_parenExprBody 
    | 722 -> NONTERM_parenExprBody 
    | 723 -> NONTERM_parenExprBody 
    | 724 -> NONTERM_staticallyKnownHeadTypars 
    | 725 -> NONTERM_staticallyKnownHeadTypars 
    | 726 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 727 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 728 -> NONTERM_braceExpr 
    | 729 -> NONTERM_braceExpr 
    | 730 -> NONTERM_braceExpr 
    | 731 -> NONTERM_braceExpr 
    | 732 -> NONTERM_braceExpr 
    | 733 -> NONTERM_braceExprBody 
    | 734 -> NONTERM_braceExprBody 
    | 735 -> NONTERM_braceExprBody 
    | 736 -> NONTERM_listExprElements 
    | 737 -> NONTERM_listExprElements 
    | 738 -> NONTERM_monadicExprInitial 
    | 739 -> NONTERM_monadicExprInitial 
    | 740 -> NONTERM_rangeSequenceExpr 
    | 741 -> NONTERM_rangeSequenceExpr 
    | 742 -> NONTERM_rangeSequenceExpr 
    | 743 -> NONTERM_arrowThenExprR 
    | 744 -> NONTERM_forLoopBinder 
    | 745 -> NONTERM_forLoopBinder 
    | 746 -> NONTERM_forLoopBinder 
    | 747 -> NONTERM_forLoopBinder 
    | 748 -> NONTERM_forLoopRange 
    | 749 -> NONTERM_inlineAssemblyExpr 
    | 750 -> NONTERM_opt_curriedArgExprs 
    | 751 -> NONTERM_opt_curriedArgExprs 
    | 752 -> NONTERM_opt_atomicExprAfterType 
    | 753 -> NONTERM_opt_atomicExprAfterType 
    | 754 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 755 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 756 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 757 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 758 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 759 -> NONTERM_recdExpr 
    | 760 -> NONTERM_recdExpr 
    | 761 -> NONTERM_recdExpr 
    | 762 -> NONTERM_recdExpr 
    | 763 -> NONTERM_recdExpr 
    | 764 -> NONTERM_recdExpr 
    | 765 -> NONTERM_recdExpr 
    | 766 -> NONTERM_recdExpr 
    | 767 -> NONTERM_opt_seps_recd 
    | 768 -> NONTERM_opt_seps_recd 
    | 769 -> NONTERM_seps_recd 
    | 770 -> NONTERM_seps_recd 
    | 771 -> NONTERM_seps_recd 
    | 772 -> NONTERM_seps_recd 
    | 773 -> NONTERM_pathOrUnderscore 
    | 774 -> NONTERM_pathOrUnderscore 
    | 775 -> NONTERM_recdExprBindings 
    | 776 -> NONTERM_recdExprBindings 
    | 777 -> NONTERM_recdBinding 
    | 778 -> NONTERM_recdBinding 
    | 779 -> NONTERM_recdBinding 
    | 780 -> NONTERM_recdBinding 
    | 781 -> NONTERM_recdBinding 
    | 782 -> NONTERM_objExpr 
    | 783 -> NONTERM_objExpr 
    | 784 -> NONTERM_objExpr 
    | 785 -> NONTERM_objExprBaseCall 
    | 786 -> NONTERM_objExprBaseCall 
    | 787 -> NONTERM_objExprBaseCall 
    | 788 -> NONTERM_opt_objExprBindings 
    | 789 -> NONTERM_opt_objExprBindings 
    | 790 -> NONTERM_objExprBindings 
    | 791 -> NONTERM_objExprBindings 
    | 792 -> NONTERM_objExprBindings 
    | 793 -> NONTERM_objExprInterfaces 
    | 794 -> NONTERM_opt_objExprInterfaces 
    | 795 -> NONTERM_opt_objExprInterfaces 
    | 796 -> NONTERM_opt_objExprInterfaces 
    | 797 -> NONTERM_objExprInterface 
    | 798 -> NONTERM_forLoopDirection 
    | 799 -> NONTERM_forLoopDirection 
    | 800 -> NONTERM_anonLambdaExpr 
    | 801 -> NONTERM_anonLambdaExpr 
    | 802 -> NONTERM_anonLambdaExpr 
    | 803 -> NONTERM_anonLambdaExpr 
    | 804 -> NONTERM_anonLambdaExpr 
    | 805 -> NONTERM_anonLambdaExpr 
    | 806 -> NONTERM_anonLambdaExpr 
    | 807 -> NONTERM_anonLambdaExpr 
    | 808 -> NONTERM_anonMatchingExpr 
    | 809 -> NONTERM_anonMatchingExpr 
    | 810 -> NONTERM_typeWithTypeConstraints 
    | 811 -> NONTERM_typeWithTypeConstraints 
    | 812 -> NONTERM_topTypeWithTypeConstraints 
    | 813 -> NONTERM_topTypeWithTypeConstraints 
    | 814 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 815 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 816 -> NONTERM_topType 
    | 817 -> NONTERM_topType 
    | 818 -> NONTERM_topTupleType 
    | 819 -> NONTERM_topTupleType 
    | 820 -> NONTERM_topTupleTypeElements 
    | 821 -> NONTERM_topTupleTypeElements 
    | 822 -> NONTERM_topAppType 
    | 823 -> NONTERM_topAppType 
    | 824 -> NONTERM_topAppType 
    | 825 -> NONTERM_topAppType 
    | 826 -> NONTERM_topAppType 
    | 827 -> NONTERM_topAppType 
    | 828 -> NONTERM_typ 
    | 829 -> NONTERM_typ 
    | 830 -> NONTERM_typEOF 
    | 831 -> NONTERM_tupleType 
    | 832 -> NONTERM_tupleType 
    | 833 -> NONTERM_tupleType 
    | 834 -> NONTERM_tupleType 
    | 835 -> NONTERM_tupleOrQuotTypeElements 
    | 836 -> NONTERM_tupleOrQuotTypeElements 
    | 837 -> NONTERM_tupleOrQuotTypeElements 
    | 838 -> NONTERM_tupleTypeElements 
    | 839 -> NONTERM_tupleTypeElements 
    | 840 -> NONTERM_appTypeCon 
    | 841 -> NONTERM_appTypeCon 
    | 842 -> NONTERM_appTypeConPower 
    | 843 -> NONTERM_appTypeConPower 
    | 844 -> NONTERM_appType 
    | 845 -> NONTERM_appType 
    | 846 -> NONTERM_appType 
    | 847 -> NONTERM_appType 
    | 848 -> NONTERM_appType 
    | 849 -> NONTERM_appType 
    | 850 -> NONTERM_appType 
    | 851 -> NONTERM_arrayTypeSuffix 
    | 852 -> NONTERM_arrayTypeSuffix 
    | 853 -> NONTERM_arrayTypeSuffix 
    | 854 -> NONTERM_arrayTypeSuffix 
    | 855 -> NONTERM_appTypePrefixArguments 
    | 856 -> NONTERM_typeArgListElements 
    | 857 -> NONTERM_typeArgListElements 
    | 858 -> NONTERM_typeArgListElements 
    | 859 -> NONTERM_powerType 
    | 860 -> NONTERM_powerType 
    | 861 -> NONTERM_appTypeNonAtomicDeprecated 
    | 862 -> NONTERM_appTypeNonAtomicDeprecated 
    | 863 -> NONTERM_appTypeNonAtomicDeprecated 
    | 864 -> NONTERM_appTypeNonAtomicDeprecated 
    | 865 -> NONTERM_appTypeNonAtomicDeprecated 
    | 866 -> NONTERM_appTypeNonAtomicDeprecated 
    | 867 -> NONTERM_appTypeNonAtomicDeprecated 
    | 868 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 869 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 870 -> NONTERM_atomType 
    | 871 -> NONTERM_atomType 
    | 872 -> NONTERM_atomType 
    | 873 -> NONTERM_atomType 
    | 874 -> NONTERM_atomType 
    | 875 -> NONTERM_atomType 
    | 876 -> NONTERM_atomType 
    | 877 -> NONTERM_atomType 
    | 878 -> NONTERM_atomType 
    | 879 -> NONTERM_atomType 
    | 880 -> NONTERM_atomType 
    | 881 -> NONTERM_atomType 
    | 882 -> NONTERM_atomType 
    | 883 -> NONTERM_atomType 
    | 884 -> NONTERM_atomType 
    | 885 -> NONTERM_typeArgsNoHpaDeprecated 
    | 886 -> NONTERM_typeArgsNoHpaDeprecated 
    | 887 -> NONTERM_typeArgsActual 
    | 888 -> NONTERM_typeArgsActual 
    | 889 -> NONTERM_typeArgsActual 
    | 890 -> NONTERM_typeArgsActual 
    | 891 -> NONTERM_typeArgsActual 
    | 892 -> NONTERM_typeArgsActual 
    | 893 -> NONTERM_typeArgsActual 
    | 894 -> NONTERM_typeArgActual 
    | 895 -> NONTERM_typeArgActual 
    | 896 -> NONTERM_typeArgActual 
    | 897 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 898 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 899 -> NONTERM_dummyTypeArg 
    | 900 -> NONTERM_measureTypeArg 
    | 901 -> NONTERM_measureTypeArg 
    | 902 -> NONTERM_measureTypeAtom 
    | 903 -> NONTERM_measureTypeAtom 
    | 904 -> NONTERM_measureTypeAtom 
    | 905 -> NONTERM_measureTypePower 
    | 906 -> NONTERM_measureTypePower 
    | 907 -> NONTERM_measureTypePower 
    | 908 -> NONTERM_measureTypeSeq 
    | 909 -> NONTERM_measureTypeSeq 
    | 910 -> NONTERM_measureTypeExpr 
    | 911 -> NONTERM_measureTypeExpr 
    | 912 -> NONTERM_measureTypeExpr 
    | 913 -> NONTERM_measureTypeExpr 
    | 914 -> NONTERM_typar 
    | 915 -> NONTERM_typar 
    | 916 -> NONTERM_staticallyKnownHeadTypar 
    | 917 -> NONTERM_ident 
    | 918 -> NONTERM_path 
    | 919 -> NONTERM_path 
    | 920 -> NONTERM_path 
    | 921 -> NONTERM_path 
    | 922 -> NONTERM_opName 
    | 923 -> NONTERM_opName 
    | 924 -> NONTERM_opName 
    | 925 -> NONTERM_opName 
    | 926 -> NONTERM_opName 
    | 927 -> NONTERM_operatorName 
    | 928 -> NONTERM_operatorName 
    | 929 -> NONTERM_operatorName 
    | 930 -> NONTERM_operatorName 
    | 931 -> NONTERM_operatorName 
    | 932 -> NONTERM_operatorName 
    | 933 -> NONTERM_operatorName 
    | 934 -> NONTERM_operatorName 
    | 935 -> NONTERM_operatorName 
    | 936 -> NONTERM_operatorName 
    | 937 -> NONTERM_operatorName 
    | 938 -> NONTERM_operatorName 
    | 939 -> NONTERM_operatorName 
    | 940 -> NONTERM_operatorName 
    | 941 -> NONTERM_operatorName 
    | 942 -> NONTERM_operatorName 
    | 943 -> NONTERM_operatorName 
    | 944 -> NONTERM_operatorName 
    | 945 -> NONTERM_operatorName 
    | 946 -> NONTERM_operatorName 
    | 947 -> NONTERM_operatorName 
    | 948 -> NONTERM_operatorName 
    | 949 -> NONTERM_operatorName 
    | 950 -> NONTERM_operatorName 
    | 951 -> NONTERM_operatorName 
    | 952 -> NONTERM_operatorName 
    | 953 -> NONTERM_activePatternCaseName 
    | 954 -> NONTERM_activePatternCaseNames 
    | 955 -> NONTERM_activePatternCaseNames 
    | 956 -> NONTERM_identOrOp 
    | 957 -> NONTERM_identOrOp 
    | 958 -> NONTERM_pathOp 
    | 959 -> NONTERM_pathOp 
    | 960 -> NONTERM_pathOp 
    | 961 -> NONTERM_pathOp 
    | 962 -> NONTERM_nameop 
    | 963 -> NONTERM_topSeparator 
    | 964 -> NONTERM_topSeparator 
    | 965 -> NONTERM_topSeparator 
    | 966 -> NONTERM_topSeparators 
    | 967 -> NONTERM_topSeparators 
    | 968 -> NONTERM_opt_topSeparators 
    | 969 -> NONTERM_opt_topSeparators 
    | 970 -> NONTERM_seps 
    | 971 -> NONTERM_seps 
    | 972 -> NONTERM_seps 
    | 973 -> NONTERM_seps 
    | 974 -> NONTERM_declEnd 
    | 975 -> NONTERM_declEnd 
    | 976 -> NONTERM_declEnd 
    | 977 -> NONTERM_opt_declEnd 
    | 978 -> NONTERM_opt_declEnd 
    | 979 -> NONTERM_opt_declEnd 
    | 980 -> NONTERM_opt_declEnd 
    | 981 -> NONTERM_opt_ODECLEND 
    | 982 -> NONTERM_opt_ODECLEND 
    | 983 -> NONTERM_deprecated_opt_equals 
    | 984 -> NONTERM_deprecated_opt_equals 
    | 985 -> NONTERM_opt_OBLOCKSEP 
    | 986 -> NONTERM_opt_OBLOCKSEP 
    | 987 -> NONTERM_opt_seps 
    | 988 -> NONTERM_opt_seps 
    | 989 -> NONTERM_opt_rec 
    | 990 -> NONTERM_opt_rec 
    | 991 -> NONTERM_opt_bar 
    | 992 -> NONTERM_opt_bar 
    | 993 -> NONTERM_opt_inline 
    | 994 -> NONTERM_opt_inline 
    | 995 -> NONTERM_opt_mutable 
    | 996 -> NONTERM_opt_mutable 
    | 997 -> NONTERM_doToken 
    | 998 -> NONTERM_doToken 
    | 999 -> NONTERM_doneDeclEnd 
    | 1000 -> NONTERM_doneDeclEnd 
    | 1001 -> NONTERM_structOrBegin 
    | 1002 -> NONTERM_structOrBegin 
    | 1003 -> NONTERM_sigOrBegin 
    | 1004 -> NONTERM_sigOrBegin 
    | 1005 -> NONTERM_colonOrEquals 
    | 1006 -> NONTERM_colonOrEquals 
    | 1007 -> NONTERM_stringOrKeywordString 
    | 1008 -> NONTERM_stringOrKeywordString 
    | 1009 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1010 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1011 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1012 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1013 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1014 -> NONTERM_typeKeyword 
    | 1015 -> NONTERM_typeKeyword 
    | 1016 -> NONTERM_typeKeyword 
    | 1017 -> NONTERM_moduleKeyword 
    | 1018 -> NONTERM_moduleKeyword 
    | 1019 -> NONTERM_moduleKeyword 
    | 1020 -> NONTERM_rbrace 
    | 1021 -> NONTERM_rbrace 
    | 1022 -> NONTERM_rbrace 
    | 1023 -> NONTERM_rparen 
    | 1024 -> NONTERM_rparen 
    | 1025 -> NONTERM_rparen 
    | 1026 -> NONTERM_oblockend 
    | 1027 -> NONTERM_oblockend 
    | 1028 -> NONTERM_oblockend 
    | 1029 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1030 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1031 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1032 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1033 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1034 -> NONTERM_ends_coming_soon_or_recover 
    | 1035 -> NONTERM_ends_coming_soon_or_recover 
    | 1036 -> NONTERM_ends_coming_soon_or_recover 
    | 1037 -> NONTERM_ends_coming_soon_or_recover 
    | 1038 -> NONTERM_ends_coming_soon_or_recover 
    | 1039 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 194 
let _fsyacc_tagOfErrorTerminal = 192

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 15us; 24us; 15us; 26us; 15us; 4us; 65535us; 4us; 10us; 22us; 23us; 24us; 25us; 26us; 27us; 5us; 65535us; 4us; 16us; 22us; 16us; 24us; 16us; 26us; 16us; 28us; 29us; 4us; 65535us; 4us; 18us; 22us; 18us; 24us; 18us; 26us; 18us; 4us; 65535us; 4us; 20us; 22us; 20us; 24us; 20us; 26us; 20us; 4us; 65535us; 16us; 22us; 18us; 24us; 20us; 26us; 34us; 35us; 4us; 65535us; 16us; 34us; 18us; 34us; 20us; 34us; 34us; 34us; 23us; 65535us; 0us; 82us; 2us; 254us; 4us; 33us; 22us; 33us; 24us; 33us; 26us; 33us; 59us; 82us; 63us; 82us; 67us; 82us; 77us; 82us; 80us; 82us; 109us; 82us; 112us; 82us; 116us; 82us; 221us; 254us; 225us; 254us; 228us; 254us; 240us; 254us; 244us; 254us; 246us; 254us; 251us; 254us; 275us; 254us; 285us; 254us; 1us; 65535us; 39us; 40us; 1us; 65535us; 40us; 41us; 1us; 65535us; 0us; 1us; 6us; 65535us; 31us; 266us; 62us; 63us; 85us; 86us; 224us; 225us; 238us; 266us; 256us; 266us; 4us; 65535us; 54us; 58us; 56us; 58us; 216us; 220us; 218us; 220us; 1us; 65535us; 0us; 43us; 2us; 65535us; 54us; 55us; 56us; 57us; 2us; 65535us; 54us; 56us; 56us; 56us; 2us; 65535us; 0us; 54us; 59us; 60us; 3us; 65535us; 0us; 65us; 59us; 65us; 63us; 64us; 6us; 65535us; 0us; 66us; 59us; 66us; 63us; 66us; 67us; 68us; 112us; 113us; 116us; 117us; 9us; 65535us; 0us; 74us; 59us; 74us; 63us; 74us; 67us; 74us; 77us; 78us; 80us; 81us; 109us; 110us; 112us; 74us; 116us; 74us; 9us; 65535us; 0us; 76us; 59us; 76us; 63us; 76us; 67us; 76us; 77us; 76us; 80us; 76us; 109us; 76us; 112us; 76us; 116us; 76us; 9us; 65535us; 0us; 83us; 59us; 83us; 63us; 83us; 67us; 83us; 77us; 83us; 80us; 83us; 109us; 83us; 112us; 83us; 116us; 83us; 2us; 65535us; 102us; 103us; 177us; 178us; 1us; 65535us; 87us; 89us; 2us; 65535us; 62us; 90us; 85us; 90us; 2us; 65535us; 119us; 120us; 122us; 123us; 3us; 65535us; 119us; 121us; 122us; 121us; 188us; 189us; 1us; 65535us; 125us; 126us; 2us; 65535us; 125us; 135us; 128us; 129us; 2us; 65535us; 125us; 138us; 128us; 138us; 2us; 65535us; 125us; 142us; 128us; 142us; 3us; 65535us; 143us; 144us; 153us; 154us; 207us; 208us; 8us; 65535us; 128us; 150us; 130us; 131us; 143us; 161us; 149us; 150us; 153us; 161us; 157us; 158us; 164us; 165us; 207us; 161us; 8us; 65535us; 128us; 162us; 130us; 162us; 143us; 162us; 149us; 162us; 153us; 162us; 157us; 162us; 164us; 162us; 207us; 162us; 11us; 65535us; 128us; 163us; 130us; 163us; 143us; 163us; 149us; 163us; 153us; 163us; 157us; 163us; 164us; 163us; 207us; 163us; 588us; 589us; 595us; 596us; 1335us; 1336us; 3us; 65535us; 176us; 177us; 428us; 429us; 458us; 459us; 2us; 65535us; 193us; 194us; 195us; 196us; 2us; 65535us; 168us; 170us; 169us; 170us; 2us; 65535us; 62us; 91us; 85us; 91us; 5us; 65535us; 124us; 127us; 131us; 132us; 133us; 134us; 135us; 136us; 205us; 206us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 210us; 2us; 65535us; 216us; 217us; 218us; 219us; 2us; 65535us; 216us; 218us; 218us; 218us; 2us; 65535us; 2us; 216us; 221us; 222us; 3us; 65535us; 2us; 227us; 221us; 227us; 225us; 226us; 5us; 65535us; 2us; 235us; 221us; 235us; 225us; 235us; 228us; 229us; 285us; 286us; 9us; 65535us; 2us; 236us; 221us; 236us; 225us; 236us; 228us; 236us; 240us; 241us; 246us; 247us; 251us; 252us; 275us; 279us; 285us; 236us; 10us; 65535us; 2us; 242us; 221us; 242us; 225us; 242us; 228us; 242us; 240us; 242us; 244us; 245us; 246us; 242us; 251us; 242us; 275us; 242us; 285us; 242us; 10us; 65535us; 2us; 244us; 221us; 244us; 225us; 244us; 228us; 244us; 240us; 244us; 244us; 244us; 246us; 244us; 251us; 244us; 275us; 244us; 285us; 244us; 15us; 65535us; 2us; 253us; 4us; 28us; 22us; 28us; 24us; 28us; 26us; 28us; 28us; 28us; 221us; 253us; 225us; 253us; 228us; 253us; 240us; 253us; 244us; 253us; 246us; 253us; 251us; 253us; 275us; 253us; 285us; 253us; 1us; 65535us; 87us; 88us; 1us; 65535us; 267us; 268us; 2us; 65535us; 267us; 283us; 275us; 276us; 1us; 65535us; 340us; 343us; 80us; 65535us; 0us; 61us; 2us; 223us; 4us; 30us; 22us; 30us; 24us; 30us; 26us; 30us; 28us; 255us; 59us; 61us; 63us; 84us; 67us; 84us; 77us; 84us; 80us; 84us; 94us; 95us; 109us; 84us; 112us; 84us; 116us; 84us; 119us; 334us; 122us; 334us; 125us; 514us; 128us; 167us; 130us; 166us; 143us; 166us; 149us; 166us; 153us; 166us; 157us; 166us; 164us; 166us; 188us; 334us; 207us; 166us; 221us; 223us; 225us; 237us; 228us; 237us; 240us; 237us; 244us; 255us; 246us; 237us; 251us; 237us; 262us; 334us; 275us; 237us; 285us; 237us; 290us; 411us; 337us; 334us; 340us; 344us; 341us; 514us; 349us; 514us; 351us; 412us; 353us; 411us; 367us; 411us; 371us; 411us; 373us; 411us; 377us; 411us; 383us; 411us; 386us; 411us; 397us; 398us; 444us; 334us; 473us; 501us; 476us; 411us; 493us; 501us; 499us; 501us; 526us; 655us; 546us; 555us; 551us; 555us; 552us; 555us; 558us; 555us; 563us; 555us; 588us; 166us; 595us; 166us; 604us; 614us; 607us; 614us; 612us; 614us; 652us; 655us; 665us; 666us; 678us; 729us; 684us; 729us; 696us; 723us; 701us; 710us; 706us; 710us; 708us; 710us; 726us; 729us; 1335us; 166us; 1435us; 502us; 1437us; 729us; 116us; 65535us; 0us; 293us; 2us; 269us; 4us; 269us; 22us; 269us; 24us; 269us; 26us; 269us; 28us; 269us; 59us; 293us; 63us; 293us; 67us; 293us; 77us; 293us; 80us; 293us; 94us; 293us; 101us; 1493us; 109us; 293us; 112us; 293us; 116us; 293us; 119us; 293us; 122us; 293us; 125us; 293us; 128us; 293us; 130us; 293us; 140us; 1493us; 143us; 293us; 149us; 293us; 153us; 293us; 157us; 293us; 164us; 293us; 175us; 1493us; 188us; 293us; 191us; 1493us; 207us; 293us; 221us; 269us; 225us; 269us; 228us; 269us; 240us; 269us; 244us; 269us; 246us; 269us; 251us; 269us; 262us; 293us; 275us; 269us; 285us; 269us; 290us; 293us; 294us; 295us; 337us; 293us; 340us; 293us; 341us; 293us; 349us; 293us; 351us; 293us; 353us; 293us; 364us; 1493us; 367us; 293us; 371us; 293us; 373us; 293us; 377us; 293us; 383us; 293us; 386us; 293us; 397us; 293us; 427us; 1493us; 444us; 293us; 473us; 293us; 476us; 293us; 493us; 293us; 499us; 293us; 526us; 293us; 546us; 293us; 551us; 293us; 552us; 293us; 558us; 293us; 563us; 293us; 588us; 293us; 595us; 293us; 604us; 293us; 607us; 293us; 612us; 293us; 621us; 1493us; 652us; 293us; 665us; 293us; 678us; 293us; 684us; 293us; 696us; 293us; 701us; 293us; 706us; 293us; 708us; 293us; 726us; 293us; 802us; 802us; 803us; 802us; 805us; 802us; 838us; 907us; 850us; 907us; 866us; 907us; 869us; 907us; 881us; 907us; 902us; 907us; 907us; 907us; 908us; 907us; 910us; 907us; 911us; 907us; 912us; 907us; 913us; 907us; 920us; 907us; 922us; 907us; 1013us; 907us; 1155us; 907us; 1157us; 907us; 1162us; 907us; 1169us; 907us; 1335us; 293us; 1435us; 293us; 1437us; 293us; 1473us; 907us; 1475us; 907us; 1482us; 1493us; 1485us; 1493us; 1488us; 1493us; 1491us; 1493us; 116us; 65535us; 0us; 294us; 2us; 294us; 4us; 294us; 22us; 294us; 24us; 294us; 26us; 294us; 28us; 294us; 59us; 294us; 63us; 294us; 67us; 294us; 77us; 294us; 80us; 294us; 94us; 294us; 101us; 294us; 109us; 294us; 112us; 294us; 116us; 294us; 119us; 294us; 122us; 294us; 125us; 294us; 128us; 294us; 130us; 294us; 140us; 294us; 143us; 294us; 149us; 294us; 153us; 294us; 157us; 294us; 164us; 294us; 175us; 294us; 188us; 294us; 191us; 294us; 207us; 294us; 221us; 294us; 225us; 294us; 228us; 294us; 240us; 294us; 244us; 294us; 246us; 294us; 251us; 294us; 262us; 294us; 275us; 294us; 285us; 294us; 290us; 294us; 294us; 294us; 337us; 294us; 340us; 294us; 341us; 294us; 349us; 294us; 351us; 294us; 353us; 294us; 364us; 294us; 367us; 294us; 371us; 294us; 373us; 294us; 377us; 294us; 383us; 294us; 386us; 294us; 397us; 294us; 427us; 294us; 444us; 294us; 473us; 294us; 476us; 294us; 493us; 294us; 499us; 294us; 526us; 294us; 546us; 294us; 551us; 294us; 552us; 294us; 558us; 294us; 563us; 294us; 588us; 294us; 595us; 294us; 604us; 294us; 607us; 294us; 612us; 294us; 621us; 294us; 652us; 294us; 665us; 294us; 678us; 294us; 684us; 294us; 696us; 294us; 701us; 294us; 706us; 294us; 708us; 294us; 726us; 294us; 802us; 294us; 803us; 294us; 805us; 294us; 838us; 294us; 850us; 294us; 866us; 294us; 869us; 294us; 881us; 294us; 902us; 294us; 907us; 294us; 908us; 294us; 910us; 294us; 911us; 294us; 912us; 294us; 913us; 294us; 920us; 294us; 922us; 294us; 1013us; 294us; 1155us; 294us; 1157us; 294us; 1162us; 294us; 1169us; 294us; 1335us; 294us; 1435us; 294us; 1437us; 294us; 1473us; 294us; 1475us; 294us; 1482us; 294us; 1485us; 294us; 1488us; 294us; 1491us; 294us; 1us; 65535us; 296us; 297us; 2us; 65535us; 296us; 306us; 307us; 308us; 2us; 65535us; 296us; 312us; 307us; 312us; 4us; 65535us; 168us; 202us; 169us; 202us; 413us; 417us; 414us; 417us; 6us; 65535us; 119us; 124us; 122us; 124us; 188us; 124us; 262us; 340us; 337us; 340us; 444us; 340us; 2us; 65535us; 263us; 264us; 338us; 339us; 3us; 65535us; 262us; 263us; 337us; 338us; 444us; 445us; 2us; 65535us; 341us; 342us; 349us; 350us; 3us; 65535us; 341us; 359us; 349us; 359us; 351us; 352us; 3us; 65535us; 341us; 362us; 349us; 362us; 351us; 362us; 3us; 65535us; 341us; 366us; 349us; 366us; 351us; 366us; 3us; 65535us; 290us; 291us; 367us; 368us; 476us; 477us; 10us; 65535us; 290us; 381us; 351us; 374us; 353us; 354us; 367us; 381us; 371us; 384us; 373us; 374us; 377us; 378us; 383us; 384us; 386us; 387us; 476us; 381us; 10us; 65535us; 290us; 382us; 351us; 382us; 353us; 382us; 367us; 382us; 371us; 382us; 373us; 382us; 377us; 382us; 383us; 382us; 386us; 382us; 476us; 382us; 1us; 65535us; 405us; 408us; 2us; 65535us; 388us; 389us; 390us; 391us; 3us; 65535us; 388us; 394us; 390us; 394us; 395us; 396us; 3us; 65535us; 417us; 418us; 503us; 504us; 509us; 510us; 2us; 65535us; 413us; 423us; 414us; 423us; 10us; 65535us; 290us; 385us; 351us; 385us; 353us; 385us; 367us; 385us; 371us; 385us; 373us; 385us; 377us; 385us; 383us; 385us; 386us; 385us; 476us; 385us; 3us; 65535us; 329us; 434us; 413us; 432us; 414us; 432us; 2us; 65535us; 417us; 436us; 503us; 506us; 1us; 65535us; 455us; 456us; 41us; 65535us; 398us; 840us; 403us; 840us; 438us; 876us; 733us; 840us; 823us; 840us; 824us; 840us; 828us; 840us; 829us; 840us; 830us; 840us; 831us; 840us; 838us; 840us; 841us; 876us; 843us; 876us; 845us; 876us; 850us; 840us; 854us; 876us; 856us; 876us; 858us; 876us; 866us; 840us; 869us; 840us; 881us; 840us; 902us; 840us; 907us; 840us; 908us; 840us; 910us; 840us; 911us; 840us; 912us; 840us; 913us; 840us; 920us; 840us; 922us; 840us; 1013us; 840us; 1040us; 840us; 1046us; 840us; 1155us; 840us; 1157us; 840us; 1162us; 840us; 1169us; 840us; 1455us; 876us; 1460us; 876us; 1473us; 840us; 1475us; 840us; 10us; 65535us; 49us; 50us; 97us; 98us; 171us; 172us; 334us; 540us; 447us; 448us; 453us; 454us; 614us; 615us; 657us; 658us; 666us; 667us; 697us; 698us; 63us; 65535us; 30us; 472us; 49us; 468us; 61us; 472us; 84us; 472us; 97us; 468us; 166us; 472us; 167us; 472us; 171us; 468us; 223us; 472us; 237us; 472us; 255us; 472us; 334us; 468us; 344us; 472us; 398us; 466us; 403us; 466us; 411us; 472us; 412us; 472us; 438us; 466us; 447us; 468us; 453us; 468us; 514us; 472us; 614us; 468us; 657us; 468us; 666us; 468us; 697us; 468us; 733us; 466us; 823us; 466us; 824us; 466us; 828us; 466us; 829us; 466us; 830us; 466us; 831us; 466us; 838us; 466us; 841us; 466us; 843us; 466us; 845us; 466us; 850us; 466us; 854us; 466us; 856us; 466us; 858us; 466us; 866us; 466us; 869us; 466us; 881us; 466us; 902us; 466us; 907us; 466us; 908us; 466us; 910us; 466us; 911us; 466us; 912us; 466us; 913us; 466us; 920us; 466us; 922us; 466us; 1013us; 466us; 1040us; 466us; 1046us; 466us; 1155us; 466us; 1157us; 466us; 1162us; 466us; 1169us; 466us; 1455us; 466us; 1460us; 466us; 1473us; 466us; 1475us; 466us; 12us; 65535us; 30us; 31us; 61us; 62us; 84us; 85us; 166us; 168us; 167us; 169us; 223us; 224us; 237us; 238us; 255us; 256us; 344us; 345us; 411us; 413us; 412us; 414us; 514us; 515us; 1us; 65535us; 421us; 422us; 4us; 65535us; 354us; 355us; 356us; 357us; 359us; 360us; 662us; 663us; 2us; 65535us; 413us; 431us; 414us; 431us; 2us; 65535us; 347us; 348us; 439us; 440us; 2us; 65535us; 347us; 486us; 439us; 486us; 2us; 65535us; 480us; 481us; 483us; 484us; 3us; 65535us; 480us; 489us; 483us; 489us; 1223us; 1433us; 2us; 65535us; 473us; 474us; 1435us; 1440us; 4us; 65535us; 473us; 497us; 493us; 494us; 499us; 500us; 1435us; 497us; 4us; 65535us; 473us; 498us; 493us; 498us; 499us; 498us; 1435us; 498us; 2us; 65535us; 501us; 503us; 502us; 503us; 5us; 65535us; 125us; 137us; 128us; 137us; 341us; 361us; 349us; 361us; 351us; 361us; 6us; 65535us; 169us; 522us; 414us; 522us; 515us; 522us; 618us; 649us; 640us; 649us; 671us; 649us; 1us; 65535us; 523us; 524us; 5us; 65535us; 125us; 143us; 128us; 143us; 341us; 367us; 349us; 367us; 351us; 367us; 9us; 65535us; 168us; 179us; 169us; 179us; 413us; 420us; 414us; 420us; 1429us; 1448us; 1431us; 1448us; 1442us; 1448us; 1444us; 1448us; 1446us; 1448us; 1us; 65535us; 334us; 335us; 1us; 65535us; 540us; 542us; 3us; 65535us; 546us; 547us; 558us; 549us; 563us; 550us; 5us; 65535us; 546us; 554us; 551us; 553us; 552us; 553us; 558us; 554us; 563us; 554us; 1us; 65535us; 541us; 544us; 1us; 65535us; 563us; 564us; 4us; 65535us; 99us; 567us; 173us; 567us; 425us; 567us; 840us; 568us; 3us; 65535us; 99us; 100us; 173us; 174us; 425us; 426us; 1us; 65535us; 840us; 841us; 3us; 65535us; 335us; 336us; 549us; 559us; 564us; 565us; 3us; 65535us; 569us; 570us; 1479us; 571us; 1481us; 572us; 4us; 65535us; 569us; 575us; 573us; 574us; 1479us; 575us; 1481us; 575us; 1us; 65535us; 591us; 592us; 3us; 65535us; 169us; 521us; 414us; 521us; 515us; 521us; 5us; 65535us; 169us; 604us; 414us; 604us; 515us; 604us; 606us; 607us; 611us; 612us; 3us; 65535us; 604us; 605us; 607us; 608us; 612us; 613us; 3us; 65535us; 604us; 611us; 607us; 611us; 612us; 611us; 1us; 65535us; 615us; 616us; 3us; 65535us; 169us; 606us; 414us; 606us; 515us; 606us; 3us; 65535us; 169us; 609us; 414us; 609us; 515us; 609us; 4us; 65535us; 618us; 650us; 640us; 650us; 643us; 644us; 671us; 650us; 4us; 65535us; 618us; 642us; 640us; 642us; 643us; 642us; 671us; 642us; 3us; 65535us; 618us; 619us; 640us; 641us; 671us; 672us; 2us; 65535us; 526us; 527us; 652us; 653us; 2us; 65535us; 526us; 651us; 652us; 651us; 3us; 65535us; 183us; 184us; 186us; 187us; 655us; 656us; 4us; 65535us; 31us; 265us; 224us; 265us; 238us; 265us; 256us; 265us; 6us; 65535us; 31us; 665us; 62us; 665us; 85us; 665us; 224us; 665us; 238us; 665us; 256us; 665us; 6us; 65535us; 31us; 662us; 62us; 205us; 85us; 205us; 224us; 662us; 238us; 662us; 256us; 662us; 1us; 65535us; 667us; 668us; 1us; 65535us; 668us; 669us; 15us; 65535us; 2us; 271us; 4us; 271us; 22us; 271us; 24us; 271us; 26us; 271us; 28us; 271us; 221us; 271us; 225us; 271us; 228us; 271us; 240us; 271us; 244us; 271us; 246us; 271us; 251us; 271us; 275us; 271us; 285us; 271us; 110us; 65535us; 6us; 966us; 31us; 258us; 104us; 966us; 106us; 966us; 224us; 258us; 238us; 258us; 256us; 257us; 260us; 966us; 329us; 690us; 401us; 966us; 406us; 966us; 413us; 690us; 414us; 690us; 441us; 966us; 457us; 966us; 681us; 966us; 687us; 966us; 736us; 966us; 740us; 966us; 750us; 966us; 924us; 966us; 929us; 966us; 943us; 966us; 945us; 966us; 948us; 966us; 951us; 966us; 967us; 966us; 970us; 966us; 973us; 966us; 979us; 966us; 983us; 966us; 987us; 966us; 989us; 966us; 994us; 966us; 996us; 966us; 998us; 966us; 1000us; 966us; 1002us; 966us; 1004us; 966us; 1015us; 966us; 1023us; 966us; 1030us; 966us; 1036us; 966us; 1038us; 966us; 1041us; 966us; 1044us; 966us; 1047us; 966us; 1050us; 966us; 1053us; 966us; 1056us; 966us; 1058us; 966us; 1063us; 966us; 1106us; 966us; 1108us; 966us; 1111us; 966us; 1112us; 966us; 1113us; 966us; 1114us; 966us; 1115us; 966us; 1116us; 966us; 1117us; 966us; 1118us; 966us; 1119us; 966us; 1120us; 966us; 1121us; 966us; 1122us; 966us; 1123us; 966us; 1124us; 966us; 1125us; 966us; 1126us; 966us; 1127us; 966us; 1128us; 966us; 1129us; 966us; 1130us; 966us; 1152us; 966us; 1174us; 966us; 1175us; 966us; 1179us; 966us; 1181us; 966us; 1185us; 966us; 1187us; 966us; 1191us; 966us; 1194us; 966us; 1196us; 966us; 1259us; 966us; 1268us; 966us; 1275us; 966us; 1285us; 966us; 1287us; 966us; 1288us; 966us; 1299us; 966us; 1306us; 966us; 1307us; 966us; 1313us; 966us; 1319us; 966us; 1320us; 966us; 1321us; 966us; 1337us; 966us; 1347us; 966us; 1360us; 966us; 1361us; 966us; 1363us; 966us; 1365us; 966us; 1369us; 966us; 1370us; 966us; 1393us; 966us; 1398us; 966us; 1423us; 966us; 1457us; 966us; 1462us; 966us; 7us; 65535us; 31us; 261us; 224us; 261us; 238us; 261us; 256us; 261us; 329us; 691us; 413us; 691us; 414us; 691us; 110us; 65535us; 6us; 951us; 31us; 260us; 104us; 970us; 106us; 970us; 224us; 260us; 238us; 260us; 256us; 259us; 260us; 951us; 329us; 692us; 401us; 951us; 406us; 951us; 413us; 692us; 414us; 692us; 441us; 951us; 457us; 951us; 681us; 951us; 687us; 951us; 736us; 951us; 740us; 951us; 750us; 951us; 924us; 951us; 929us; 951us; 943us; 951us; 945us; 951us; 948us; 951us; 951us; 951us; 967us; 951us; 970us; 951us; 973us; 951us; 979us; 951us; 983us; 951us; 987us; 951us; 989us; 970us; 994us; 970us; 996us; 970us; 998us; 970us; 1000us; 970us; 1002us; 970us; 1004us; 951us; 1015us; 951us; 1023us; 951us; 1030us; 951us; 1036us; 970us; 1038us; 970us; 1041us; 951us; 1044us; 951us; 1047us; 951us; 1050us; 951us; 1053us; 951us; 1056us; 951us; 1058us; 951us; 1063us; 951us; 1106us; 970us; 1108us; 970us; 1111us; 970us; 1112us; 970us; 1113us; 970us; 1114us; 970us; 1115us; 970us; 1116us; 970us; 1117us; 970us; 1118us; 970us; 1119us; 970us; 1120us; 970us; 1121us; 970us; 1122us; 970us; 1123us; 970us; 1124us; 970us; 1125us; 970us; 1126us; 970us; 1127us; 970us; 1128us; 970us; 1129us; 970us; 1130us; 970us; 1152us; 951us; 1174us; 970us; 1175us; 951us; 1179us; 970us; 1181us; 951us; 1185us; 970us; 1187us; 951us; 1191us; 970us; 1194us; 970us; 1196us; 970us; 1259us; 951us; 1268us; 951us; 1275us; 951us; 1285us; 970us; 1287us; 970us; 1288us; 970us; 1299us; 951us; 1306us; 951us; 1307us; 951us; 1313us; 951us; 1319us; 951us; 1320us; 951us; 1321us; 951us; 1337us; 951us; 1347us; 951us; 1360us; 970us; 1361us; 970us; 1363us; 951us; 1365us; 970us; 1369us; 970us; 1370us; 970us; 1393us; 970us; 1398us; 970us; 1423us; 970us; 1457us; 951us; 1462us; 951us; 109us; 65535us; 6us; 976us; 31us; 976us; 104us; 976us; 106us; 976us; 224us; 976us; 238us; 976us; 260us; 976us; 329us; 693us; 401us; 976us; 406us; 976us; 413us; 693us; 414us; 693us; 441us; 976us; 457us; 976us; 681us; 976us; 687us; 976us; 736us; 976us; 740us; 976us; 750us; 976us; 924us; 976us; 929us; 976us; 943us; 976us; 945us; 976us; 948us; 976us; 951us; 976us; 967us; 976us; 970us; 976us; 973us; 976us; 979us; 976us; 983us; 976us; 987us; 976us; 989us; 976us; 994us; 976us; 996us; 976us; 998us; 976us; 1000us; 976us; 1002us; 976us; 1004us; 976us; 1015us; 976us; 1023us; 976us; 1030us; 976us; 1036us; 976us; 1038us; 976us; 1041us; 976us; 1044us; 976us; 1047us; 976us; 1050us; 976us; 1053us; 976us; 1056us; 976us; 1058us; 976us; 1063us; 976us; 1106us; 976us; 1108us; 976us; 1111us; 976us; 1112us; 976us; 1113us; 976us; 1114us; 976us; 1115us; 976us; 1116us; 976us; 1117us; 976us; 1118us; 976us; 1119us; 976us; 1120us; 976us; 1121us; 976us; 1122us; 976us; 1123us; 976us; 1124us; 976us; 1125us; 976us; 1126us; 976us; 1127us; 976us; 1128us; 976us; 1129us; 976us; 1130us; 976us; 1152us; 976us; 1174us; 976us; 1175us; 976us; 1179us; 976us; 1181us; 976us; 1185us; 976us; 1187us; 976us; 1191us; 976us; 1194us; 976us; 1196us; 976us; 1259us; 976us; 1268us; 976us; 1275us; 976us; 1285us; 976us; 1287us; 976us; 1288us; 976us; 1299us; 976us; 1306us; 976us; 1307us; 976us; 1313us; 976us; 1319us; 976us; 1320us; 976us; 1321us; 976us; 1337us; 976us; 1347us; 976us; 1360us; 976us; 1361us; 976us; 1363us; 976us; 1365us; 976us; 1369us; 976us; 1370us; 976us; 1393us; 976us; 1398us; 976us; 1423us; 976us; 1457us; 976us; 1462us; 976us; 3us; 65535us; 329us; 416us; 413us; 415us; 414us; 415us; 4us; 65535us; 685us; 686us; 688us; 689us; 1048us; 1049us; 1059us; 1060us; 110us; 65535us; 6us; 680us; 31us; 680us; 104us; 680us; 106us; 680us; 224us; 680us; 238us; 680us; 256us; 680us; 260us; 680us; 329us; 680us; 401us; 680us; 406us; 680us; 413us; 680us; 414us; 680us; 441us; 680us; 457us; 680us; 681us; 680us; 687us; 680us; 736us; 680us; 740us; 680us; 750us; 680us; 924us; 680us; 929us; 680us; 943us; 680us; 945us; 680us; 948us; 680us; 951us; 680us; 967us; 680us; 970us; 680us; 973us; 680us; 979us; 680us; 983us; 680us; 987us; 680us; 989us; 680us; 994us; 680us; 996us; 680us; 998us; 680us; 1000us; 680us; 1002us; 680us; 1004us; 680us; 1015us; 680us; 1023us; 680us; 1030us; 680us; 1036us; 680us; 1038us; 680us; 1041us; 680us; 1044us; 680us; 1047us; 680us; 1050us; 680us; 1053us; 680us; 1056us; 680us; 1058us; 680us; 1063us; 680us; 1106us; 680us; 1108us; 680us; 1111us; 680us; 1112us; 680us; 1113us; 680us; 1114us; 680us; 1115us; 680us; 1116us; 680us; 1117us; 680us; 1118us; 680us; 1119us; 680us; 1120us; 680us; 1121us; 680us; 1122us; 680us; 1123us; 680us; 1124us; 680us; 1125us; 680us; 1126us; 680us; 1127us; 680us; 1128us; 680us; 1129us; 680us; 1130us; 680us; 1152us; 680us; 1174us; 680us; 1175us; 680us; 1179us; 680us; 1181us; 680us; 1185us; 680us; 1187us; 680us; 1191us; 680us; 1194us; 680us; 1196us; 680us; 1259us; 680us; 1268us; 680us; 1275us; 680us; 1285us; 680us; 1287us; 680us; 1288us; 680us; 1299us; 680us; 1306us; 680us; 1307us; 680us; 1313us; 680us; 1319us; 680us; 1320us; 680us; 1321us; 680us; 1337us; 680us; 1347us; 680us; 1360us; 680us; 1361us; 680us; 1363us; 680us; 1365us; 680us; 1369us; 680us; 1370us; 680us; 1393us; 680us; 1398us; 680us; 1423us; 680us; 1457us; 680us; 1462us; 680us; 1us; 65535us; 701us; 702us; 1us; 65535us; 701us; 704us; 3us; 65535us; 701us; 705us; 706us; 707us; 708us; 709us; 2us; 65535us; 710us; 711us; 723us; 714us; 1us; 65535us; 696us; 697us; 4us; 65535us; 678us; 679us; 684us; 685us; 1435us; 1436us; 1437us; 1438us; 2us; 65535us; 724us; 725us; 727us; 728us; 5us; 65535us; 678us; 724us; 684us; 724us; 726us; 727us; 1435us; 724us; 1437us; 724us; 2us; 65535us; 502us; 730us; 729us; 730us; 1us; 65535us; 736us; 737us; 2us; 65535us; 736us; 744us; 740us; 741us; 1us; 65535us; 745us; 746us; 1us; 65535us; 746us; 747us; 1us; 65535us; 748us; 749us; 2us; 65535us; 748us; 754us; 752us; 753us; 249us; 65535us; 6us; 791us; 8us; 1593us; 31us; 791us; 101us; 1593us; 104us; 791us; 106us; 791us; 140us; 1593us; 169us; 1593us; 175us; 1593us; 179us; 1593us; 181us; 1593us; 191us; 1593us; 224us; 791us; 238us; 791us; 260us; 791us; 310us; 791us; 314us; 791us; 319us; 791us; 364us; 1593us; 398us; 791us; 401us; 791us; 403us; 791us; 406us; 791us; 414us; 1593us; 420us; 1593us; 427us; 1593us; 438us; 791us; 441us; 791us; 450us; 1593us; 457us; 791us; 460us; 1593us; 479us; 1593us; 482us; 791us; 515us; 1593us; 523us; 1593us; 532us; 1593us; 578us; 1593us; 581us; 1593us; 618us; 1593us; 621us; 1593us; 624us; 791us; 636us; 791us; 640us; 1593us; 643us; 1593us; 646us; 1593us; 660us; 1593us; 671us; 1593us; 681us; 791us; 687us; 791us; 733us; 791us; 736us; 791us; 740us; 791us; 750us; 791us; 756us; 1593us; 800us; 1593us; 823us; 791us; 824us; 791us; 828us; 791us; 829us; 791us; 830us; 791us; 831us; 791us; 838us; 791us; 841us; 791us; 843us; 791us; 845us; 791us; 847us; 1593us; 850us; 791us; 854us; 791us; 856us; 791us; 858us; 791us; 866us; 791us; 869us; 791us; 881us; 791us; 902us; 791us; 905us; 1593us; 907us; 791us; 908us; 791us; 910us; 791us; 911us; 791us; 912us; 791us; 913us; 791us; 920us; 791us; 922us; 791us; 924us; 791us; 929us; 791us; 936us; 1593us; 943us; 791us; 945us; 791us; 948us; 791us; 951us; 791us; 967us; 791us; 970us; 791us; 973us; 791us; 979us; 791us; 983us; 791us; 987us; 791us; 989us; 791us; 994us; 791us; 996us; 791us; 998us; 791us; 1000us; 791us; 1002us; 791us; 1004us; 791us; 1013us; 791us; 1015us; 791us; 1023us; 791us; 1030us; 791us; 1036us; 791us; 1038us; 791us; 1040us; 791us; 1041us; 791us; 1044us; 791us; 1046us; 791us; 1047us; 791us; 1050us; 791us; 1053us; 791us; 1056us; 791us; 1058us; 791us; 1063us; 791us; 1100us; 1593us; 1102us; 1593us; 1104us; 1593us; 1106us; 791us; 1108us; 791us; 1111us; 791us; 1112us; 791us; 1113us; 791us; 1114us; 791us; 1115us; 791us; 1116us; 791us; 1117us; 791us; 1118us; 791us; 1119us; 791us; 1120us; 791us; 1121us; 791us; 1122us; 791us; 1123us; 791us; 1124us; 791us; 1125us; 791us; 1126us; 791us; 1127us; 791us; 1128us; 791us; 1129us; 791us; 1130us; 791us; 1152us; 791us; 1155us; 791us; 1157us; 791us; 1162us; 791us; 1169us; 791us; 1174us; 791us; 1175us; 791us; 1179us; 791us; 1181us; 791us; 1185us; 791us; 1187us; 791us; 1191us; 791us; 1194us; 791us; 1196us; 791us; 1198us; 791us; 1199us; 791us; 1201us; 791us; 1202us; 791us; 1204us; 791us; 1205us; 791us; 1207us; 791us; 1208us; 791us; 1210us; 791us; 1211us; 791us; 1213us; 791us; 1214us; 791us; 1216us; 1593us; 1217us; 1593us; 1220us; 791us; 1221us; 791us; 1226us; 791us; 1228us; 791us; 1230us; 791us; 1231us; 791us; 1234us; 791us; 1241us; 791us; 1242us; 791us; 1245us; 791us; 1246us; 791us; 1259us; 791us; 1268us; 791us; 1275us; 791us; 1285us; 791us; 1287us; 791us; 1288us; 791us; 1299us; 791us; 1306us; 791us; 1307us; 791us; 1313us; 791us; 1319us; 791us; 1320us; 791us; 1321us; 791us; 1337us; 791us; 1347us; 791us; 1360us; 791us; 1361us; 791us; 1363us; 791us; 1365us; 791us; 1369us; 791us; 1370us; 791us; 1374us; 791us; 1380us; 1593us; 1383us; 1593us; 1385us; 1593us; 1387us; 1593us; 1389us; 791us; 1393us; 791us; 1398us; 791us; 1423us; 791us; 1448us; 1593us; 1455us; 791us; 1457us; 791us; 1460us; 791us; 1462us; 791us; 1473us; 791us; 1475us; 791us; 1482us; 1593us; 1485us; 1593us; 1488us; 1593us; 1491us; 1593us; 1493us; 1593us; 1495us; 1593us; 1499us; 1593us; 1502us; 1593us; 1506us; 1593us; 1509us; 1593us; 1514us; 1593us; 1516us; 1593us; 1518us; 1593us; 1521us; 1593us; 1523us; 1593us; 1542us; 1593us; 1543us; 1593us; 1551us; 1593us; 1552us; 1593us; 1557us; 1593us; 1558us; 1593us; 1570us; 1593us; 1574us; 1593us; 1584us; 1593us; 1588us; 1593us; 1595us; 791us; 1609us; 1593us; 1611us; 1593us; 1622us; 1593us; 1us; 65535us; 785us; 786us; 5us; 65535us; 789us; 790us; 1531us; 788us; 1579us; 788us; 1580us; 788us; 1637us; 788us; 4us; 65535us; 1531us; 1532us; 1579us; 1581us; 1580us; 1582us; 1637us; 1638us; 179us; 65535us; 6us; 1290us; 31us; 1290us; 104us; 1290us; 106us; 1290us; 224us; 1290us; 238us; 1290us; 260us; 1290us; 310us; 1290us; 314us; 1290us; 319us; 1290us; 398us; 877us; 401us; 1290us; 403us; 877us; 406us; 1290us; 438us; 877us; 441us; 1290us; 457us; 1290us; 482us; 1290us; 624us; 625us; 636us; 637us; 681us; 1290us; 687us; 1290us; 733us; 877us; 736us; 1290us; 740us; 1290us; 750us; 1290us; 823us; 877us; 824us; 877us; 828us; 877us; 829us; 877us; 830us; 877us; 831us; 877us; 838us; 877us; 841us; 877us; 843us; 877us; 845us; 877us; 850us; 877us; 854us; 877us; 856us; 877us; 858us; 877us; 866us; 877us; 869us; 877us; 881us; 877us; 902us; 877us; 907us; 877us; 908us; 877us; 910us; 877us; 911us; 877us; 912us; 877us; 913us; 877us; 920us; 877us; 922us; 877us; 924us; 1290us; 929us; 1290us; 943us; 1290us; 945us; 1290us; 948us; 1290us; 951us; 1290us; 967us; 1290us; 970us; 1290us; 973us; 1290us; 979us; 1290us; 983us; 1290us; 987us; 1290us; 989us; 1290us; 994us; 1290us; 996us; 1290us; 998us; 1290us; 1000us; 1290us; 1002us; 1290us; 1004us; 1290us; 1013us; 877us; 1015us; 1290us; 1023us; 1290us; 1030us; 1290us; 1036us; 1290us; 1038us; 1290us; 1040us; 877us; 1041us; 1290us; 1044us; 1290us; 1046us; 877us; 1047us; 1290us; 1050us; 1290us; 1053us; 1290us; 1056us; 1290us; 1058us; 1290us; 1063us; 1290us; 1106us; 1290us; 1108us; 1290us; 1111us; 1290us; 1112us; 1290us; 1113us; 1290us; 1114us; 1290us; 1115us; 1290us; 1116us; 1290us; 1117us; 1290us; 1118us; 1290us; 1119us; 1290us; 1120us; 1290us; 1121us; 1290us; 1122us; 1290us; 1123us; 1290us; 1124us; 1290us; 1125us; 1290us; 1126us; 1290us; 1127us; 1290us; 1128us; 1290us; 1129us; 1290us; 1130us; 1290us; 1152us; 1290us; 1155us; 877us; 1157us; 877us; 1162us; 877us; 1169us; 877us; 1174us; 1290us; 1175us; 1290us; 1179us; 1290us; 1181us; 1290us; 1185us; 1290us; 1187us; 1290us; 1191us; 1290us; 1194us; 1290us; 1196us; 1290us; 1198us; 1290us; 1199us; 1290us; 1201us; 1290us; 1202us; 1290us; 1204us; 1290us; 1205us; 1290us; 1207us; 1290us; 1208us; 1290us; 1210us; 1290us; 1211us; 1290us; 1213us; 1290us; 1214us; 1290us; 1220us; 1290us; 1221us; 1290us; 1226us; 1290us; 1228us; 1290us; 1230us; 1290us; 1231us; 1290us; 1234us; 1290us; 1241us; 1290us; 1242us; 1290us; 1245us; 1290us; 1246us; 1290us; 1259us; 1290us; 1268us; 1290us; 1275us; 1290us; 1285us; 1290us; 1287us; 1290us; 1288us; 1290us; 1299us; 1290us; 1306us; 1290us; 1307us; 1290us; 1313us; 1290us; 1319us; 1290us; 1320us; 1290us; 1321us; 1290us; 1337us; 1290us; 1347us; 1290us; 1360us; 1290us; 1361us; 1290us; 1363us; 1290us; 1365us; 1290us; 1369us; 1290us; 1370us; 1290us; 1374us; 1290us; 1389us; 1290us; 1393us; 1290us; 1398us; 1290us; 1423us; 1290us; 1455us; 877us; 1457us; 1290us; 1460us; 877us; 1462us; 1290us; 1473us; 877us; 1475us; 877us; 1595us; 1290us; 3us; 65535us; 398us; 399us; 403us; 404us; 733us; 734us; 3us; 65535us; 802us; 798us; 803us; 799us; 805us; 799us; 2us; 65535us; 803us; 804us; 805us; 806us; 1us; 65535us; 346us; 347us; 11us; 65535us; 398us; 794us; 403us; 794us; 733us; 794us; 823us; 813us; 824us; 814us; 828us; 815us; 829us; 816us; 830us; 817us; 831us; 818us; 1040us; 819us; 1046us; 820us; 11us; 65535us; 398us; 825us; 403us; 825us; 733us; 825us; 823us; 825us; 824us; 825us; 828us; 825us; 829us; 825us; 830us; 825us; 831us; 825us; 1040us; 825us; 1046us; 825us; 11us; 65535us; 398us; 826us; 403us; 826us; 733us; 826us; 823us; 826us; 824us; 826us; 828us; 826us; 829us; 826us; 830us; 826us; 831us; 826us; 1040us; 826us; 1046us; 826us; 2us; 65535us; 834us; 835us; 850us; 851us; 2us; 65535us; 834us; 832us; 850us; 832us; 32us; 65535us; 398us; 827us; 403us; 827us; 733us; 827us; 823us; 827us; 824us; 827us; 828us; 827us; 829us; 827us; 830us; 827us; 831us; 827us; 838us; 909us; 850us; 909us; 866us; 909us; 869us; 909us; 881us; 909us; 902us; 909us; 907us; 909us; 908us; 909us; 910us; 909us; 911us; 909us; 912us; 909us; 913us; 909us; 920us; 909us; 922us; 909us; 1013us; 909us; 1040us; 827us; 1046us; 827us; 1155us; 909us; 1157us; 909us; 1162us; 909us; 1169us; 909us; 1473us; 909us; 1475us; 909us; 3us; 65535us; 841us; 842us; 843us; 844us; 845us; 846us; 8us; 65535us; 841us; 853us; 843us; 853us; 845us; 853us; 854us; 855us; 856us; 857us; 858us; 859us; 1455us; 1456us; 1460us; 1461us; 41us; 65535us; 398us; 849us; 403us; 849us; 438us; 439us; 733us; 849us; 823us; 849us; 824us; 849us; 828us; 849us; 829us; 849us; 830us; 849us; 831us; 849us; 838us; 849us; 841us; 854us; 843us; 854us; 845us; 854us; 850us; 849us; 854us; 854us; 856us; 854us; 858us; 854us; 866us; 849us; 869us; 849us; 881us; 849us; 902us; 849us; 907us; 849us; 908us; 849us; 910us; 849us; 911us; 849us; 912us; 849us; 913us; 849us; 920us; 849us; 922us; 849us; 1013us; 849us; 1040us; 849us; 1046us; 849us; 1155us; 849us; 1157us; 849us; 1162us; 849us; 1169us; 849us; 1455us; 854us; 1460us; 854us; 1473us; 849us; 1475us; 849us; 2us; 65535us; 850us; 882us; 881us; 882us; 21us; 65535us; 838us; 839us; 850us; 888us; 866us; 897us; 869us; 897us; 881us; 888us; 902us; 889us; 907us; 890us; 908us; 891us; 910us; 892us; 911us; 893us; 912us; 894us; 913us; 895us; 920us; 896us; 922us; 897us; 1013us; 898us; 1155us; 899us; 1157us; 899us; 1162us; 899us; 1169us; 899us; 1473us; 899us; 1475us; 899us; 21us; 65535us; 838us; 903us; 850us; 903us; 866us; 903us; 869us; 903us; 881us; 903us; 902us; 903us; 907us; 903us; 908us; 903us; 910us; 903us; 911us; 903us; 912us; 903us; 913us; 903us; 920us; 903us; 922us; 903us; 1013us; 903us; 1155us; 903us; 1157us; 903us; 1162us; 903us; 1169us; 903us; 1473us; 903us; 1475us; 903us; 21us; 65535us; 838us; 904us; 850us; 904us; 866us; 904us; 869us; 904us; 881us; 904us; 902us; 904us; 907us; 904us; 908us; 904us; 910us; 904us; 911us; 904us; 912us; 904us; 913us; 904us; 920us; 904us; 922us; 904us; 1013us; 904us; 1155us; 904us; 1157us; 904us; 1162us; 904us; 1169us; 904us; 1473us; 904us; 1475us; 904us; 1us; 65535us; 863us; 864us; 2us; 65535us; 863us; 914us; 917us; 918us; 2us; 65535us; 863us; 915us; 917us; 915us; 3us; 65535us; 866us; 867us; 869us; 870us; 922us; 923us; 23us; 65535us; 260us; 971us; 401us; 402us; 406us; 407us; 441us; 442us; 457us; 458us; 681us; 682us; 687us; 688us; 750us; 751us; 951us; 971us; 970us; 971us; 973us; 974us; 987us; 988us; 1004us; 1005us; 1015us; 1016us; 1023us; 1024us; 1030us; 1031us; 1041us; 1042us; 1044us; 1045us; 1047us; 1048us; 1050us; 1051us; 1056us; 1057us; 1058us; 1059us; 1457us; 1458us; 6us; 65535us; 998us; 999us; 1000us; 1001us; 1108us; 1109us; 1393us; 1394us; 1398us; 1399us; 1423us; 1424us; 5us; 65535us; 983us; 984us; 1063us; 1064us; 1175us; 1176us; 1363us; 1364us; 1462us; 1463us; 49us; 65535us; 6us; 938us; 260us; 928us; 401us; 928us; 406us; 928us; 441us; 928us; 457us; 928us; 681us; 928us; 687us; 928us; 736us; 745us; 740us; 745us; 750us; 928us; 924us; 925us; 929us; 930us; 948us; 949us; 951us; 928us; 967us; 968us; 970us; 928us; 973us; 928us; 979us; 980us; 983us; 933us; 987us; 928us; 1004us; 928us; 1015us; 928us; 1023us; 928us; 1030us; 928us; 1041us; 928us; 1044us; 928us; 1047us; 928us; 1050us; 928us; 1053us; 1054us; 1056us; 928us; 1058us; 928us; 1063us; 933us; 1152us; 1153us; 1175us; 933us; 1181us; 1182us; 1187us; 1188us; 1268us; 1273us; 1275us; 1276us; 1299us; 1300us; 1306us; 1308us; 1307us; 1308us; 1319us; 1339us; 1320us; 1339us; 1321us; 1339us; 1337us; 1338us; 1363us; 933us; 1457us; 928us; 1462us; 933us; 1us; 65535us; 6us; 7us; 54us; 65535us; 6us; 935us; 260us; 935us; 401us; 935us; 406us; 935us; 441us; 935us; 457us; 935us; 681us; 935us; 687us; 935us; 736us; 935us; 740us; 935us; 750us; 935us; 924us; 935us; 929us; 935us; 943us; 944us; 945us; 946us; 948us; 935us; 951us; 935us; 967us; 935us; 970us; 935us; 973us; 935us; 979us; 935us; 983us; 935us; 987us; 935us; 1004us; 935us; 1015us; 935us; 1023us; 935us; 1030us; 935us; 1041us; 935us; 1044us; 935us; 1047us; 935us; 1050us; 935us; 1053us; 935us; 1056us; 935us; 1058us; 935us; 1063us; 935us; 1152us; 935us; 1175us; 935us; 1181us; 935us; 1187us; 935us; 1259us; 1358us; 1268us; 935us; 1275us; 935us; 1299us; 935us; 1306us; 935us; 1307us; 935us; 1313us; 1358us; 1319us; 935us; 1320us; 935us; 1321us; 935us; 1337us; 935us; 1347us; 1358us; 1363us; 935us; 1457us; 935us; 1462us; 935us; 86us; 65535us; 68us; 71us; 144us; 146us; 150us; 152us; 154us; 156us; 158us; 160us; 229us; 232us; 269us; 270us; 276us; 278us; 279us; 281us; 286us; 288us; 296us; 1783us; 298us; 1783us; 355us; 358us; 368us; 370us; 374us; 375us; 378us; 379us; 479us; 1783us; 494us; 496us; 518us; 519us; 527us; 529us; 685us; 695us; 688us; 695us; 735us; 739us; 741us; 743us; 805us; 812us; 806us; 809us; 850us; 887us; 881us; 887us; 882us; 884us; 898us; 1035us; 925us; 927us; 980us; 982us; 984us; 986us; 989us; 993us; 990us; 992us; 1002us; 1011us; 1003us; 1010us; 1005us; 1007us; 1013us; 1783us; 1014us; 1783us; 1015us; 1783us; 1016us; 1783us; 1022us; 1029us; 1023us; 1028us; 1024us; 1026us; 1048us; 695us; 1059us; 695us; 1089us; 1193us; 1158us; 1160us; 1182us; 1184us; 1188us; 1190us; 1194us; 1783us; 1196us; 1783us; 1247us; 1267us; 1250us; 1267us; 1259us; 1264us; 1260us; 1262us; 1275us; 1283us; 1276us; 1278us; 1279us; 1281us; 1300us; 1302us; 1306us; 1312us; 1307us; 1312us; 1308us; 1310us; 1313us; 1318us; 1314us; 1316us; 1319us; 1332us; 1320us; 1332us; 1321us; 1332us; 1323us; 1777us; 1347us; 1352us; 1348us; 1350us; 1360us; 1362us; 1365us; 1783us; 1422us; 1783us; 1423us; 1783us; 1462us; 1468us; 1463us; 1465us; 1573us; 1614us; 1589us; 1592us; 1590us; 1592us; 1604us; 1783us; 1609us; 1620us; 1611us; 1783us; 1616us; 1618us; 1658us; 1783us; 106us; 65535us; 6us; 940us; 31us; 32us; 104us; 105us; 106us; 107us; 224us; 239us; 238us; 239us; 260us; 940us; 401us; 940us; 406us; 940us; 441us; 940us; 457us; 940us; 681us; 940us; 687us; 940us; 736us; 940us; 740us; 940us; 750us; 940us; 924us; 940us; 929us; 940us; 943us; 940us; 945us; 940us; 948us; 940us; 951us; 940us; 967us; 940us; 970us; 940us; 973us; 940us; 979us; 940us; 983us; 940us; 987us; 940us; 989us; 990us; 994us; 995us; 996us; 997us; 998us; 932us; 1000us; 932us; 1002us; 1003us; 1004us; 940us; 1015us; 940us; 1023us; 940us; 1030us; 940us; 1036us; 1037us; 1038us; 1039us; 1041us; 940us; 1044us; 940us; 1047us; 940us; 1050us; 940us; 1053us; 940us; 1056us; 940us; 1058us; 940us; 1063us; 940us; 1106us; 1065us; 1108us; 932us; 1111us; 1066us; 1112us; 1067us; 1113us; 1068us; 1114us; 1069us; 1115us; 1070us; 1116us; 1071us; 1117us; 1072us; 1118us; 1073us; 1119us; 1074us; 1120us; 1075us; 1121us; 1076us; 1122us; 1077us; 1123us; 1078us; 1124us; 1079us; 1125us; 1080us; 1126us; 1081us; 1127us; 1082us; 1128us; 1083us; 1129us; 1084us; 1130us; 1085us; 1152us; 940us; 1174us; 1086us; 1175us; 940us; 1179us; 1087us; 1181us; 940us; 1185us; 1088us; 1187us; 940us; 1191us; 1089us; 1194us; 1090us; 1196us; 1091us; 1259us; 942us; 1268us; 940us; 1275us; 941us; 1285us; 1092us; 1287us; 1093us; 1288us; 1094us; 1299us; 940us; 1306us; 940us; 1307us; 940us; 1313us; 942us; 1319us; 940us; 1320us; 940us; 1321us; 940us; 1337us; 940us; 1347us; 942us; 1360us; 1096us; 1361us; 1097us; 1363us; 940us; 1365us; 1095us; 1369us; 1098us; 1370us; 1099us; 1393us; 932us; 1398us; 932us; 1423us; 932us; 1457us; 940us; 1462us; 940us; 1us; 65535us; 1255us; 1256us; 2us; 65535us; 980us; 981us; 984us; 985us; 4us; 65535us; 1155us; 1156us; 1157us; 1158us; 1473us; 1474us; 1475us; 1476us; 6us; 65535us; 1155us; 1167us; 1157us; 1167us; 1162us; 1167us; 1169us; 1167us; 1473us; 1167us; 1475us; 1167us; 6us; 65535us; 1155us; 1161us; 1157us; 1161us; 1162us; 1163us; 1169us; 1170us; 1473us; 1161us; 1475us; 1161us; 1us; 65535us; 899us; 1166us; 1us; 65535us; 1167us; 1168us; 2us; 65535us; 990us; 991us; 1089us; 1192us; 2us; 65535us; 990us; 1177us; 1089us; 1177us; 1us; 65535us; 1177us; 1178us; 106us; 65535us; 6us; 1110us; 31us; 1110us; 104us; 1110us; 106us; 1110us; 224us; 1110us; 238us; 1110us; 260us; 1110us; 401us; 1110us; 406us; 1110us; 441us; 1110us; 457us; 1110us; 681us; 1110us; 687us; 1110us; 736us; 1110us; 740us; 1110us; 750us; 1110us; 924us; 1110us; 929us; 1110us; 943us; 1110us; 945us; 1110us; 948us; 1110us; 951us; 1110us; 967us; 1110us; 970us; 1110us; 973us; 1110us; 979us; 1110us; 983us; 1110us; 987us; 1110us; 989us; 1110us; 994us; 1110us; 996us; 1110us; 998us; 1110us; 1000us; 1110us; 1002us; 1110us; 1004us; 1110us; 1015us; 1110us; 1023us; 1110us; 1030us; 1110us; 1036us; 1110us; 1038us; 1110us; 1041us; 1110us; 1044us; 1110us; 1047us; 1110us; 1050us; 1110us; 1053us; 1110us; 1056us; 1110us; 1058us; 1110us; 1063us; 1110us; 1106us; 1110us; 1108us; 1110us; 1111us; 1110us; 1112us; 1110us; 1113us; 1110us; 1114us; 1110us; 1115us; 1110us; 1116us; 1110us; 1117us; 1110us; 1118us; 1110us; 1119us; 1110us; 1120us; 1110us; 1121us; 1110us; 1122us; 1110us; 1123us; 1110us; 1124us; 1110us; 1125us; 1110us; 1126us; 1110us; 1127us; 1110us; 1128us; 1110us; 1129us; 1110us; 1130us; 1110us; 1152us; 1110us; 1174us; 1110us; 1175us; 1110us; 1179us; 1110us; 1181us; 1110us; 1185us; 1110us; 1187us; 1110us; 1191us; 1110us; 1194us; 1110us; 1196us; 1110us; 1259us; 1110us; 1268us; 1110us; 1275us; 1110us; 1285us; 1110us; 1287us; 1110us; 1288us; 1110us; 1299us; 1110us; 1306us; 1110us; 1307us; 1110us; 1313us; 1110us; 1319us; 1110us; 1320us; 1110us; 1321us; 1110us; 1337us; 1110us; 1347us; 1110us; 1360us; 1110us; 1361us; 1110us; 1363us; 1110us; 1365us; 1110us; 1369us; 1110us; 1370us; 1110us; 1393us; 1110us; 1398us; 1110us; 1423us; 1110us; 1457us; 1110us; 1462us; 1110us; 120us; 65535us; 6us; 1107us; 31us; 1107us; 104us; 1107us; 106us; 1107us; 224us; 1107us; 238us; 1107us; 260us; 1107us; 401us; 1107us; 406us; 1107us; 441us; 1107us; 457us; 1107us; 681us; 1107us; 687us; 1107us; 736us; 1107us; 740us; 1107us; 750us; 1107us; 924us; 1107us; 929us; 1107us; 943us; 1107us; 945us; 1107us; 948us; 1107us; 951us; 1107us; 967us; 1107us; 970us; 1107us; 973us; 1107us; 979us; 1107us; 983us; 1107us; 987us; 1107us; 989us; 1107us; 994us; 1107us; 996us; 1107us; 998us; 1107us; 1000us; 1107us; 1002us; 1107us; 1004us; 1107us; 1015us; 1107us; 1023us; 1107us; 1030us; 1107us; 1036us; 1107us; 1038us; 1107us; 1041us; 1107us; 1044us; 1107us; 1047us; 1107us; 1050us; 1107us; 1053us; 1107us; 1056us; 1107us; 1058us; 1107us; 1063us; 1107us; 1106us; 1107us; 1108us; 1107us; 1111us; 1107us; 1112us; 1107us; 1113us; 1107us; 1114us; 1107us; 1115us; 1107us; 1116us; 1107us; 1117us; 1107us; 1118us; 1107us; 1119us; 1107us; 1120us; 1107us; 1121us; 1107us; 1122us; 1107us; 1123us; 1107us; 1124us; 1107us; 1125us; 1107us; 1126us; 1107us; 1127us; 1107us; 1128us; 1107us; 1129us; 1107us; 1130us; 1107us; 1152us; 1107us; 1174us; 1107us; 1175us; 1107us; 1179us; 1107us; 1181us; 1107us; 1185us; 1107us; 1187us; 1107us; 1191us; 1107us; 1194us; 1107us; 1196us; 1107us; 1198us; 1200us; 1199us; 1200us; 1201us; 1203us; 1202us; 1203us; 1204us; 1206us; 1205us; 1206us; 1207us; 1209us; 1208us; 1209us; 1210us; 1212us; 1211us; 1212us; 1213us; 1215us; 1214us; 1215us; 1226us; 1227us; 1228us; 1229us; 1259us; 1107us; 1268us; 1107us; 1275us; 1107us; 1285us; 1107us; 1287us; 1107us; 1288us; 1107us; 1299us; 1107us; 1306us; 1107us; 1307us; 1107us; 1313us; 1107us; 1319us; 1107us; 1320us; 1107us; 1321us; 1107us; 1337us; 1107us; 1347us; 1107us; 1360us; 1107us; 1361us; 1107us; 1363us; 1107us; 1365us; 1107us; 1369us; 1107us; 1370us; 1107us; 1393us; 1107us; 1398us; 1107us; 1423us; 1107us; 1457us; 1107us; 1462us; 1107us; 120us; 65535us; 6us; 1230us; 31us; 1230us; 104us; 1230us; 106us; 1230us; 224us; 1230us; 238us; 1230us; 260us; 1230us; 401us; 1230us; 406us; 1230us; 441us; 1230us; 457us; 1230us; 681us; 1230us; 687us; 1230us; 736us; 1230us; 740us; 1230us; 750us; 1230us; 924us; 1230us; 929us; 1230us; 943us; 1230us; 945us; 1230us; 948us; 1230us; 951us; 1230us; 967us; 1230us; 970us; 1230us; 973us; 1230us; 979us; 1230us; 983us; 1230us; 987us; 1230us; 989us; 1230us; 994us; 1230us; 996us; 1230us; 998us; 1230us; 1000us; 1230us; 1002us; 1230us; 1004us; 1230us; 1015us; 1230us; 1023us; 1230us; 1030us; 1230us; 1036us; 1230us; 1038us; 1230us; 1041us; 1230us; 1044us; 1230us; 1047us; 1230us; 1050us; 1230us; 1053us; 1230us; 1056us; 1230us; 1058us; 1230us; 1063us; 1230us; 1106us; 1230us; 1108us; 1230us; 1111us; 1230us; 1112us; 1230us; 1113us; 1230us; 1114us; 1230us; 1115us; 1230us; 1116us; 1230us; 1117us; 1230us; 1118us; 1230us; 1119us; 1230us; 1120us; 1230us; 1121us; 1230us; 1122us; 1230us; 1123us; 1230us; 1124us; 1230us; 1125us; 1230us; 1126us; 1230us; 1127us; 1230us; 1128us; 1230us; 1129us; 1230us; 1130us; 1230us; 1152us; 1230us; 1174us; 1230us; 1175us; 1230us; 1179us; 1230us; 1181us; 1230us; 1185us; 1230us; 1187us; 1230us; 1191us; 1230us; 1194us; 1230us; 1196us; 1230us; 1198us; 1230us; 1199us; 1230us; 1201us; 1230us; 1202us; 1230us; 1204us; 1230us; 1205us; 1230us; 1207us; 1230us; 1208us; 1230us; 1210us; 1230us; 1211us; 1230us; 1213us; 1230us; 1214us; 1230us; 1226us; 1230us; 1228us; 1230us; 1259us; 1230us; 1268us; 1230us; 1275us; 1230us; 1285us; 1230us; 1287us; 1230us; 1288us; 1230us; 1299us; 1230us; 1306us; 1230us; 1307us; 1230us; 1313us; 1230us; 1319us; 1230us; 1320us; 1230us; 1321us; 1230us; 1337us; 1230us; 1347us; 1231us; 1360us; 1230us; 1361us; 1230us; 1363us; 1230us; 1365us; 1230us; 1369us; 1230us; 1370us; 1230us; 1393us; 1230us; 1398us; 1230us; 1423us; 1230us; 1457us; 1230us; 1462us; 1230us; 3us; 65535us; 1230us; 1232us; 1231us; 1232us; 1374us; 1377us; 129us; 65535us; 6us; 1233us; 31us; 1233us; 104us; 1233us; 106us; 1233us; 224us; 1233us; 238us; 1233us; 260us; 1233us; 401us; 1233us; 406us; 1233us; 441us; 1233us; 457us; 1233us; 681us; 1233us; 687us; 1233us; 736us; 1233us; 740us; 1233us; 750us; 1233us; 924us; 1233us; 929us; 1233us; 943us; 1233us; 945us; 1233us; 948us; 1233us; 951us; 1233us; 967us; 1233us; 970us; 1233us; 973us; 1233us; 979us; 1233us; 983us; 1233us; 987us; 1233us; 989us; 1233us; 994us; 1233us; 996us; 1233us; 998us; 1233us; 1000us; 1233us; 1002us; 1233us; 1004us; 1233us; 1015us; 1233us; 1023us; 1233us; 1030us; 1233us; 1036us; 1233us; 1038us; 1233us; 1041us; 1233us; 1044us; 1233us; 1047us; 1233us; 1050us; 1233us; 1053us; 1233us; 1056us; 1233us; 1058us; 1233us; 1063us; 1233us; 1106us; 1233us; 1108us; 1233us; 1111us; 1233us; 1112us; 1233us; 1113us; 1233us; 1114us; 1233us; 1115us; 1233us; 1116us; 1233us; 1117us; 1233us; 1118us; 1233us; 1119us; 1233us; 1120us; 1233us; 1121us; 1233us; 1122us; 1233us; 1123us; 1233us; 1124us; 1233us; 1125us; 1233us; 1126us; 1233us; 1127us; 1233us; 1128us; 1233us; 1129us; 1233us; 1130us; 1233us; 1152us; 1233us; 1174us; 1233us; 1175us; 1233us; 1179us; 1233us; 1181us; 1233us; 1185us; 1233us; 1187us; 1233us; 1191us; 1233us; 1194us; 1233us; 1196us; 1233us; 1198us; 1233us; 1199us; 1233us; 1201us; 1233us; 1202us; 1233us; 1204us; 1233us; 1205us; 1233us; 1207us; 1233us; 1208us; 1233us; 1210us; 1233us; 1211us; 1233us; 1213us; 1233us; 1214us; 1233us; 1226us; 1233us; 1228us; 1233us; 1230us; 1236us; 1231us; 1236us; 1234us; 1235us; 1241us; 1237us; 1242us; 1238us; 1245us; 1239us; 1246us; 1239us; 1259us; 1233us; 1268us; 1233us; 1275us; 1233us; 1285us; 1233us; 1287us; 1233us; 1288us; 1233us; 1299us; 1233us; 1306us; 1233us; 1307us; 1233us; 1313us; 1233us; 1319us; 1233us; 1320us; 1233us; 1321us; 1233us; 1337us; 1233us; 1347us; 1233us; 1360us; 1233us; 1361us; 1233us; 1363us; 1233us; 1365us; 1233us; 1369us; 1233us; 1370us; 1233us; 1374us; 1236us; 1393us; 1233us; 1398us; 1233us; 1423us; 1233us; 1457us; 1233us; 1462us; 1233us; 1595us; 1240us; 2us; 65535us; 1247us; 1248us; 1250us; 1251us; 2us; 65535us; 1275us; 1279us; 1285us; 1286us; 2us; 65535us; 1275us; 1284us; 1285us; 1284us; 136us; 65535us; 6us; 1265us; 31us; 1265us; 104us; 1265us; 106us; 1265us; 224us; 1265us; 238us; 1265us; 260us; 1265us; 310us; 1378us; 314us; 1378us; 319us; 1378us; 401us; 1265us; 406us; 1265us; 441us; 1265us; 457us; 1265us; 482us; 483us; 681us; 1265us; 687us; 1265us; 736us; 1265us; 740us; 1265us; 750us; 1265us; 924us; 1265us; 929us; 1265us; 943us; 1265us; 945us; 1265us; 948us; 1265us; 951us; 1265us; 967us; 1265us; 970us; 1265us; 973us; 1265us; 979us; 1265us; 983us; 1265us; 987us; 1265us; 989us; 1265us; 994us; 1265us; 996us; 1265us; 998us; 1265us; 1000us; 1265us; 1002us; 1265us; 1004us; 1265us; 1015us; 1265us; 1023us; 1265us; 1030us; 1265us; 1036us; 1265us; 1038us; 1265us; 1041us; 1265us; 1044us; 1265us; 1047us; 1265us; 1050us; 1265us; 1053us; 1265us; 1056us; 1265us; 1058us; 1265us; 1063us; 1265us; 1106us; 1265us; 1108us; 1265us; 1111us; 1265us; 1112us; 1265us; 1113us; 1265us; 1114us; 1265us; 1115us; 1265us; 1116us; 1265us; 1117us; 1265us; 1118us; 1265us; 1119us; 1265us; 1120us; 1265us; 1121us; 1265us; 1122us; 1265us; 1123us; 1265us; 1124us; 1265us; 1125us; 1265us; 1126us; 1265us; 1127us; 1265us; 1128us; 1265us; 1129us; 1265us; 1130us; 1265us; 1152us; 1265us; 1174us; 1265us; 1175us; 1265us; 1179us; 1265us; 1181us; 1265us; 1185us; 1265us; 1187us; 1265us; 1191us; 1265us; 1194us; 1265us; 1196us; 1265us; 1198us; 1265us; 1199us; 1265us; 1201us; 1265us; 1202us; 1265us; 1204us; 1265us; 1205us; 1265us; 1207us; 1265us; 1208us; 1265us; 1210us; 1265us; 1211us; 1265us; 1213us; 1265us; 1214us; 1265us; 1220us; 1222us; 1221us; 1223us; 1226us; 1265us; 1228us; 1265us; 1230us; 1265us; 1231us; 1265us; 1234us; 1265us; 1241us; 1265us; 1242us; 1265us; 1245us; 1265us; 1246us; 1265us; 1259us; 1265us; 1268us; 1265us; 1275us; 1265us; 1285us; 1265us; 1287us; 1265us; 1288us; 1265us; 1299us; 1265us; 1306us; 1265us; 1307us; 1265us; 1313us; 1265us; 1319us; 1265us; 1320us; 1265us; 1321us; 1265us; 1337us; 1265us; 1347us; 1265us; 1360us; 1265us; 1361us; 1265us; 1363us; 1265us; 1365us; 1265us; 1369us; 1265us; 1370us; 1265us; 1374us; 1265us; 1389us; 1378us; 1393us; 1265us; 1398us; 1265us; 1423us; 1265us; 1457us; 1265us; 1462us; 1265us; 1595us; 1265us; 136us; 65535us; 6us; 1298us; 31us; 1298us; 104us; 1298us; 106us; 1298us; 224us; 1298us; 238us; 1298us; 260us; 1298us; 310us; 1298us; 314us; 1298us; 319us; 1298us; 401us; 1298us; 406us; 1298us; 441us; 1298us; 457us; 1298us; 482us; 1298us; 681us; 1298us; 687us; 1298us; 736us; 1298us; 740us; 1298us; 750us; 1298us; 924us; 1298us; 929us; 1298us; 943us; 1298us; 945us; 1298us; 948us; 1298us; 951us; 1298us; 967us; 1298us; 970us; 1298us; 973us; 1298us; 979us; 1298us; 983us; 1298us; 987us; 1298us; 989us; 1298us; 994us; 1298us; 996us; 1298us; 998us; 1298us; 1000us; 1298us; 1002us; 1298us; 1004us; 1298us; 1015us; 1298us; 1023us; 1298us; 1030us; 1298us; 1036us; 1298us; 1038us; 1298us; 1041us; 1298us; 1044us; 1298us; 1047us; 1298us; 1050us; 1298us; 1053us; 1298us; 1056us; 1298us; 1058us; 1298us; 1063us; 1298us; 1106us; 1298us; 1108us; 1298us; 1111us; 1298us; 1112us; 1298us; 1113us; 1298us; 1114us; 1298us; 1115us; 1298us; 1116us; 1298us; 1117us; 1298us; 1118us; 1298us; 1119us; 1298us; 1120us; 1298us; 1121us; 1298us; 1122us; 1298us; 1123us; 1298us; 1124us; 1298us; 1125us; 1298us; 1126us; 1298us; 1127us; 1298us; 1128us; 1298us; 1129us; 1298us; 1130us; 1298us; 1152us; 1298us; 1174us; 1298us; 1175us; 1298us; 1179us; 1298us; 1181us; 1298us; 1185us; 1298us; 1187us; 1298us; 1191us; 1298us; 1194us; 1298us; 1196us; 1298us; 1198us; 1298us; 1199us; 1298us; 1201us; 1298us; 1202us; 1298us; 1204us; 1298us; 1205us; 1298us; 1207us; 1298us; 1208us; 1298us; 1210us; 1298us; 1211us; 1298us; 1213us; 1298us; 1214us; 1298us; 1220us; 1298us; 1221us; 1298us; 1226us; 1298us; 1228us; 1298us; 1230us; 1298us; 1231us; 1298us; 1234us; 1298us; 1241us; 1298us; 1242us; 1298us; 1245us; 1298us; 1246us; 1298us; 1259us; 1298us; 1268us; 1298us; 1275us; 1298us; 1285us; 1298us; 1287us; 1298us; 1288us; 1298us; 1299us; 1298us; 1306us; 1298us; 1307us; 1298us; 1313us; 1298us; 1319us; 1298us; 1320us; 1298us; 1321us; 1298us; 1337us; 1298us; 1347us; 1298us; 1360us; 1298us; 1361us; 1298us; 1363us; 1298us; 1365us; 1298us; 1369us; 1298us; 1370us; 1298us; 1374us; 1298us; 1389us; 1298us; 1393us; 1298us; 1398us; 1298us; 1423us; 1298us; 1457us; 1298us; 1462us; 1298us; 1595us; 1298us; 177us; 65535us; 6us; 1296us; 31us; 1296us; 104us; 1296us; 106us; 1296us; 224us; 1296us; 238us; 1296us; 260us; 1296us; 310us; 1296us; 314us; 1296us; 319us; 1296us; 398us; 860us; 401us; 1296us; 403us; 860us; 406us; 1296us; 438us; 860us; 441us; 1296us; 457us; 1296us; 482us; 1296us; 681us; 1296us; 687us; 1296us; 733us; 860us; 736us; 1296us; 740us; 1296us; 750us; 1296us; 823us; 860us; 824us; 860us; 828us; 860us; 829us; 860us; 830us; 860us; 831us; 860us; 838us; 860us; 841us; 860us; 843us; 860us; 845us; 860us; 850us; 860us; 854us; 860us; 856us; 860us; 858us; 860us; 866us; 860us; 869us; 860us; 881us; 860us; 902us; 860us; 907us; 860us; 908us; 860us; 910us; 860us; 911us; 860us; 912us; 860us; 913us; 860us; 920us; 860us; 922us; 860us; 924us; 1296us; 929us; 1296us; 943us; 1296us; 945us; 1296us; 948us; 1296us; 951us; 1296us; 967us; 1296us; 970us; 1296us; 973us; 1296us; 979us; 1296us; 983us; 1296us; 987us; 1296us; 989us; 1296us; 994us; 1296us; 996us; 1296us; 998us; 1296us; 1000us; 1296us; 1002us; 1296us; 1004us; 1296us; 1013us; 860us; 1015us; 1296us; 1023us; 1296us; 1030us; 1296us; 1036us; 1296us; 1038us; 1296us; 1040us; 860us; 1041us; 1296us; 1044us; 1296us; 1046us; 860us; 1047us; 1296us; 1050us; 1296us; 1053us; 1296us; 1056us; 1296us; 1058us; 1296us; 1063us; 1296us; 1106us; 1296us; 1108us; 1296us; 1111us; 1296us; 1112us; 1296us; 1113us; 1296us; 1114us; 1296us; 1115us; 1296us; 1116us; 1296us; 1117us; 1296us; 1118us; 1296us; 1119us; 1296us; 1120us; 1296us; 1121us; 1296us; 1122us; 1296us; 1123us; 1296us; 1124us; 1296us; 1125us; 1296us; 1126us; 1296us; 1127us; 1296us; 1128us; 1296us; 1129us; 1296us; 1130us; 1296us; 1152us; 1296us; 1155us; 860us; 1157us; 860us; 1162us; 860us; 1169us; 860us; 1174us; 1296us; 1175us; 1296us; 1179us; 1296us; 1181us; 1296us; 1185us; 1296us; 1187us; 1296us; 1191us; 1296us; 1194us; 1296us; 1196us; 1296us; 1198us; 1296us; 1199us; 1296us; 1201us; 1296us; 1202us; 1296us; 1204us; 1296us; 1205us; 1296us; 1207us; 1296us; 1208us; 1296us; 1210us; 1296us; 1211us; 1296us; 1213us; 1296us; 1214us; 1296us; 1220us; 1296us; 1221us; 1296us; 1226us; 1296us; 1228us; 1296us; 1230us; 1296us; 1231us; 1296us; 1234us; 1296us; 1241us; 1296us; 1242us; 1296us; 1245us; 1296us; 1246us; 1296us; 1259us; 1296us; 1268us; 1296us; 1275us; 1296us; 1285us; 1296us; 1287us; 1296us; 1288us; 1296us; 1299us; 1296us; 1306us; 1296us; 1307us; 1296us; 1313us; 1296us; 1319us; 1296us; 1320us; 1296us; 1321us; 1296us; 1337us; 1296us; 1347us; 1296us; 1360us; 1296us; 1361us; 1296us; 1363us; 1296us; 1365us; 1296us; 1369us; 1296us; 1370us; 1296us; 1374us; 1296us; 1389us; 1296us; 1393us; 1296us; 1398us; 1296us; 1423us; 1296us; 1455us; 860us; 1457us; 1296us; 1460us; 860us; 1462us; 1296us; 1473us; 860us; 1475us; 860us; 1595us; 1296us; 136us; 65535us; 6us; 1297us; 31us; 1297us; 104us; 1297us; 106us; 1297us; 224us; 1297us; 238us; 1297us; 260us; 1297us; 310us; 1297us; 314us; 1297us; 319us; 1297us; 401us; 1297us; 406us; 1297us; 441us; 1297us; 457us; 1297us; 482us; 1297us; 681us; 1297us; 687us; 1297us; 736us; 1297us; 740us; 1297us; 750us; 1297us; 924us; 1297us; 929us; 1297us; 943us; 1297us; 945us; 1297us; 948us; 1297us; 951us; 1297us; 967us; 1297us; 970us; 1297us; 973us; 1297us; 979us; 1297us; 983us; 1297us; 987us; 1297us; 989us; 1297us; 994us; 1297us; 996us; 1297us; 998us; 1297us; 1000us; 1297us; 1002us; 1297us; 1004us; 1297us; 1015us; 1297us; 1023us; 1297us; 1030us; 1297us; 1036us; 1297us; 1038us; 1297us; 1041us; 1297us; 1044us; 1297us; 1047us; 1297us; 1050us; 1297us; 1053us; 1297us; 1056us; 1297us; 1058us; 1297us; 1063us; 1297us; 1106us; 1297us; 1108us; 1297us; 1111us; 1297us; 1112us; 1297us; 1113us; 1297us; 1114us; 1297us; 1115us; 1297us; 1116us; 1297us; 1117us; 1297us; 1118us; 1297us; 1119us; 1297us; 1120us; 1297us; 1121us; 1297us; 1122us; 1297us; 1123us; 1297us; 1124us; 1297us; 1125us; 1297us; 1126us; 1297us; 1127us; 1297us; 1128us; 1297us; 1129us; 1297us; 1130us; 1297us; 1152us; 1297us; 1174us; 1297us; 1175us; 1297us; 1179us; 1297us; 1181us; 1297us; 1185us; 1297us; 1187us; 1297us; 1191us; 1297us; 1194us; 1297us; 1196us; 1297us; 1198us; 1297us; 1199us; 1297us; 1201us; 1297us; 1202us; 1297us; 1204us; 1297us; 1205us; 1297us; 1207us; 1297us; 1208us; 1297us; 1210us; 1297us; 1211us; 1297us; 1213us; 1297us; 1214us; 1297us; 1220us; 1297us; 1221us; 1297us; 1226us; 1297us; 1228us; 1297us; 1230us; 1297us; 1231us; 1297us; 1234us; 1297us; 1241us; 1297us; 1242us; 1297us; 1245us; 1297us; 1246us; 1297us; 1259us; 1297us; 1268us; 1297us; 1275us; 1297us; 1285us; 1297us; 1287us; 1297us; 1288us; 1297us; 1299us; 1297us; 1306us; 1297us; 1307us; 1297us; 1313us; 1297us; 1319us; 1297us; 1320us; 1297us; 1321us; 1297us; 1337us; 1297us; 1347us; 1297us; 1360us; 1297us; 1361us; 1297us; 1363us; 1297us; 1365us; 1297us; 1369us; 1297us; 1370us; 1297us; 1374us; 1297us; 1389us; 1297us; 1393us; 1297us; 1398us; 1297us; 1423us; 1297us; 1457us; 1297us; 1462us; 1297us; 1595us; 1297us; 136us; 65535us; 6us; 1291us; 31us; 1291us; 104us; 1291us; 106us; 1291us; 224us; 1291us; 238us; 1291us; 260us; 1291us; 310us; 1291us; 314us; 1291us; 319us; 1291us; 401us; 1291us; 406us; 1291us; 441us; 1291us; 457us; 1291us; 482us; 1291us; 681us; 1291us; 687us; 1291us; 736us; 1291us; 740us; 1291us; 750us; 1291us; 924us; 1291us; 929us; 1291us; 943us; 1291us; 945us; 1291us; 948us; 1291us; 951us; 1291us; 967us; 1291us; 970us; 1291us; 973us; 1291us; 979us; 1291us; 983us; 1291us; 987us; 1291us; 989us; 1291us; 994us; 1291us; 996us; 1291us; 998us; 1291us; 1000us; 1291us; 1002us; 1291us; 1004us; 1291us; 1015us; 1291us; 1023us; 1291us; 1030us; 1291us; 1036us; 1291us; 1038us; 1291us; 1041us; 1291us; 1044us; 1291us; 1047us; 1291us; 1050us; 1291us; 1053us; 1291us; 1056us; 1291us; 1058us; 1291us; 1063us; 1291us; 1106us; 1291us; 1108us; 1291us; 1111us; 1291us; 1112us; 1291us; 1113us; 1291us; 1114us; 1291us; 1115us; 1291us; 1116us; 1291us; 1117us; 1291us; 1118us; 1291us; 1119us; 1291us; 1120us; 1291us; 1121us; 1291us; 1122us; 1291us; 1123us; 1291us; 1124us; 1291us; 1125us; 1291us; 1126us; 1291us; 1127us; 1291us; 1128us; 1291us; 1129us; 1291us; 1130us; 1291us; 1152us; 1291us; 1174us; 1291us; 1175us; 1291us; 1179us; 1291us; 1181us; 1291us; 1185us; 1291us; 1187us; 1291us; 1191us; 1291us; 1194us; 1291us; 1196us; 1291us; 1198us; 1291us; 1199us; 1291us; 1201us; 1291us; 1202us; 1291us; 1204us; 1291us; 1205us; 1291us; 1207us; 1291us; 1208us; 1291us; 1210us; 1291us; 1211us; 1291us; 1213us; 1291us; 1214us; 1291us; 1220us; 1291us; 1221us; 1291us; 1226us; 1291us; 1228us; 1291us; 1230us; 1291us; 1231us; 1291us; 1234us; 1291us; 1241us; 1291us; 1242us; 1291us; 1245us; 1291us; 1246us; 1291us; 1259us; 1291us; 1268us; 1291us; 1275us; 1291us; 1285us; 1291us; 1287us; 1291us; 1288us; 1291us; 1299us; 1291us; 1306us; 1291us; 1307us; 1291us; 1313us; 1291us; 1319us; 1291us; 1320us; 1291us; 1321us; 1291us; 1337us; 1291us; 1347us; 1291us; 1360us; 1291us; 1361us; 1291us; 1363us; 1291us; 1365us; 1291us; 1369us; 1291us; 1370us; 1291us; 1374us; 1291us; 1389us; 1291us; 1393us; 1291us; 1398us; 1291us; 1423us; 1291us; 1457us; 1291us; 1462us; 1291us; 1595us; 1291us; 3us; 65535us; 1319us; 1323us; 1320us; 1323us; 1321us; 1323us; 3us; 65535us; 1319us; 1333us; 1320us; 1333us; 1321us; 1333us; 1us; 65535us; 1320us; 1343us; 136us; 65535us; 6us; 1292us; 31us; 1292us; 104us; 1292us; 106us; 1292us; 224us; 1292us; 238us; 1292us; 260us; 1292us; 310us; 1292us; 314us; 1292us; 319us; 1292us; 401us; 1292us; 406us; 1292us; 441us; 1292us; 457us; 1292us; 482us; 1292us; 681us; 1292us; 687us; 1292us; 736us; 1292us; 740us; 1292us; 750us; 1292us; 924us; 1292us; 929us; 1292us; 943us; 1292us; 945us; 1292us; 948us; 1292us; 951us; 1292us; 967us; 1292us; 970us; 1292us; 973us; 1292us; 979us; 1292us; 983us; 1292us; 987us; 1292us; 989us; 1292us; 994us; 1292us; 996us; 1292us; 998us; 1292us; 1000us; 1292us; 1002us; 1292us; 1004us; 1292us; 1015us; 1292us; 1023us; 1292us; 1030us; 1292us; 1036us; 1292us; 1038us; 1292us; 1041us; 1292us; 1044us; 1292us; 1047us; 1292us; 1050us; 1292us; 1053us; 1292us; 1056us; 1292us; 1058us; 1292us; 1063us; 1292us; 1106us; 1292us; 1108us; 1292us; 1111us; 1292us; 1112us; 1292us; 1113us; 1292us; 1114us; 1292us; 1115us; 1292us; 1116us; 1292us; 1117us; 1292us; 1118us; 1292us; 1119us; 1292us; 1120us; 1292us; 1121us; 1292us; 1122us; 1292us; 1123us; 1292us; 1124us; 1292us; 1125us; 1292us; 1126us; 1292us; 1127us; 1292us; 1128us; 1292us; 1129us; 1292us; 1130us; 1292us; 1152us; 1292us; 1174us; 1292us; 1175us; 1292us; 1179us; 1292us; 1181us; 1292us; 1185us; 1292us; 1187us; 1292us; 1191us; 1292us; 1194us; 1292us; 1196us; 1292us; 1198us; 1292us; 1199us; 1292us; 1201us; 1292us; 1202us; 1292us; 1204us; 1292us; 1205us; 1292us; 1207us; 1292us; 1208us; 1292us; 1210us; 1292us; 1211us; 1292us; 1213us; 1292us; 1214us; 1292us; 1220us; 1292us; 1221us; 1292us; 1226us; 1292us; 1228us; 1292us; 1230us; 1292us; 1231us; 1292us; 1234us; 1292us; 1241us; 1292us; 1242us; 1292us; 1245us; 1292us; 1246us; 1292us; 1259us; 1292us; 1268us; 1292us; 1275us; 1292us; 1285us; 1292us; 1287us; 1292us; 1288us; 1292us; 1299us; 1292us; 1306us; 1292us; 1307us; 1292us; 1313us; 1292us; 1319us; 1292us; 1320us; 1292us; 1321us; 1292us; 1337us; 1292us; 1347us; 1292us; 1360us; 1292us; 1361us; 1292us; 1363us; 1292us; 1365us; 1292us; 1369us; 1292us; 1370us; 1292us; 1374us; 1292us; 1389us; 1292us; 1393us; 1292us; 1398us; 1292us; 1423us; 1292us; 1457us; 1292us; 1462us; 1292us; 1595us; 1292us; 1us; 65535us; 1347us; 1348us; 2us; 65535us; 1259us; 1260us; 1313us; 1314us; 3us; 65535us; 1259us; 1357us; 1313us; 1357us; 1347us; 1356us; 4us; 65535us; 1259us; 1359us; 1313us; 1359us; 1347us; 1359us; 1365us; 1366us; 1us; 65535us; 1061us; 1062us; 1us; 65535us; 1013us; 1014us; 1us; 65535us; 1013us; 1022us; 3us; 65535us; 1319us; 1340us; 1320us; 1340us; 1321us; 1340us; 1us; 65535us; 1373us; 1374us; 4us; 65535us; 310us; 311us; 314us; 315us; 319us; 320us; 1389us; 1390us; 1us; 65535us; 1372us; 1373us; 1us; 65535us; 1374us; 1375us; 1us; 65535us; 1347us; 1354us; 6us; 65535us; 1391us; 1392us; 1395us; 1396us; 1400us; 1401us; 1404us; 1405us; 1406us; 1407us; 1410us; 1411us; 6us; 65535us; 1391us; 1414us; 1395us; 1414us; 1400us; 1414us; 1404us; 1414us; 1406us; 1413us; 1410us; 1414us; 3us; 65535us; 1402us; 1422us; 1406us; 1422us; 1414us; 1422us; 5us; 65535us; 1390us; 1391us; 1394us; 1395us; 1399us; 1400us; 1403us; 1404us; 1409us; 1410us; 3us; 65535us; 1402us; 1403us; 1406us; 1409us; 1414us; 1421us; 1us; 65535us; 1347us; 1355us; 1us; 65535us; 1347us; 1427us; 1us; 65535us; 1449us; 1450us; 2us; 65535us; 1427us; 1428us; 1449us; 1434us; 1us; 65535us; 1431us; 1432us; 4us; 65535us; 1429us; 1430us; 1442us; 1443us; 1444us; 1445us; 1446us; 1447us; 5us; 65535us; 1429us; 1444us; 1431us; 1442us; 1442us; 1444us; 1444us; 1444us; 1446us; 1444us; 1us; 65535us; 1098us; 1370us; 106us; 65535us; 6us; 978us; 31us; 978us; 104us; 978us; 106us; 978us; 224us; 978us; 238us; 978us; 260us; 978us; 401us; 978us; 406us; 978us; 441us; 978us; 457us; 978us; 681us; 978us; 687us; 978us; 736us; 978us; 740us; 978us; 750us; 978us; 924us; 978us; 929us; 978us; 943us; 978us; 945us; 978us; 948us; 978us; 951us; 978us; 967us; 978us; 970us; 978us; 973us; 978us; 979us; 978us; 983us; 978us; 987us; 978us; 989us; 978us; 994us; 978us; 996us; 978us; 998us; 978us; 1000us; 978us; 1002us; 978us; 1004us; 978us; 1015us; 978us; 1023us; 978us; 1030us; 978us; 1036us; 978us; 1038us; 978us; 1041us; 978us; 1044us; 978us; 1047us; 978us; 1050us; 978us; 1053us; 978us; 1056us; 978us; 1058us; 978us; 1063us; 978us; 1106us; 978us; 1108us; 978us; 1111us; 978us; 1112us; 978us; 1113us; 978us; 1114us; 978us; 1115us; 978us; 1116us; 978us; 1117us; 978us; 1118us; 978us; 1119us; 978us; 1120us; 978us; 1121us; 978us; 1122us; 978us; 1123us; 978us; 1124us; 978us; 1125us; 978us; 1126us; 978us; 1127us; 978us; 1128us; 978us; 1129us; 978us; 1130us; 978us; 1152us; 978us; 1174us; 978us; 1175us; 978us; 1179us; 978us; 1181us; 978us; 1185us; 978us; 1187us; 978us; 1191us; 978us; 1194us; 978us; 1196us; 978us; 1259us; 978us; 1268us; 978us; 1275us; 978us; 1285us; 978us; 1287us; 978us; 1288us; 978us; 1299us; 978us; 1306us; 978us; 1307us; 978us; 1313us; 978us; 1319us; 978us; 1320us; 978us; 1321us; 978us; 1337us; 978us; 1347us; 978us; 1360us; 978us; 1361us; 978us; 1363us; 978us; 1365us; 978us; 1369us; 978us; 1370us; 978us; 1393us; 978us; 1398us; 978us; 1423us; 978us; 1457us; 978us; 1462us; 978us; 106us; 65535us; 6us; 977us; 31us; 977us; 104us; 977us; 106us; 977us; 224us; 977us; 238us; 977us; 260us; 977us; 401us; 977us; 406us; 977us; 441us; 977us; 457us; 977us; 681us; 977us; 687us; 977us; 736us; 977us; 740us; 977us; 750us; 977us; 924us; 977us; 929us; 977us; 943us; 977us; 945us; 977us; 948us; 977us; 951us; 977us; 967us; 977us; 970us; 977us; 973us; 977us; 979us; 977us; 983us; 977us; 987us; 977us; 989us; 977us; 994us; 977us; 996us; 977us; 998us; 977us; 1000us; 977us; 1002us; 977us; 1004us; 977us; 1015us; 977us; 1023us; 977us; 1030us; 977us; 1036us; 977us; 1038us; 977us; 1041us; 977us; 1044us; 977us; 1047us; 977us; 1050us; 977us; 1053us; 977us; 1056us; 977us; 1058us; 977us; 1063us; 977us; 1106us; 977us; 1108us; 977us; 1111us; 977us; 1112us; 977us; 1113us; 977us; 1114us; 977us; 1115us; 977us; 1116us; 977us; 1117us; 977us; 1118us; 977us; 1119us; 977us; 1120us; 977us; 1121us; 977us; 1122us; 977us; 1123us; 977us; 1124us; 977us; 1125us; 977us; 1126us; 977us; 1127us; 977us; 1128us; 977us; 1129us; 977us; 1130us; 977us; 1152us; 977us; 1174us; 977us; 1175us; 977us; 1179us; 977us; 1181us; 977us; 1185us; 977us; 1187us; 977us; 1191us; 977us; 1194us; 977us; 1196us; 977us; 1259us; 977us; 1268us; 977us; 1275us; 977us; 1285us; 977us; 1287us; 977us; 1288us; 977us; 1299us; 977us; 1306us; 977us; 1307us; 977us; 1313us; 977us; 1319us; 977us; 1320us; 977us; 1321us; 977us; 1337us; 977us; 1347us; 977us; 1360us; 977us; 1361us; 977us; 1363us; 977us; 1365us; 977us; 1369us; 977us; 1370us; 977us; 1393us; 977us; 1398us; 977us; 1423us; 977us; 1457us; 977us; 1462us; 977us; 3us; 65535us; 800us; 801us; 905us; 906us; 936us; 937us; 5us; 65535us; 101us; 102us; 175us; 176us; 191us; 192us; 427us; 428us; 1482us; 1483us; 3us; 65535us; 399us; 400us; 404us; 405us; 734us; 735us; 9us; 65535us; 101us; 1480us; 140us; 141us; 175us; 1480us; 191us; 1480us; 364us; 365us; 427us; 1480us; 621us; 622us; 1482us; 1480us; 1485us; 1486us; 9us; 65535us; 101us; 1484us; 140us; 1484us; 175us; 1484us; 191us; 1484us; 364us; 1484us; 427us; 1484us; 621us; 1484us; 1482us; 1484us; 1485us; 1484us; 2us; 65535us; 1488us; 1489us; 1491us; 1492us; 11us; 65535us; 101us; 1487us; 140us; 1487us; 175us; 1487us; 191us; 1487us; 364us; 1487us; 427us; 1487us; 621us; 1487us; 1482us; 1487us; 1485us; 1487us; 1488us; 1490us; 1491us; 1490us; 33us; 65535us; 8us; 1511us; 169us; 520us; 414us; 520us; 450us; 451us; 460us; 461us; 515us; 520us; 523us; 1590us; 578us; 579us; 581us; 582us; 660us; 661us; 756us; 757us; 800us; 1478us; 905us; 1478us; 936us; 1478us; 1100us; 1101us; 1102us; 1103us; 1104us; 1105us; 1380us; 1381us; 1383us; 1384us; 1385us; 1590us; 1509us; 1510us; 1542us; 1590us; 1543us; 1590us; 1551us; 1553us; 1552us; 1554us; 1557us; 1559us; 1558us; 1560us; 1570us; 1621us; 1574us; 1621us; 1588us; 1589us; 1609us; 1621us; 1611us; 1621us; 1622us; 1623us; 1us; 65535us; 8us; 9us; 33us; 65535us; 8us; 1508us; 169us; 1508us; 414us; 1508us; 450us; 1508us; 460us; 1508us; 515us; 1508us; 523us; 1508us; 578us; 1508us; 581us; 1508us; 660us; 1508us; 756us; 1508us; 800us; 1508us; 905us; 1508us; 936us; 1508us; 1100us; 1508us; 1102us; 1508us; 1104us; 1508us; 1380us; 1508us; 1383us; 1508us; 1385us; 1508us; 1509us; 1508us; 1542us; 1508us; 1543us; 1508us; 1551us; 1508us; 1552us; 1508us; 1557us; 1508us; 1558us; 1508us; 1570us; 1508us; 1574us; 1508us; 1588us; 1508us; 1609us; 1508us; 1611us; 1508us; 1622us; 1508us; 5us; 65535us; 1514us; 1515us; 1516us; 1517us; 1518us; 1519us; 1521us; 1522us; 1523us; 1524us; 0us; 65535us; 87us; 65535us; 8us; 1530us; 101us; 1530us; 140us; 1530us; 169us; 1530us; 175us; 1530us; 179us; 1530us; 180us; 1529us; 181us; 1530us; 182us; 1529us; 191us; 1530us; 364us; 1530us; 414us; 1530us; 420us; 1530us; 421us; 1529us; 427us; 1530us; 450us; 1530us; 460us; 1530us; 479us; 1530us; 515us; 1530us; 523us; 1530us; 532us; 1530us; 578us; 1530us; 581us; 1530us; 618us; 1530us; 621us; 1530us; 640us; 1530us; 643us; 1530us; 646us; 1530us; 647us; 1529us; 648us; 1529us; 660us; 1530us; 671us; 1530us; 756us; 1530us; 800us; 1530us; 847us; 1530us; 905us; 1530us; 936us; 1530us; 1100us; 1530us; 1102us; 1530us; 1104us; 1530us; 1216us; 1530us; 1217us; 1530us; 1380us; 1530us; 1383us; 1530us; 1385us; 1530us; 1387us; 1530us; 1448us; 1530us; 1449us; 1529us; 1482us; 1530us; 1485us; 1530us; 1488us; 1530us; 1491us; 1530us; 1493us; 1530us; 1494us; 1529us; 1495us; 1530us; 1496us; 1529us; 1499us; 1530us; 1500us; 1529us; 1501us; 1529us; 1502us; 1530us; 1503us; 1529us; 1506us; 1530us; 1507us; 1529us; 1509us; 1530us; 1513us; 1529us; 1514us; 1530us; 1516us; 1530us; 1518us; 1530us; 1520us; 1529us; 1521us; 1530us; 1523us; 1530us; 1533us; 1529us; 1542us; 1530us; 1543us; 1530us; 1546us; 1529us; 1547us; 1529us; 1551us; 1530us; 1552us; 1530us; 1557us; 1530us; 1558us; 1530us; 1570us; 1530us; 1574us; 1530us; 1584us; 1530us; 1588us; 1530us; 1609us; 1530us; 1611us; 1530us; 1622us; 1530us; 87us; 65535us; 8us; 1586us; 101us; 1586us; 140us; 1586us; 169us; 1586us; 175us; 1586us; 179us; 1586us; 180us; 1540us; 181us; 1586us; 182us; 1540us; 191us; 1586us; 364us; 1586us; 414us; 1586us; 420us; 1586us; 421us; 1540us; 427us; 1586us; 450us; 1586us; 460us; 1586us; 479us; 1586us; 515us; 1586us; 523us; 1586us; 532us; 1586us; 578us; 1586us; 581us; 1586us; 618us; 1586us; 621us; 1586us; 640us; 1586us; 643us; 1586us; 646us; 1586us; 647us; 1540us; 648us; 1540us; 660us; 1586us; 671us; 1586us; 756us; 1586us; 800us; 1586us; 847us; 1586us; 905us; 1586us; 936us; 1586us; 1100us; 1586us; 1102us; 1586us; 1104us; 1586us; 1216us; 1586us; 1217us; 1586us; 1380us; 1586us; 1383us; 1586us; 1385us; 1586us; 1387us; 1586us; 1448us; 1586us; 1449us; 1540us; 1482us; 1586us; 1485us; 1586us; 1488us; 1586us; 1491us; 1586us; 1493us; 1586us; 1494us; 1540us; 1495us; 1586us; 1496us; 1540us; 1499us; 1586us; 1500us; 1540us; 1501us; 1540us; 1502us; 1586us; 1503us; 1540us; 1506us; 1586us; 1507us; 1540us; 1509us; 1586us; 1513us; 1540us; 1514us; 1586us; 1516us; 1586us; 1518us; 1586us; 1520us; 1540us; 1521us; 1586us; 1523us; 1586us; 1533us; 1541us; 1542us; 1586us; 1543us; 1586us; 1546us; 1548us; 1547us; 1549us; 1551us; 1586us; 1552us; 1586us; 1557us; 1586us; 1558us; 1586us; 1570us; 1586us; 1574us; 1586us; 1584us; 1586us; 1588us; 1586us; 1609us; 1586us; 1611us; 1586us; 1622us; 1586us; 67us; 65535us; 8us; 1513us; 101us; 1501us; 140us; 1501us; 169us; 1513us; 175us; 1501us; 179us; 180us; 181us; 182us; 191us; 1501us; 364us; 1501us; 414us; 1513us; 420us; 421us; 427us; 1501us; 450us; 1513us; 460us; 1513us; 479us; 1533us; 515us; 1513us; 523us; 1513us; 578us; 1513us; 581us; 1513us; 618us; 648us; 621us; 1501us; 640us; 648us; 643us; 648us; 646us; 647us; 660us; 1513us; 671us; 648us; 756us; 1513us; 800us; 1513us; 905us; 1513us; 936us; 1513us; 1100us; 1513us; 1102us; 1513us; 1104us; 1513us; 1216us; 1533us; 1217us; 1533us; 1380us; 1513us; 1383us; 1513us; 1385us; 1513us; 1387us; 1533us; 1448us; 1449us; 1482us; 1501us; 1485us; 1501us; 1488us; 1501us; 1491us; 1501us; 1493us; 1494us; 1495us; 1496us; 1499us; 1500us; 1502us; 1503us; 1506us; 1507us; 1509us; 1513us; 1514us; 1520us; 1516us; 1520us; 1518us; 1520us; 1521us; 1520us; 1523us; 1520us; 1542us; 1513us; 1543us; 1513us; 1551us; 1513us; 1552us; 1513us; 1557us; 1513us; 1558us; 1513us; 1570us; 1513us; 1574us; 1513us; 1588us; 1513us; 1609us; 1513us; 1611us; 1513us; 1622us; 1513us; 17us; 65535us; 180us; 1534us; 182us; 1534us; 421us; 1534us; 647us; 1534us; 648us; 1534us; 1449us; 1534us; 1494us; 1534us; 1496us; 1534us; 1500us; 1534us; 1501us; 1534us; 1503us; 1534us; 1507us; 1534us; 1513us; 1534us; 1520us; 1534us; 1533us; 1535us; 1536us; 1538us; 1537us; 1539us; 4us; 65535us; 523us; 1544us; 1385us; 1544us; 1542us; 1545us; 1543us; 1544us; 2us; 65535us; 1571us; 1572us; 1612us; 1573us; 67us; 65535us; 8us; 1550us; 101us; 1550us; 140us; 1550us; 169us; 1550us; 175us; 1550us; 179us; 1550us; 181us; 1550us; 191us; 1550us; 364us; 1550us; 414us; 1550us; 420us; 1550us; 427us; 1550us; 450us; 1550us; 460us; 1550us; 479us; 1550us; 515us; 1550us; 523us; 1550us; 578us; 1550us; 581us; 1550us; 618us; 1550us; 621us; 1550us; 640us; 1550us; 643us; 1550us; 646us; 1550us; 660us; 1550us; 671us; 1550us; 756us; 1550us; 800us; 1550us; 905us; 1550us; 936us; 1550us; 1100us; 1550us; 1102us; 1550us; 1104us; 1550us; 1216us; 1550us; 1217us; 1550us; 1380us; 1550us; 1383us; 1550us; 1385us; 1550us; 1387us; 1550us; 1448us; 1550us; 1482us; 1550us; 1485us; 1550us; 1488us; 1550us; 1491us; 1550us; 1493us; 1550us; 1495us; 1550us; 1499us; 1550us; 1502us; 1550us; 1506us; 1550us; 1509us; 1550us; 1514us; 1550us; 1516us; 1550us; 1518us; 1550us; 1521us; 1550us; 1523us; 1550us; 1542us; 1550us; 1543us; 1550us; 1551us; 1550us; 1552us; 1550us; 1557us; 1550us; 1558us; 1550us; 1570us; 1550us; 1574us; 1550us; 1588us; 1550us; 1609us; 1550us; 1611us; 1550us; 1622us; 1550us; 4us; 65535us; 479us; 480us; 1216us; 1218us; 1217us; 1219us; 1387us; 1388us; 4us; 65535us; 479us; 1583us; 1216us; 1583us; 1217us; 1583us; 1387us; 1583us; 70us; 65535us; 8us; 1578us; 101us; 1578us; 140us; 1578us; 169us; 1578us; 175us; 1578us; 179us; 1578us; 181us; 1578us; 191us; 1578us; 364us; 1578us; 414us; 1578us; 420us; 1578us; 427us; 1578us; 450us; 1578us; 460us; 1578us; 479us; 1577us; 515us; 1578us; 523us; 1578us; 532us; 1585us; 578us; 1578us; 581us; 1578us; 618us; 1578us; 621us; 1578us; 640us; 1578us; 643us; 1578us; 646us; 1578us; 660us; 1578us; 671us; 1578us; 756us; 1578us; 800us; 1578us; 847us; 848us; 905us; 1578us; 936us; 1578us; 1100us; 1578us; 1102us; 1578us; 1104us; 1578us; 1216us; 1577us; 1217us; 1577us; 1380us; 1578us; 1383us; 1578us; 1385us; 1578us; 1387us; 1577us; 1448us; 1578us; 1482us; 1578us; 1485us; 1578us; 1488us; 1578us; 1491us; 1578us; 1493us; 1578us; 1495us; 1578us; 1499us; 1578us; 1502us; 1578us; 1506us; 1578us; 1509us; 1578us; 1514us; 1578us; 1516us; 1578us; 1518us; 1578us; 1521us; 1578us; 1523us; 1578us; 1542us; 1578us; 1543us; 1578us; 1551us; 1578us; 1552us; 1578us; 1557us; 1578us; 1558us; 1578us; 1570us; 1578us; 1574us; 1578us; 1584us; 1585us; 1588us; 1578us; 1609us; 1578us; 1611us; 1578us; 1622us; 1578us; 4us; 65535us; 585us; 600us; 598us; 599us; 1530us; 1600us; 1602us; 1603us; 6us; 65535us; 585us; 1606us; 598us; 1606us; 1243us; 1244us; 1530us; 1606us; 1602us; 1606us; 1607us; 1608us; 8us; 65535us; 523us; 1569us; 1385us; 1569us; 1542us; 1569us; 1543us; 1569us; 1570us; 1571us; 1574us; 1575us; 1609us; 1616us; 1611us; 1624us; 2us; 65535us; 1609us; 1610us; 1611us; 1612us; 3us; 65535us; 1574us; 1576us; 1609us; 1625us; 1611us; 1625us; 1us; 65535us; 792us; 793us; 6us; 65535us; 1626us; 1636us; 1633us; 1636us; 1640us; 1636us; 1646us; 1636us; 1647us; 1636us; 1648us; 1636us; 6us; 65535us; 1626us; 1640us; 1633us; 1640us; 1640us; 1640us; 1646us; 1640us; 1647us; 1640us; 1648us; 1640us; 6us; 65535us; 1626us; 1642us; 1633us; 1642us; 1640us; 1641us; 1646us; 1642us; 1647us; 1642us; 1648us; 1642us; 5us; 65535us; 1626us; 1627us; 1633us; 1634us; 1646us; 1643us; 1647us; 1644us; 1648us; 1645us; 104us; 65535us; 8us; 1527us; 101us; 1527us; 140us; 1527us; 169us; 1527us; 175us; 1527us; 179us; 1527us; 180us; 1526us; 181us; 1527us; 182us; 1526us; 191us; 1527us; 364us; 1527us; 414us; 1527us; 420us; 1527us; 421us; 1526us; 427us; 1527us; 450us; 1527us; 460us; 1527us; 479us; 1528us; 515us; 1527us; 523us; 1527us; 532us; 1526us; 540us; 545us; 555us; 556us; 569us; 580us; 573us; 580us; 576us; 577us; 578us; 1527us; 581us; 1527us; 591us; 603us; 601us; 602us; 618us; 1527us; 621us; 1527us; 640us; 1527us; 643us; 1527us; 646us; 1527us; 647us; 1526us; 648us; 1526us; 660us; 1527us; 671us; 1527us; 748us; 755us; 752us; 755us; 756us; 1527us; 800us; 1527us; 847us; 1526us; 905us; 1527us; 936us; 1527us; 1100us; 1527us; 1102us; 1527us; 1104us; 1527us; 1216us; 1528us; 1217us; 1528us; 1380us; 1527us; 1383us; 1527us; 1385us; 1527us; 1387us; 1528us; 1448us; 1527us; 1449us; 1526us; 1479us; 580us; 1481us; 580us; 1482us; 1527us; 1485us; 1527us; 1488us; 1527us; 1491us; 1527us; 1493us; 1527us; 1494us; 1526us; 1495us; 1527us; 1496us; 1526us; 1499us; 1527us; 1500us; 1526us; 1501us; 1526us; 1502us; 1527us; 1503us; 1526us; 1506us; 1527us; 1507us; 1526us; 1509us; 1527us; 1513us; 1526us; 1514us; 1527us; 1516us; 1527us; 1518us; 1527us; 1520us; 1526us; 1521us; 1527us; 1523us; 1527us; 1533us; 1526us; 1542us; 1527us; 1543us; 1527us; 1546us; 1526us; 1547us; 1526us; 1551us; 1527us; 1552us; 1527us; 1557us; 1527us; 1558us; 1527us; 1570us; 1527us; 1574us; 1527us; 1584us; 1526us; 1588us; 1527us; 1609us; 1527us; 1611us; 1527us; 1622us; 1527us; 1626us; 1632us; 1633us; 1632us; 1640us; 1632us; 1646us; 1632us; 1647us; 1632us; 1648us; 1632us; 108us; 65535us; 8us; 1651us; 101us; 1651us; 140us; 1651us; 169us; 1651us; 175us; 1651us; 179us; 1651us; 180us; 1651us; 181us; 1651us; 182us; 1651us; 191us; 1651us; 364us; 1651us; 414us; 1651us; 420us; 1651us; 421us; 1651us; 427us; 1651us; 450us; 1651us; 460us; 1651us; 479us; 1651us; 515us; 1651us; 523us; 1651us; 532us; 1651us; 540us; 1651us; 555us; 1651us; 569us; 1651us; 573us; 1651us; 576us; 1651us; 578us; 1651us; 581us; 1651us; 591us; 1651us; 601us; 1651us; 618us; 1651us; 621us; 1651us; 640us; 1651us; 643us; 1651us; 646us; 1651us; 647us; 1651us; 648us; 1651us; 660us; 1651us; 671us; 1651us; 748us; 1651us; 752us; 1651us; 756us; 1651us; 800us; 1651us; 847us; 1651us; 905us; 1651us; 936us; 1651us; 1100us; 1651us; 1102us; 1651us; 1104us; 1651us; 1216us; 1651us; 1217us; 1651us; 1319us; 1341us; 1320us; 1342us; 1321us; 1341us; 1345us; 1346us; 1380us; 1651us; 1383us; 1651us; 1385us; 1651us; 1387us; 1651us; 1448us; 1651us; 1449us; 1651us; 1479us; 1651us; 1481us; 1651us; 1482us; 1651us; 1485us; 1651us; 1488us; 1651us; 1491us; 1651us; 1493us; 1651us; 1494us; 1651us; 1495us; 1651us; 1496us; 1651us; 1499us; 1651us; 1500us; 1651us; 1501us; 1651us; 1502us; 1651us; 1503us; 1651us; 1506us; 1651us; 1507us; 1651us; 1509us; 1651us; 1513us; 1651us; 1514us; 1651us; 1516us; 1651us; 1518us; 1651us; 1520us; 1651us; 1521us; 1651us; 1523us; 1651us; 1533us; 1651us; 1542us; 1651us; 1543us; 1651us; 1546us; 1651us; 1547us; 1651us; 1551us; 1651us; 1552us; 1651us; 1557us; 1651us; 1558us; 1651us; 1570us; 1651us; 1574us; 1651us; 1584us; 1651us; 1588us; 1651us; 1609us; 1651us; 1611us; 1651us; 1622us; 1651us; 1626us; 1651us; 1633us; 1651us; 1640us; 1651us; 1646us; 1651us; 1647us; 1651us; 1648us; 1651us; 322us; 65535us; 6us; 1704us; 8us; 1657us; 31us; 1704us; 50us; 1657us; 52us; 1657us; 87us; 1657us; 92us; 1657us; 98us; 1704us; 101us; 1657us; 104us; 1704us; 106us; 1704us; 109us; 1657us; 140us; 1657us; 169us; 634us; 172us; 1704us; 175us; 1657us; 179us; 1657us; 180us; 1657us; 181us; 1657us; 182us; 1657us; 191us; 1657us; 193us; 1704us; 195us; 1704us; 200us; 1704us; 224us; 1704us; 238us; 1704us; 260us; 1704us; 267us; 1657us; 296us; 325us; 307us; 325us; 312us; 1657us; 316us; 1657us; 364us; 1657us; 398us; 1706us; 401us; 1704us; 403us; 1706us; 406us; 1704us; 414us; 634us; 420us; 1657us; 421us; 1657us; 424us; 1704us; 427us; 1657us; 438us; 1706us; 441us; 1704us; 448us; 449us; 450us; 1657us; 454us; 455us; 457us; 1704us; 460us; 1657us; 463us; 1706us; 466us; 1706us; 479us; 1657us; 487us; 488us; 490us; 491us; 515us; 634us; 523us; 1657us; 532us; 1657us; 540us; 1657us; 542us; 1657us; 578us; 1657us; 581us; 1657us; 615us; 1704us; 618us; 645us; 621us; 1657us; 640us; 645us; 643us; 645us; 646us; 1657us; 647us; 1657us; 648us; 1657us; 658us; 659us; 660us; 1657us; 667us; 670us; 671us; 645us; 673us; 1657us; 675us; 1657us; 681us; 1704us; 687us; 1704us; 698us; 699us; 710us; 1657us; 711us; 712us; 723us; 1657us; 733us; 1706us; 736us; 1704us; 740us; 1704us; 750us; 1704us; 756us; 1657us; 796us; 797us; 800us; 1657us; 802us; 795us; 803us; 795us; 805us; 795us; 821us; 822us; 823us; 1706us; 824us; 1706us; 828us; 1706us; 829us; 1706us; 830us; 1706us; 831us; 1706us; 834us; 836us; 838us; 1706us; 841us; 1706us; 843us; 1706us; 845us; 1706us; 847us; 1657us; 850us; 837us; 854us; 1706us; 856us; 1706us; 858us; 1706us; 863us; 1657us; 866us; 1706us; 869us; 1706us; 873us; 875us; 874us; 875us; 881us; 1706us; 900us; 901us; 902us; 1706us; 905us; 1657us; 907us; 1706us; 908us; 1706us; 910us; 1706us; 911us; 1706us; 912us; 1706us; 913us; 1706us; 917us; 1657us; 920us; 1706us; 922us; 1706us; 924us; 1704us; 929us; 1704us; 936us; 1657us; 943us; 1704us; 945us; 1704us; 948us; 1704us; 951us; 1704us; 967us; 1704us; 970us; 1704us; 973us; 1704us; 979us; 1704us; 983us; 1704us; 987us; 1704us; 989us; 1704us; 994us; 1704us; 996us; 1704us; 998us; 1704us; 1000us; 1704us; 1002us; 1704us; 1004us; 1704us; 1013us; 1706us; 1015us; 1704us; 1023us; 1704us; 1030us; 1704us; 1036us; 1704us; 1038us; 1704us; 1040us; 1706us; 1041us; 1704us; 1044us; 1704us; 1046us; 1706us; 1047us; 1704us; 1050us; 1704us; 1053us; 1704us; 1056us; 1704us; 1058us; 1704us; 1063us; 1704us; 1100us; 1657us; 1102us; 1657us; 1104us; 1657us; 1106us; 1704us; 1108us; 1704us; 1111us; 1704us; 1112us; 1704us; 1113us; 1704us; 1114us; 1704us; 1115us; 1704us; 1116us; 1704us; 1117us; 1704us; 1118us; 1704us; 1119us; 1704us; 1120us; 1704us; 1121us; 1704us; 1122us; 1704us; 1123us; 1704us; 1124us; 1704us; 1125us; 1704us; 1126us; 1704us; 1127us; 1704us; 1128us; 1704us; 1129us; 1704us; 1130us; 1704us; 1152us; 1704us; 1155us; 1706us; 1157us; 1706us; 1162us; 1706us; 1169us; 1706us; 1174us; 1704us; 1175us; 1704us; 1179us; 1704us; 1181us; 1704us; 1185us; 1704us; 1187us; 1704us; 1191us; 1704us; 1194us; 1704us; 1196us; 1704us; 1198us; 1704us; 1199us; 1704us; 1201us; 1704us; 1202us; 1704us; 1204us; 1704us; 1205us; 1704us; 1207us; 1704us; 1208us; 1704us; 1210us; 1704us; 1211us; 1704us; 1213us; 1704us; 1214us; 1704us; 1216us; 1657us; 1217us; 1657us; 1226us; 1704us; 1228us; 1704us; 1230us; 1704us; 1231us; 1704us; 1234us; 1704us; 1241us; 1704us; 1242us; 1704us; 1245us; 1704us; 1246us; 1704us; 1247us; 1704us; 1250us; 1704us; 1252us; 1704us; 1253us; 1704us; 1259us; 1704us; 1268us; 1704us; 1275us; 1704us; 1285us; 1704us; 1287us; 1704us; 1288us; 1704us; 1299us; 1704us; 1306us; 1704us; 1307us; 1704us; 1313us; 1704us; 1319us; 1704us; 1320us; 1704us; 1321us; 1704us; 1337us; 1704us; 1347us; 1704us; 1360us; 1704us; 1361us; 1704us; 1363us; 1704us; 1365us; 1704us; 1369us; 1704us; 1370us; 1704us; 1374us; 1704us; 1380us; 1657us; 1383us; 1657us; 1385us; 1657us; 1387us; 1657us; 1393us; 1704us; 1398us; 1704us; 1402us; 1657us; 1406us; 1657us; 1414us; 1657us; 1423us; 1704us; 1448us; 1657us; 1449us; 1657us; 1455us; 1706us; 1457us; 1704us; 1460us; 1706us; 1462us; 1704us; 1473us; 1706us; 1475us; 1706us; 1482us; 1657us; 1485us; 1657us; 1488us; 1657us; 1491us; 1657us; 1493us; 1657us; 1494us; 1657us; 1495us; 1657us; 1496us; 1657us; 1497us; 1498us; 1499us; 1657us; 1500us; 1657us; 1501us; 1657us; 1502us; 1657us; 1503us; 1657us; 1504us; 1505us; 1506us; 1657us; 1507us; 1657us; 1509us; 1657us; 1513us; 1657us; 1514us; 1657us; 1516us; 1657us; 1518us; 1657us; 1520us; 1657us; 1521us; 1657us; 1523us; 1657us; 1533us; 1657us; 1542us; 1657us; 1543us; 1657us; 1546us; 1657us; 1547us; 1657us; 1551us; 1657us; 1552us; 1657us; 1557us; 1657us; 1558us; 1657us; 1570us; 1657us; 1574us; 1657us; 1584us; 1657us; 1588us; 1657us; 1595us; 1704us; 1601us; 1657us; 1609us; 1657us; 1611us; 1657us; 1622us; 1657us; 1626us; 1657us; 1633us; 1657us; 1640us; 1657us; 1646us; 1657us; 1647us; 1657us; 1648us; 1657us; 1649us; 1650us; 1652us; 1654us; 1653us; 1654us; 1658us; 1659us; 1708us; 1706us; 115us; 65535us; 8us; 1525us; 50us; 51us; 52us; 53us; 87us; 274us; 92us; 93us; 101us; 1525us; 109us; 272us; 140us; 1525us; 169us; 516us; 175us; 1525us; 179us; 1525us; 180us; 1525us; 181us; 1525us; 182us; 1525us; 191us; 1525us; 267us; 284us; 296us; 309us; 307us; 309us; 312us; 313us; 316us; 317us; 364us; 1525us; 414us; 516us; 420us; 1525us; 421us; 1525us; 427us; 1525us; 450us; 1525us; 460us; 1525us; 479us; 1525us; 515us; 516us; 523us; 1525us; 532us; 1525us; 540us; 541us; 542us; 543us; 578us; 1525us; 581us; 1525us; 618us; 1525us; 621us; 1525us; 640us; 1525us; 643us; 1525us; 646us; 1525us; 647us; 1525us; 648us; 1525us; 660us; 1525us; 671us; 1525us; 673us; 674us; 675us; 676us; 710us; 713us; 723us; 713us; 756us; 1525us; 800us; 1525us; 847us; 1525us; 863us; 919us; 905us; 1525us; 917us; 919us; 936us; 1525us; 1100us; 1525us; 1102us; 1525us; 1104us; 1525us; 1216us; 1525us; 1217us; 1525us; 1380us; 1525us; 1383us; 1525us; 1385us; 1525us; 1387us; 1525us; 1402us; 1419us; 1406us; 1419us; 1414us; 1419us; 1448us; 1525us; 1449us; 1525us; 1482us; 1525us; 1485us; 1525us; 1488us; 1525us; 1491us; 1525us; 1493us; 1525us; 1494us; 1525us; 1495us; 1525us; 1496us; 1525us; 1499us; 1525us; 1500us; 1525us; 1501us; 1525us; 1502us; 1525us; 1503us; 1525us; 1506us; 1525us; 1507us; 1525us; 1509us; 1525us; 1513us; 1525us; 1514us; 1525us; 1516us; 1525us; 1518us; 1525us; 1520us; 1525us; 1521us; 1525us; 1523us; 1525us; 1533us; 1525us; 1542us; 1525us; 1543us; 1525us; 1546us; 1525us; 1547us; 1525us; 1551us; 1525us; 1552us; 1525us; 1557us; 1525us; 1558us; 1525us; 1570us; 1525us; 1574us; 1525us; 1584us; 1525us; 1588us; 1525us; 1601us; 1602us; 1609us; 1525us; 1611us; 1525us; 1622us; 1525us; 1626us; 1631us; 1633us; 1631us; 1640us; 1631us; 1646us; 1631us; 1647us; 1631us; 1648us; 1631us; 184us; 65535us; 6us; 1705us; 31us; 1705us; 98us; 1705us; 104us; 1705us; 106us; 1705us; 172us; 1705us; 193us; 1705us; 195us; 1705us; 200us; 1705us; 224us; 1705us; 238us; 1705us; 260us; 1705us; 398us; 1707us; 401us; 1705us; 403us; 1707us; 406us; 1705us; 424us; 1705us; 438us; 1707us; 441us; 1705us; 457us; 1705us; 463us; 1707us; 466us; 1707us; 615us; 1705us; 681us; 1705us; 687us; 1705us; 733us; 1707us; 736us; 1705us; 740us; 1705us; 750us; 1705us; 823us; 1707us; 824us; 1707us; 828us; 1707us; 829us; 1707us; 830us; 1707us; 831us; 1707us; 838us; 1707us; 841us; 1707us; 843us; 1707us; 845us; 1707us; 850us; 1707us; 854us; 1707us; 856us; 1707us; 858us; 1707us; 866us; 1707us; 869us; 1707us; 881us; 1707us; 902us; 1707us; 907us; 1707us; 908us; 1707us; 910us; 1707us; 911us; 1707us; 912us; 1707us; 913us; 1707us; 920us; 1707us; 922us; 1707us; 924us; 1705us; 929us; 1705us; 943us; 1705us; 945us; 1705us; 948us; 1705us; 951us; 1705us; 967us; 1705us; 970us; 1705us; 973us; 1705us; 979us; 1705us; 983us; 1705us; 987us; 1705us; 989us; 1705us; 994us; 1705us; 996us; 1705us; 998us; 1705us; 1000us; 1705us; 1002us; 1705us; 1004us; 1705us; 1013us; 1707us; 1015us; 1705us; 1023us; 1705us; 1030us; 1705us; 1036us; 1705us; 1038us; 1705us; 1040us; 1707us; 1041us; 1705us; 1044us; 1705us; 1046us; 1707us; 1047us; 1705us; 1050us; 1705us; 1053us; 1705us; 1056us; 1705us; 1058us; 1705us; 1063us; 1705us; 1106us; 1705us; 1108us; 1705us; 1111us; 1705us; 1112us; 1705us; 1113us; 1705us; 1114us; 1705us; 1115us; 1705us; 1116us; 1705us; 1117us; 1705us; 1118us; 1705us; 1119us; 1705us; 1120us; 1705us; 1121us; 1705us; 1122us; 1705us; 1123us; 1705us; 1124us; 1705us; 1125us; 1705us; 1126us; 1705us; 1127us; 1705us; 1128us; 1705us; 1129us; 1705us; 1130us; 1705us; 1152us; 1705us; 1155us; 1707us; 1157us; 1707us; 1162us; 1707us; 1169us; 1707us; 1174us; 1705us; 1175us; 1705us; 1179us; 1705us; 1181us; 1705us; 1185us; 1705us; 1187us; 1705us; 1191us; 1705us; 1194us; 1705us; 1196us; 1705us; 1198us; 1705us; 1199us; 1705us; 1201us; 1705us; 1202us; 1705us; 1204us; 1705us; 1205us; 1705us; 1207us; 1705us; 1208us; 1705us; 1210us; 1705us; 1211us; 1705us; 1213us; 1705us; 1214us; 1705us; 1226us; 1705us; 1228us; 1705us; 1230us; 1705us; 1231us; 1705us; 1234us; 1705us; 1241us; 1705us; 1242us; 1705us; 1245us; 1705us; 1246us; 1705us; 1247us; 1705us; 1250us; 1705us; 1252us; 1705us; 1253us; 1705us; 1259us; 1705us; 1268us; 1705us; 1275us; 1705us; 1285us; 1705us; 1287us; 1705us; 1288us; 1705us; 1299us; 1705us; 1306us; 1705us; 1307us; 1705us; 1313us; 1705us; 1319us; 1705us; 1320us; 1705us; 1321us; 1705us; 1337us; 1705us; 1347us; 1705us; 1360us; 1705us; 1361us; 1705us; 1363us; 1705us; 1365us; 1705us; 1369us; 1705us; 1370us; 1705us; 1374us; 1705us; 1393us; 1705us; 1398us; 1705us; 1423us; 1705us; 1455us; 1707us; 1457us; 1705us; 1460us; 1707us; 1462us; 1705us; 1473us; 1707us; 1475us; 1707us; 1595us; 1705us; 1708us; 1707us; 7us; 65535us; 628us; 1662us; 850us; 1662us; 881us; 1662us; 1268us; 1662us; 1320us; 1662us; 1321us; 1662us; 1661us; 1662us; 2us; 65535us; 1668us; 1703us; 1701us; 1702us; 7us; 65535us; 628us; 1667us; 850us; 1667us; 881us; 1667us; 1268us; 1667us; 1320us; 1667us; 1321us; 1667us; 1661us; 1667us; 140us; 65535us; 6us; 1711us; 31us; 1711us; 98us; 1711us; 104us; 1711us; 106us; 1711us; 172us; 1711us; 193us; 1711us; 195us; 1711us; 200us; 1711us; 224us; 1711us; 238us; 1711us; 260us; 1711us; 401us; 1711us; 406us; 1711us; 424us; 1711us; 441us; 1711us; 457us; 1711us; 615us; 1711us; 681us; 1711us; 687us; 1711us; 736us; 1711us; 740us; 1711us; 750us; 1711us; 924us; 1711us; 929us; 1711us; 943us; 1711us; 945us; 1711us; 948us; 1711us; 951us; 1711us; 967us; 1711us; 970us; 1711us; 973us; 1711us; 979us; 1711us; 983us; 1711us; 987us; 1711us; 989us; 1711us; 994us; 1711us; 996us; 1711us; 998us; 1711us; 1000us; 1711us; 1002us; 1711us; 1004us; 1711us; 1015us; 1711us; 1023us; 1711us; 1030us; 1711us; 1036us; 1711us; 1038us; 1711us; 1041us; 1711us; 1044us; 1711us; 1047us; 1711us; 1050us; 1711us; 1053us; 1711us; 1056us; 1711us; 1058us; 1711us; 1063us; 1711us; 1106us; 1711us; 1108us; 1711us; 1111us; 1711us; 1112us; 1711us; 1113us; 1711us; 1114us; 1711us; 1115us; 1711us; 1116us; 1711us; 1117us; 1711us; 1118us; 1711us; 1119us; 1711us; 1120us; 1711us; 1121us; 1711us; 1122us; 1711us; 1123us; 1711us; 1124us; 1711us; 1125us; 1711us; 1126us; 1711us; 1127us; 1711us; 1128us; 1711us; 1129us; 1711us; 1130us; 1711us; 1152us; 1711us; 1174us; 1711us; 1175us; 1711us; 1179us; 1711us; 1181us; 1711us; 1185us; 1711us; 1187us; 1711us; 1191us; 1711us; 1194us; 1711us; 1196us; 1711us; 1198us; 1711us; 1199us; 1711us; 1201us; 1711us; 1202us; 1711us; 1204us; 1711us; 1205us; 1711us; 1207us; 1711us; 1208us; 1711us; 1210us; 1711us; 1211us; 1711us; 1213us; 1711us; 1214us; 1711us; 1226us; 1711us; 1228us; 1711us; 1230us; 1711us; 1231us; 1711us; 1234us; 1711us; 1241us; 1711us; 1242us; 1711us; 1245us; 1711us; 1246us; 1711us; 1247us; 1266us; 1250us; 1266us; 1252us; 1711us; 1253us; 1711us; 1259us; 1711us; 1268us; 1711us; 1275us; 1711us; 1285us; 1711us; 1287us; 1711us; 1288us; 1711us; 1299us; 1711us; 1306us; 1711us; 1307us; 1711us; 1313us; 1711us; 1319us; 1711us; 1320us; 1711us; 1321us; 1711us; 1337us; 1711us; 1347us; 1711us; 1360us; 1711us; 1361us; 1711us; 1363us; 1711us; 1365us; 1711us; 1369us; 1711us; 1370us; 1711us; 1374us; 1711us; 1393us; 1711us; 1398us; 1711us; 1423us; 1711us; 1457us; 1711us; 1462us; 1711us; 1595us; 1711us; 44us; 65535us; 398us; 465us; 403us; 465us; 438us; 465us; 463us; 464us; 466us; 467us; 733us; 465us; 823us; 465us; 824us; 465us; 828us; 465us; 829us; 465us; 830us; 465us; 831us; 465us; 838us; 465us; 841us; 465us; 843us; 465us; 845us; 465us; 850us; 465us; 854us; 465us; 856us; 465us; 858us; 465us; 866us; 465us; 869us; 465us; 881us; 465us; 902us; 465us; 907us; 465us; 908us; 465us; 910us; 465us; 911us; 465us; 912us; 465us; 913us; 465us; 920us; 465us; 922us; 465us; 1013us; 465us; 1040us; 465us; 1046us; 465us; 1155us; 465us; 1157us; 465us; 1162us; 465us; 1169us; 465us; 1455us; 465us; 1460us; 465us; 1473us; 465us; 1475us; 465us; 1708us; 1709us; 138us; 65535us; 6us; 1258us; 31us; 1258us; 98us; 99us; 104us; 1258us; 106us; 1258us; 172us; 173us; 193us; 199us; 195us; 199us; 200us; 201us; 224us; 1258us; 238us; 1258us; 260us; 1258us; 401us; 1258us; 406us; 1258us; 424us; 425us; 441us; 1258us; 457us; 1258us; 615us; 627us; 681us; 1258us; 687us; 1258us; 736us; 1258us; 740us; 1258us; 750us; 1258us; 924us; 1258us; 929us; 1258us; 943us; 1258us; 945us; 1258us; 948us; 1258us; 951us; 1258us; 967us; 1258us; 970us; 1258us; 973us; 1258us; 979us; 1258us; 983us; 1258us; 987us; 1258us; 989us; 1258us; 994us; 1258us; 996us; 1258us; 998us; 1258us; 1000us; 1258us; 1002us; 1258us; 1004us; 1258us; 1015us; 1258us; 1023us; 1258us; 1030us; 1258us; 1036us; 1258us; 1038us; 1258us; 1041us; 1258us; 1044us; 1258us; 1047us; 1258us; 1050us; 1258us; 1053us; 1258us; 1056us; 1258us; 1058us; 1258us; 1063us; 1258us; 1106us; 1258us; 1108us; 1258us; 1111us; 1258us; 1112us; 1258us; 1113us; 1258us; 1114us; 1258us; 1115us; 1258us; 1116us; 1258us; 1117us; 1258us; 1118us; 1258us; 1119us; 1258us; 1120us; 1258us; 1121us; 1258us; 1122us; 1258us; 1123us; 1258us; 1124us; 1258us; 1125us; 1258us; 1126us; 1258us; 1127us; 1258us; 1128us; 1258us; 1129us; 1258us; 1130us; 1258us; 1152us; 1258us; 1174us; 1258us; 1175us; 1258us; 1179us; 1258us; 1181us; 1258us; 1185us; 1258us; 1187us; 1258us; 1191us; 1258us; 1194us; 1258us; 1196us; 1258us; 1198us; 1258us; 1199us; 1258us; 1201us; 1258us; 1202us; 1258us; 1204us; 1258us; 1205us; 1258us; 1207us; 1258us; 1208us; 1258us; 1210us; 1258us; 1211us; 1258us; 1213us; 1258us; 1214us; 1258us; 1226us; 1258us; 1228us; 1258us; 1230us; 1258us; 1231us; 1258us; 1234us; 1258us; 1241us; 1258us; 1242us; 1258us; 1245us; 1258us; 1246us; 1258us; 1252us; 1254us; 1253us; 1254us; 1259us; 1258us; 1268us; 1258us; 1275us; 1258us; 1285us; 1258us; 1287us; 1258us; 1288us; 1258us; 1299us; 1258us; 1306us; 1258us; 1307us; 1258us; 1313us; 1258us; 1319us; 1258us; 1320us; 1258us; 1321us; 1258us; 1337us; 1258us; 1347us; 1258us; 1360us; 1258us; 1361us; 1258us; 1363us; 1258us; 1365us; 1258us; 1369us; 1258us; 1370us; 1258us; 1374us; 1258us; 1393us; 1258us; 1398us; 1258us; 1423us; 1258us; 1457us; 1258us; 1462us; 1258us; 1595us; 1258us; 14us; 65535us; 47us; 1715us; 72us; 1715us; 75us; 1715us; 76us; 1717us; 79us; 1715us; 214us; 1715us; 233us; 1715us; 239us; 1715us; 244us; 1715us; 248us; 1715us; 249us; 1715us; 250us; 1715us; 1715us; 1715us; 1717us; 1717us; 12us; 65535us; 47us; 80us; 72us; 80us; 75us; 80us; 79us; 80us; 214us; 251us; 233us; 251us; 239us; 240us; 244us; 246us; 248us; 251us; 249us; 251us; 250us; 251us; 1715us; 1716us; 2us; 65535us; 76us; 77us; 1717us; 1718us; 11us; 65535us; 163us; 1732us; 297us; 307us; 385us; 1732us; 498us; 1732us; 651us; 652us; 832us; 834us; 897us; 922us; 915us; 917us; 940us; 943us; 941us; 943us; 942us; 943us; 4us; 65535us; 208us; 209us; 291us; 292us; 474us; 475us; 477us; 478us; 2us; 65535us; 1440us; 1441us; 1450us; 1451us; 9us; 65535us; 418us; 419us; 429us; 430us; 432us; 433us; 434us; 435us; 436us; 437us; 442us; 443us; 504us; 505us; 506us; 507us; 510us; 511us; 2us; 65535us; 58us; 59us; 220us; 221us; 20us; 65535us; 69us; 70us; 129us; 130us; 230us; 231us; 299us; 300us; 302us; 303us; 352us; 353us; 609us; 639us; 616us; 617us; 619us; 620us; 622us; 623us; 625us; 626us; 634us; 635us; 637us; 638us; 1014us; 1061us; 1043us; 1044us; 1049us; 1050us; 1055us; 1056us; 1427us; 1431us; 1428us; 1429us; 1451us; 1452us; 8us; 65535us; 163us; 164us; 297us; 298us; 385us; 386us; 498us; 499us; 651us; 654us; 832us; 833us; 897us; 921us; 915us; 916us; 2us; 65535us; 677us; 678us; 683us; 684us; 0us; 65535us; 11us; 65535us; 95us; 96us; 170us; 171us; 388us; 397us; 390us; 397us; 395us; 397us; 417us; 403us; 423us; 424us; 502us; 732us; 503us; 403us; 509us; 403us; 729us; 732us; 7us; 65535us; 96us; 97us; 183us; 657us; 186us; 657us; 446us; 447us; 452us; 453us; 655us; 657us; 732us; 733us; 4us; 65535us; 956us; 1030us; 1003us; 1004us; 1014us; 1015us; 1022us; 1023us; 9us; 65535us; 953us; 1012us; 954us; 1019us; 955us; 1027us; 957us; 1034us; 1005us; 1006us; 1008us; 1009us; 1016us; 1017us; 1024us; 1025us; 1031us; 1032us; 2us; 65535us; 267us; 285us; 275us; 285us; 2us; 65535us; 87us; 116us; 109us; 112us; 2us; 65535us; 63us; 87us; 86us; 87us; 251us; 65535us; 6us; 775us; 8us; 775us; 31us; 775us; 40us; 42us; 101us; 775us; 104us; 775us; 106us; 775us; 140us; 775us; 169us; 775us; 175us; 775us; 179us; 775us; 181us; 775us; 191us; 775us; 224us; 775us; 238us; 775us; 260us; 775us; 310us; 775us; 314us; 775us; 319us; 775us; 364us; 775us; 398us; 775us; 401us; 775us; 403us; 775us; 406us; 775us; 414us; 775us; 420us; 775us; 427us; 775us; 438us; 775us; 441us; 775us; 450us; 775us; 457us; 775us; 460us; 775us; 479us; 775us; 482us; 775us; 515us; 775us; 523us; 775us; 532us; 533us; 578us; 775us; 581us; 775us; 618us; 775us; 621us; 775us; 624us; 775us; 636us; 775us; 640us; 775us; 643us; 775us; 646us; 775us; 660us; 775us; 671us; 775us; 681us; 775us; 687us; 775us; 733us; 775us; 736us; 775us; 740us; 775us; 750us; 775us; 756us; 775us; 800us; 775us; 823us; 775us; 824us; 775us; 828us; 775us; 829us; 775us; 830us; 775us; 831us; 775us; 838us; 775us; 841us; 775us; 843us; 775us; 845us; 775us; 847us; 775us; 850us; 775us; 854us; 775us; 856us; 775us; 858us; 775us; 866us; 775us; 869us; 775us; 881us; 775us; 902us; 775us; 905us; 775us; 907us; 775us; 908us; 775us; 910us; 775us; 911us; 775us; 912us; 775us; 913us; 775us; 920us; 775us; 922us; 775us; 924us; 775us; 929us; 775us; 936us; 775us; 943us; 775us; 945us; 775us; 948us; 775us; 951us; 775us; 967us; 775us; 970us; 775us; 973us; 775us; 979us; 775us; 983us; 775us; 987us; 775us; 989us; 775us; 994us; 775us; 996us; 775us; 998us; 775us; 1000us; 775us; 1002us; 775us; 1004us; 775us; 1013us; 775us; 1015us; 775us; 1023us; 775us; 1030us; 775us; 1036us; 775us; 1038us; 775us; 1040us; 775us; 1041us; 775us; 1044us; 775us; 1046us; 775us; 1047us; 775us; 1050us; 775us; 1053us; 775us; 1056us; 775us; 1058us; 775us; 1063us; 775us; 1100us; 775us; 1102us; 775us; 1104us; 775us; 1106us; 775us; 1108us; 775us; 1111us; 775us; 1112us; 775us; 1113us; 775us; 1114us; 775us; 1115us; 775us; 1116us; 775us; 1117us; 775us; 1118us; 775us; 1119us; 775us; 1120us; 775us; 1121us; 775us; 1122us; 775us; 1123us; 775us; 1124us; 775us; 1125us; 775us; 1126us; 775us; 1127us; 775us; 1128us; 775us; 1129us; 775us; 1130us; 775us; 1152us; 775us; 1155us; 775us; 1157us; 775us; 1162us; 775us; 1169us; 775us; 1174us; 775us; 1175us; 775us; 1179us; 775us; 1181us; 775us; 1185us; 775us; 1187us; 775us; 1191us; 775us; 1194us; 775us; 1196us; 775us; 1198us; 775us; 1199us; 775us; 1201us; 775us; 1202us; 775us; 1204us; 775us; 1205us; 775us; 1207us; 775us; 1208us; 775us; 1210us; 775us; 1211us; 775us; 1213us; 775us; 1214us; 775us; 1216us; 775us; 1217us; 775us; 1220us; 775us; 1221us; 775us; 1226us; 775us; 1228us; 775us; 1230us; 775us; 1231us; 775us; 1234us; 775us; 1241us; 775us; 1242us; 775us; 1245us; 775us; 1246us; 775us; 1259us; 775us; 1268us; 775us; 1275us; 775us; 1285us; 775us; 1287us; 775us; 1288us; 775us; 1299us; 775us; 1306us; 775us; 1307us; 775us; 1313us; 775us; 1319us; 775us; 1320us; 775us; 1321us; 775us; 1337us; 775us; 1347us; 775us; 1360us; 775us; 1361us; 775us; 1363us; 775us; 1365us; 775us; 1369us; 775us; 1370us; 775us; 1371us; 1372us; 1374us; 775us; 1380us; 775us; 1383us; 775us; 1385us; 775us; 1387us; 775us; 1389us; 775us; 1393us; 775us; 1398us; 775us; 1423us; 775us; 1448us; 775us; 1455us; 775us; 1457us; 775us; 1460us; 775us; 1462us; 775us; 1473us; 775us; 1475us; 775us; 1482us; 775us; 1485us; 775us; 1488us; 775us; 1491us; 775us; 1493us; 775us; 1495us; 775us; 1499us; 775us; 1502us; 775us; 1506us; 775us; 1509us; 775us; 1514us; 775us; 1516us; 775us; 1518us; 775us; 1521us; 775us; 1523us; 775us; 1542us; 775us; 1543us; 775us; 1551us; 775us; 1552us; 775us; 1557us; 775us; 1558us; 775us; 1570us; 775us; 1574us; 775us; 1584us; 775us; 1588us; 775us; 1595us; 775us; 1609us; 775us; 1611us; 775us; 1622us; 775us; 11us; 65535us; 309us; 310us; 313us; 314us; 318us; 319us; 345us; 346us; 480us; 482us; 699us; 700us; 711us; 715us; 714us; 715us; 1218us; 1220us; 1219us; 1221us; 1388us; 1389us; 5us; 65535us; 99us; 562us; 173us; 562us; 425us; 562us; 541us; 557us; 840us; 562us; 13us; 65535us; 31us; 262us; 62us; 119us; 85us; 119us; 185us; 188us; 224us; 262us; 238us; 262us; 256us; 262us; 296us; 323us; 307us; 323us; 329us; 444us; 1372us; 1379us; 1751us; 1753us; 1752us; 1753us; 10us; 65535us; 31us; 49us; 62us; 49us; 85us; 49us; 224us; 49us; 238us; 49us; 256us; 49us; 296us; 321us; 307us; 321us; 1756us; 1758us; 1757us; 1758us; 7us; 65535us; 527us; 528us; 530us; 531us; 864us; 865us; 964us; 1351us; 1347us; 1353us; 1348us; 1349us; 1761us; 1762us; 39us; 65535us; 524us; 525us; 547us; 548us; 589us; 590us; 592us; 593us; 596us; 597us; 629us; 630us; 632us; 633us; 702us; 703us; 786us; 787us; 805us; 808us; 806us; 807us; 810us; 811us; 851us; 852us; 882us; 883us; 885us; 886us; 962us; 1326us; 963us; 1327us; 1153us; 1154us; 1269us; 1270us; 1273us; 1274us; 1319us; 1322us; 1320us; 1322us; 1321us; 1322us; 1323us; 1324us; 1336us; 1337us; 1343us; 1344us; 1381us; 1382us; 1385us; 1386us; 1544us; 1546us; 1545us; 1547us; 1589us; 1591us; 1590us; 1591us; 1598us; 1599us; 1634us; 1635us; 1662us; 1663us; 1664us; 1665us; 1668us; 1669us; 1671us; 1672us; 1765us; 1766us; 26us; 65535us; 68us; 69us; 72us; 73us; 107us; 108us; 110us; 111us; 114us; 115us; 132us; 133us; 150us; 151us; 158us; 159us; 229us; 230us; 233us; 234us; 249us; 282us; 272us; 273us; 276us; 277us; 279us; 280us; 317us; 318us; 355us; 356us; 374us; 376us; 378us; 380us; 494us; 495us; 741us; 742us; 925us; 926us; 930us; 931us; 949us; 950us; 1182us; 1183us; 1188us; 1189us; 1769us; 1770us; 1us; 65535us; 1323us; 1325us; 16us; 65535us; 296us; 305us; 298us; 304us; 479us; 485us; 898us; 1368us; 1013us; 1033us; 1014us; 1021us; 1015us; 1020us; 1016us; 1018us; 1194us; 1195us; 1196us; 1197us; 1365us; 1367us; 1422us; 1426us; 1423us; 1425us; 1604us; 1605us; 1611us; 1615us; 1658us; 1660us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 5us; 7us; 15us; 20us; 26us; 31us; 36us; 41us; 46us; 70us; 72us; 74us; 76us; 83us; 88us; 90us; 93us; 96us; 99us; 103us; 110us; 120us; 130us; 140us; 143us; 145us; 148us; 151us; 155us; 157us; 160us; 163us; 166us; 170us; 179us; 188us; 200us; 204us; 207us; 210us; 213us; 219us; 221us; 223us; 226us; 229us; 232us; 236us; 242us; 252us; 263us; 274us; 290us; 292us; 294us; 297us; 299us; 380us; 497us; 614us; 616us; 619us; 622us; 627us; 634us; 637us; 641us; 644us; 648us; 652us; 656us; 660us; 671us; 682us; 684us; 687us; 691us; 695us; 698us; 709us; 713us; 716us; 718us; 760us; 771us; 835us; 848us; 850us; 855us; 858us; 861us; 864us; 867us; 871us; 874us; 879us; 884us; 887us; 893us; 900us; 902us; 908us; 918us; 920us; 922us; 926us; 932us; 934us; 936us; 941us; 945us; 947us; 951us; 955us; 960us; 962us; 966us; 972us; 976us; 980us; 982us; 986us; 990us; 995us; 1000us; 1004us; 1007us; 1010us; 1014us; 1019us; 1026us; 1033us; 1035us; 1037us; 1053us; 1164us; 1172us; 1283us; 1393us; 1397us; 1402us; 1513us; 1515us; 1517us; 1521us; 1524us; 1526us; 1531us; 1534us; 1540us; 1543us; 1545us; 1548us; 1550us; 1552us; 1554us; 1557us; 1807us; 1809us; 1815us; 1820us; 2000us; 2004us; 2008us; 2011us; 2013us; 2025us; 2037us; 2049us; 2052us; 2055us; 2088us; 2092us; 2101us; 2143us; 2146us; 2168us; 2190us; 2212us; 2214us; 2217us; 2220us; 2224us; 2248us; 2255us; 2261us; 2311us; 2313us; 2368us; 2455us; 2562us; 2564us; 2567us; 2572us; 2579us; 2586us; 2588us; 2590us; 2593us; 2596us; 2598us; 2705us; 2826us; 2947us; 2951us; 3081us; 3084us; 3087us; 3090us; 3227us; 3364us; 3542us; 3679us; 3816us; 3820us; 3824us; 3826us; 3963us; 3965us; 3968us; 3972us; 3977us; 3979us; 3981us; 3983us; 3987us; 3989us; 3994us; 3996us; 3998us; 4000us; 4007us; 4014us; 4018us; 4024us; 4028us; 4030us; 4032us; 4034us; 4037us; 4039us; 4044us; 4050us; 4052us; 4159us; 4266us; 4270us; 4276us; 4280us; 4290us; 4300us; 4303us; 4315us; 4349us; 4351us; 4385us; 4391us; 4392us; 4480us; 4568us; 4636us; 4654us; 4659us; 4662us; 4730us; 4735us; 4740us; 4811us; 4816us; 4823us; 4832us; 4835us; 4839us; 4841us; 4848us; 4855us; 4862us; 4868us; 4973us; 5082us; 5405us; 5521us; 5706us; 5714us; 5717us; 5725us; 5866us; 5911us; 6050us; 6065us; 6078us; 6081us; 6093us; 6098us; 6101us; 6111us; 6114us; 6135us; 6144us; 6147us; 6148us; 6160us; 6168us; 6173us; 6183us; 6186us; 6189us; 6192us; 6444us; 6456us; 6462us; 6476us; 6487us; 6495us; 6535us; 6562us; 6564us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 2us; 12us; 15us; 1us; 12us; 2us; 13us; 16us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 47us; 19us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 27us; 1us; 27us; 1us; 28us; 2us; 29us; 30us; 1us; 29us; 1us; 30us; 1us; 30us; 3us; 31us; 46us; 49us; 1us; 31us; 1us; 32us; 1us; 32us; 3us; 32us; 920us; 921us; 1us; 33us; 3us; 33us; 920us; 921us; 2us; 34us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 38us; 1us; 38us; 1us; 38us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 3us; 39us; 53us; 54us; 1us; 39us; 1us; 40us; 1us; 41us; 3us; 42us; 43us; 44us; 2us; 42us; 43us; 1us; 42us; 1us; 42us; 1us; 43us; 3us; 44us; 46us; 49us; 1us; 44us; 1us; 45us; 2us; 46us; 49us; 2us; 48us; 50us; 2us; 48us; 50us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 51us; 1us; 52us; 5us; 53us; 54us; 55us; 56us; 58us; 5us; 53us; 54us; 55us; 56us; 58us; 2us; 53us; 54us; 2us; 53us; 54us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 3us; 57us; 920us; 921us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 2us; 60us; 61us; 47us; 60us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 61us; 47us; 61us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 61us; 3us; 62us; 63us; 144us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 2us; 66us; 67us; 1us; 66us; 1us; 66us; 2us; 68us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 3us; 70us; 79us; 80us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 3us; 76us; 77us; 78us; 2us; 76us; 77us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 264us; 265us; 266us; 267us; 268us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 264us; 265us; 266us; 267us; 268us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 4us; 90us; 844us; 845us; 846us; 1us; 91us; 4us; 91us; 844us; 845us; 846us; 1us; 92us; 1us; 92us; 3us; 93us; 94us; 174us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 2us; 98us; 99us; 1us; 98us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 2us; 108us; 109us; 1us; 108us; 1us; 109us; 1us; 109us; 2us; 110us; 133us; 1us; 110us; 2us; 111us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 113us; 1us; 115us; 1us; 115us; 1us; 115us; 11us; 116us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 10us; 116us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 2us; 116us; 141us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 120us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 119us; 2us; 120us; 133us; 1us; 120us; 1us; 121us; 1us; 122us; 10us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 9us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 49us; 124us; 125us; 126us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 2us; 124us; 125us; 1us; 124us; 1us; 127us; 1us; 128us; 4us; 129us; 130us; 131us; 132us; 1us; 129us; 2us; 130us; 132us; 1us; 130us; 1us; 133us; 2us; 133us; 150us; 2us; 133us; 155us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 1us; 136us; 3us; 136us; 511us; 512us; 1us; 137us; 5us; 137us; 513us; 514us; 515us; 516us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 2us; 142us; 157us; 1us; 142us; 1us; 143us; 3us; 144us; 920us; 921us; 1us; 144us; 3us; 145us; 920us; 921us; 5us; 146us; 147us; 148us; 149us; 150us; 2us; 146us; 147us; 1us; 146us; 1us; 147us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 3us; 152us; 920us; 921us; 3us; 153us; 154us; 155us; 2us; 153us; 154us; 1us; 153us; 1us; 154us; 1us; 155us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 157us; 2us; 159us; 160us; 1us; 160us; 4us; 161us; 162us; 163us; 164us; 3us; 161us; 163us; 166us; 2us; 161us; 163us; 1us; 161us; 1us; 161us; 2us; 162us; 509us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 2us; 166us; 987us; 1us; 166us; 3us; 167us; 920us; 921us; 1us; 167us; 1us; 167us; 2us; 168us; 169us; 3us; 168us; 920us; 921us; 1us; 168us; 1us; 168us; 1us; 169us; 3us; 169us; 920us; 921us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 171us; 2us; 172us; 919us; 1us; 172us; 1us; 173us; 1us; 173us; 4us; 174us; 215us; 221us; 224us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 179us; 1us; 179us; 1us; 179us; 4us; 181us; 182us; 183us; 184us; 1us; 182us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 4us; 185us; 186us; 195us; 196us; 2us; 185us; 186us; 2us; 185us; 186us; 2us; 185us; 186us; 2us; 185us; 186us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 190us; 1us; 190us; 1us; 191us; 3us; 192us; 193us; 194us; 2us; 192us; 193us; 1us; 192us; 1us; 193us; 2us; 194us; 201us; 1us; 194us; 2us; 195us; 196us; 2us; 195us; 196us; 1us; 195us; 1us; 196us; 2us; 197us; 198us; 2us; 197us; 198us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 201us; 1us; 203us; 1us; 203us; 1us; 203us; 1us; 204us; 1us; 204us; 2us; 205us; 206us; 2us; 205us; 206us; 1us; 205us; 1us; 206us; 2us; 207us; 208us; 1us; 208us; 1us; 208us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 2us; 210us; 211us; 2us; 210us; 211us; 2us; 210us; 211us; 1us; 210us; 1us; 210us; 1us; 211us; 2us; 212us; 213us; 1us; 213us; 11us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 16us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 264us; 265us; 266us; 267us; 268us; 11us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 16us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 264us; 265us; 266us; 267us; 268us; 1us; 214us; 1us; 215us; 2us; 216us; 222us; 1us; 216us; 1us; 216us; 1us; 217us; 4us; 217us; 844us; 845us; 846us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 228us; 1us; 228us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 233us; 1us; 234us; 1us; 235us; 1us; 236us; 1us; 237us; 1us; 239us; 1us; 239us; 1us; 239us; 1us; 241us; 1us; 241us; 1us; 241us; 3us; 243us; 244us; 245us; 2us; 243us; 244us; 1us; 243us; 1us; 244us; 1us; 244us; 1us; 244us; 1us; 245us; 1us; 246us; 1us; 248us; 1us; 248us; 1us; 249us; 2us; 251us; 252us; 1us; 251us; 1us; 252us; 2us; 253us; 254us; 2us; 253us; 254us; 1us; 253us; 1us; 254us; 1us; 255us; 2us; 256us; 257us; 2us; 256us; 257us; 1us; 256us; 4us; 258us; 259us; 260us; 261us; 5us; 258us; 259us; 260us; 261us; 376us; 3us; 258us; 259us; 260us; 1us; 258us; 1us; 258us; 1us; 259us; 1us; 259us; 1us; 260us; 1us; 261us; 1us; 261us; 1us; 261us; 1us; 262us; 1us; 263us; 5us; 264us; 265us; 266us; 267us; 268us; 5us; 264us; 265us; 266us; 267us; 268us; 4us; 264us; 840us; 920us; 921us; 1us; 264us; 1us; 264us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 267us; 5us; 268us; 847us; 873us; 874us; 880us; 1us; 268us; 1us; 268us; 3us; 269us; 270us; 271us; 2us; 269us; 270us; 1us; 269us; 1us; 270us; 1us; 271us; 1us; 271us; 2us; 272us; 870us; 2us; 272us; 407us; 1us; 272us; 1us; 273us; 1us; 274us; 1us; 275us; 1us; 276us; 1us; 277us; 3us; 278us; 279us; 280us; 4us; 278us; 280us; 920us; 921us; 1us; 279us; 3us; 279us; 920us; 921us; 1us; 280us; 1us; 281us; 1us; 282us; 2us; 282us; 283us; 1us; 282us; 2us; 283us; 286us; 3us; 283us; 287us; 288us; 1us; 283us; 2us; 283us; 287us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 285us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 287us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 291us; 2us; 293us; 444us; 1us; 296us; 2us; 296us; 297us; 2us; 297us; 811us; 2us; 297us; 813us; 1us; 297us; 1us; 297us; 1us; 298us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 8us; 300us; 301us; 302us; 303us; 304us; 306us; 307us; 308us; 1us; 300us; 1us; 300us; 7us; 301us; 302us; 303us; 304us; 306us; 307us; 308us; 1us; 301us; 3us; 302us; 307us; 308us; 1us; 302us; 1us; 303us; 1us; 304us; 1us; 304us; 1us; 304us; 1us; 305us; 2us; 305us; 309us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 306us; 1us; 306us; 1us; 307us; 1us; 309us; 1us; 309us; 1us; 310us; 1us; 311us; 1us; 311us; 1us; 312us; 1us; 312us; 1us; 312us; 2us; 313us; 326us; 1us; 314us; 2us; 315us; 316us; 1us; 315us; 1us; 315us; 4us; 317us; 318us; 319us; 320us; 4us; 317us; 318us; 319us; 320us; 4us; 317us; 318us; 319us; 320us; 1us; 317us; 1us; 318us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 319us; 1us; 320us; 1us; 320us; 1us; 320us; 1us; 321us; 6us; 322us; 323us; 922us; 923us; 925us; 926us; 1us; 322us; 1us; 322us; 1us; 323us; 1us; 323us; 1us; 323us; 5us; 324us; 325us; 327us; 328us; 919us; 1us; 324us; 2us; 325us; 328us; 2us; 325us; 328us; 2us; 325us; 328us; 1us; 326us; 1us; 327us; 1us; 327us; 2us; 329us; 330us; 1us; 329us; 1us; 329us; 2us; 331us; 919us; 1us; 331us; 4us; 331us; 844us; 845us; 846us; 4us; 332us; 844us; 845us; 846us; 1us; 333us; 1us; 334us; 2us; 335us; 336us; 2us; 335us; 987us; 1us; 335us; 1us; 336us; 1us; 337us; 1us; 337us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 339us; 1us; 339us; 1us; 340us; 1us; 341us; 1us; 341us; 1us; 341us; 1us; 341us; 1us; 341us; 2us; 342us; 343us; 1us; 343us; 1us; 343us; 1us; 345us; 3us; 345us; 920us; 921us; 1us; 346us; 3us; 346us; 920us; 921us; 1us; 347us; 1us; 347us; 1us; 347us; 1us; 348us; 1us; 349us; 1us; 349us; 1us; 350us; 1us; 350us; 1us; 350us; 1us; 350us; 1us; 351us; 1us; 351us; 1us; 351us; 1us; 352us; 1us; 353us; 1us; 354us; 1us; 355us; 1us; 356us; 1us; 357us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 2us; 359us; 362us; 2us; 360us; 363us; 1us; 362us; 1us; 362us; 1us; 363us; 1us; 363us; 2us; 364us; 365us; 5us; 364us; 365us; 367us; 368us; 369us; 1us; 365us; 3us; 366us; 920us; 921us; 4us; 367us; 368us; 369us; 371us; 1us; 367us; 1us; 367us; 1us; 367us; 1us; 368us; 1us; 369us; 1us; 370us; 2us; 370us; 372us; 1us; 370us; 2us; 371us; 372us; 1us; 373us; 1us; 373us; 1us; 374us; 1us; 374us; 1us; 374us; 1us; 376us; 1us; 376us; 1us; 377us; 3us; 378us; 379us; 380us; 3us; 378us; 379us; 380us; 3us; 378us; 379us; 380us; 3us; 378us; 379us; 380us; 2us; 378us; 379us; 1us; 378us; 1us; 379us; 1us; 380us; 2us; 381us; 382us; 2us; 381us; 382us; 1us; 381us; 1us; 382us; 1us; 383us; 1us; 384us; 2us; 384us; 385us; 1us; 385us; 1us; 387us; 2us; 387us; 388us; 1us; 387us; 1us; 387us; 1us; 388us; 1us; 388us; 1us; 389us; 2us; 390us; 391us; 1us; 390us; 1us; 390us; 1us; 391us; 1us; 392us; 1us; 393us; 1us; 394us; 1us; 395us; 1us; 396us; 1us; 397us; 1us; 398us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 1us; 404us; 2us; 404us; 457us; 1us; 405us; 1us; 406us; 1us; 407us; 1us; 408us; 2us; 409us; 411us; 1us; 409us; 1us; 409us; 2us; 410us; 412us; 2us; 410us; 412us; 1us; 410us; 1us; 410us; 1us; 413us; 1us; 414us; 1us; 414us; 1us; 414us; 1us; 415us; 1us; 416us; 1us; 416us; 2us; 417us; 418us; 1us; 418us; 1us; 418us; 6us; 419us; 431us; 432us; 433us; 438us; 440us; 1us; 420us; 1us; 421us; 1us; 421us; 2us; 422us; 423us; 3us; 422us; 424us; 425us; 1us; 422us; 1us; 422us; 1us; 423us; 1us; 425us; 1us; 425us; 5us; 426us; 427us; 428us; 429us; 430us; 2us; 426us; 428us; 1us; 426us; 1us; 427us; 1us; 428us; 2us; 429us; 509us; 1us; 429us; 1us; 430us; 6us; 431us; 432us; 432us; 433us; 438us; 440us; 6us; 431us; 432us; 433us; 433us; 438us; 440us; 6us; 431us; 432us; 433us; 437us; 438us; 440us; 6us; 431us; 432us; 433us; 438us; 438us; 440us; 6us; 431us; 432us; 433us; 438us; 439us; 440us; 6us; 431us; 432us; 433us; 438us; 440us; 440us; 6us; 431us; 432us; 433us; 438us; 440us; 556us; 7us; 431us; 432us; 433us; 438us; 440us; 557us; 558us; 1us; 431us; 1us; 431us; 1us; 432us; 1us; 433us; 2us; 434us; 437us; 2us; 435us; 439us; 1us; 436us; 1us; 437us; 1us; 438us; 1us; 439us; 1us; 440us; 2us; 441us; 442us; 1us; 441us; 2us; 442us; 987us; 1us; 442us; 1us; 443us; 4us; 443us; 958us; 960us; 961us; 1us; 443us; 7us; 443us; 474us; 475us; 478us; 480us; 483us; 485us; 5us; 444us; 445us; 446us; 447us; 463us; 3us; 445us; 446us; 447us; 1us; 445us; 1us; 446us; 1us; 446us; 1us; 447us; 1us; 447us; 1us; 448us; 3us; 448us; 882us; 883us; 1us; 449us; 9us; 450us; 468us; 469us; 470us; 471us; 922us; 923us; 925us; 926us; 1us; 450us; 1us; 450us; 1us; 451us; 4us; 452us; 453us; 454us; 455us; 1us; 452us; 1us; 453us; 1us; 453us; 1us; 454us; 1us; 454us; 1us; 456us; 1us; 457us; 1us; 457us; 1us; 458us; 1us; 458us; 1us; 458us; 1us; 459us; 1us; 459us; 1us; 459us; 1us; 460us; 1us; 460us; 1us; 460us; 1us; 461us; 1us; 462us; 2us; 462us; 943us; 1us; 462us; 1us; 463us; 1us; 464us; 1us; 465us; 1us; 466us; 1us; 467us; 8us; 468us; 469us; 470us; 471us; 922us; 923us; 925us; 926us; 2us; 468us; 469us; 1us; 468us; 1us; 469us; 3us; 470us; 509us; 923us; 2us; 470us; 923us; 1us; 471us; 7us; 472us; 474us; 475us; 478us; 480us; 483us; 485us; 7us; 474us; 475us; 475us; 478us; 480us; 483us; 485us; 7us; 474us; 475us; 478us; 479us; 480us; 483us; 485us; 7us; 474us; 475us; 478us; 480us; 480us; 483us; 485us; 7us; 474us; 475us; 478us; 480us; 482us; 483us; 485us; 7us; 474us; 475us; 478us; 480us; 483us; 483us; 485us; 7us; 474us; 475us; 478us; 480us; 483us; 484us; 485us; 7us; 474us; 475us; 478us; 480us; 483us; 485us; 485us; 7us; 474us; 475us; 478us; 480us; 483us; 485us; 489us; 8us; 474us; 475us; 478us; 480us; 483us; 485us; 491us; 492us; 13us; 474us; 475us; 478us; 480us; 483us; 485us; 552us; 553us; 744us; 745us; 746us; 747us; 748us; 7us; 474us; 475us; 478us; 480us; 483us; 485us; 619us; 1us; 474us; 1us; 474us; 1us; 475us; 2us; 476us; 482us; 2us; 477us; 484us; 1us; 478us; 1us; 478us; 1us; 479us; 1us; 480us; 1us; 481us; 1us; 482us; 1us; 483us; 1us; 484us; 1us; 485us; 1us; 486us; 2us; 487us; 488us; 1us; 487us; 2us; 488us; 987us; 1us; 488us; 3us; 489us; 920us; 921us; 1us; 489us; 1us; 491us; 2us; 492us; 987us; 1us; 492us; 2us; 493us; 494us; 2us; 493us; 494us; 1us; 493us; 1us; 494us; 1us; 495us; 1us; 496us; 1us; 496us; 1us; 496us; 47us; 497us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 2us; 498us; 499us; 1us; 498us; 2us; 500us; 501us; 1us; 500us; 1us; 500us; 1us; 502us; 1us; 502us; 51us; 503us; 504us; 505us; 506us; 507us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 54us; 503us; 504us; 505us; 506us; 507us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 686us; 687us; 690us; 54us; 503us; 504us; 505us; 506us; 507us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 740us; 741us; 742us; 2us; 503us; 504us; 1us; 503us; 1us; 506us; 1us; 506us; 1us; 507us; 1us; 507us; 1us; 507us; 1us; 507us; 5us; 508us; 513us; 514us; 515us; 516us; 1us; 509us; 2us; 509us; 539us; 2us; 509us; 542us; 2us; 509us; 547us; 2us; 509us; 550us; 2us; 509us; 552us; 2us; 509us; 670us; 2us; 509us; 682us; 2us; 509us; 706us; 2us; 509us; 710us; 2us; 509us; 715us; 3us; 509us; 715us; 923us; 2us; 509us; 730us; 1us; 510us; 2us; 511us; 512us; 2us; 511us; 512us; 1us; 511us; 1us; 512us; 4us; 513us; 514us; 515us; 516us; 1us; 513us; 1us; 514us; 2us; 515us; 516us; 1us; 515us; 1us; 516us; 1us; 517us; 1us; 518us; 1us; 519us; 2us; 520us; 521us; 2us; 520us; 521us; 1us; 520us; 1us; 521us; 3us; 522us; 523us; 524us; 3us; 522us; 523us; 524us; 1us; 522us; 1us; 523us; 1us; 524us; 1us; 524us; 3us; 525us; 526us; 527us; 48us; 525us; 526us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 525us; 1us; 526us; 1us; 527us; 1us; 528us; 47us; 528us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 2us; 529us; 530us; 47us; 529us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 531us; 1us; 531us; 2us; 532us; 533us; 1us; 532us; 6us; 534us; 535us; 536us; 537us; 538us; 539us; 50us; 534us; 535us; 536us; 537us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 3us; 534us; 535us; 536us; 2us; 534us; 535us; 1us; 534us; 1us; 535us; 1us; 536us; 1us; 536us; 1us; 537us; 1us; 538us; 1us; 539us; 15us; 540us; 541us; 542us; 543us; 544us; 545us; 546us; 547us; 548us; 549us; 550us; 551us; 552us; 553us; 561us; 6us; 540us; 541us; 542us; 543us; 544us; 561us; 4us; 540us; 541us; 542us; 543us; 2us; 540us; 541us; 1us; 540us; 1us; 541us; 1us; 542us; 1us; 543us; 1us; 544us; 5us; 545us; 546us; 547us; 548us; 549us; 4us; 545us; 546us; 547us; 548us; 2us; 545us; 546us; 1us; 545us; 1us; 546us; 1us; 547us; 1us; 548us; 1us; 549us; 1us; 550us; 1us; 550us; 1us; 550us; 1us; 551us; 1us; 552us; 2us; 553us; 1039us; 1us; 554us; 47us; 554us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 555us; 47us; 555us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 1us; 556us; 1us; 556us; 1us; 556us; 1us; 556us; 1us; 556us; 1us; 556us; 2us; 557us; 558us; 2us; 557us; 558us; 2us; 557us; 558us; 2us; 557us; 558us; 2us; 557us; 558us; 1us; 557us; 1us; 558us; 1us; 559us; 1us; 559us; 1us; 559us; 1us; 559us; 1us; 559us; 1us; 560us; 1us; 560us; 1us; 560us; 1us; 561us; 1us; 561us; 1us; 562us; 1us; 562us; 47us; 563us; 564us; 565us; 566us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 625us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 629us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 633us; 640us; 641us; 48us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 636us; 637us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 638us; 640us; 641us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 641us; 49us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 686us; 687us; 690us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 686us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 688us; 50us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 740us; 741us; 742us; 744us; 48us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 740us; 741us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 741us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 748us; 47us; 563us; 564us; 565us; 566us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 640us; 641us; 748us; 1us; 563us; 1us; 563us; 1us; 564us; 1us; 564us; 1us; 565us; 1us; 565us; 1us; 566us; 2us; 567us; 609us; 1us; 567us; 1us; 567us; 3us; 568us; 638us; 639us; 2us; 569us; 589us; 2us; 570us; 590us; 2us; 571us; 591us; 2us; 572us; 592us; 2us; 573us; 593us; 2us; 574us; 594us; 2us; 575us; 595us; 2us; 576us; 596us; 2us; 577us; 597us; 2us; 578us; 598us; 2us; 579us; 599us; 2us; 580us; 600us; 2us; 581us; 601us; 2us; 582us; 602us; 2us; 583us; 603us; 2us; 584us; 604us; 2us; 585us; 605us; 2us; 586us; 606us; 2us; 587us; 607us; 2us; 588us; 608us; 1us; 589us; 1us; 590us; 1us; 591us; 1us; 592us; 1us; 593us; 1us; 594us; 1us; 595us; 1us; 596us; 1us; 597us; 1us; 598us; 1us; 599us; 1us; 600us; 1us; 601us; 1us; 602us; 1us; 603us; 1us; 604us; 1us; 605us; 1us; 606us; 1us; 607us; 1us; 608us; 1us; 610us; 1us; 611us; 1us; 611us; 1us; 611us; 1us; 612us; 1us; 612us; 2us; 613us; 614us; 2us; 613us; 614us; 1us; 613us; 1us; 614us; 1us; 615us; 2us; 616us; 617us; 1us; 616us; 1us; 617us; 1us; 618us; 1us; 619us; 5us; 620us; 621us; 622us; 623us; 624us; 4us; 620us; 621us; 622us; 623us; 2us; 621us; 622us; 1us; 621us; 1us; 622us; 1us; 623us; 1us; 624us; 1us; 625us; 1us; 627us; 1us; 627us; 1us; 628us; 1us; 628us; 1us; 629us; 2us; 630us; 631us; 2us; 630us; 631us; 2us; 630us; 631us; 1us; 630us; 1us; 631us; 1us; 633us; 2us; 634us; 635us; 2us; 634us; 635us; 2us; 634us; 635us; 1us; 634us; 1us; 635us; 2us; 636us; 637us; 1us; 636us; 1us; 637us; 2us; 638us; 639us; 1us; 639us; 2us; 640us; 641us; 1us; 640us; 1us; 642us; 2us; 642us; 937us; 1us; 642us; 1us; 643us; 2us; 643us; 933us; 1us; 643us; 1us; 644us; 2us; 644us; 936us; 1us; 644us; 1us; 645us; 2us; 645us; 949us; 1us; 645us; 1us; 646us; 2us; 646us; 944us; 1us; 646us; 1us; 647us; 2us; 647us; 945us; 1us; 647us; 3us; 648us; 649us; 650us; 7us; 648us; 649us; 650us; 784us; 785us; 786us; 787us; 2us; 648us; 649us; 6us; 648us; 649us; 784us; 785us; 786us; 787us; 2us; 648us; 649us; 4us; 648us; 649us; 785us; 786us; 1us; 648us; 3us; 648us; 785us; 786us; 1us; 649us; 1us; 650us; 1us; 651us; 1us; 651us; 1us; 652us; 1us; 652us; 2us; 653us; 654us; 6us; 653us; 654us; 760us; 764us; 765us; 766us; 1us; 654us; 6us; 655us; 658us; 659us; 660us; 662us; 665us; 1us; 656us; 6us; 656us; 658us; 659us; 660us; 662us; 665us; 6us; 657us; 658us; 659us; 660us; 662us; 665us; 6us; 658us; 658us; 659us; 660us; 662us; 665us; 6us; 658us; 659us; 659us; 660us; 662us; 665us; 6us; 658us; 659us; 660us; 661us; 662us; 665us; 6us; 658us; 659us; 660us; 662us; 665us; 877us; 1us; 658us; 1us; 659us; 1us; 660us; 1us; 660us; 1us; 661us; 2us; 661us; 927us; 1us; 662us; 1us; 662us; 1us; 663us; 1us; 663us; 1us; 663us; 1us; 664us; 2us; 664us; 943us; 1us; 664us; 1us; 665us; 1us; 665us; 1us; 666us; 1us; 667us; 4us; 668us; 669us; 670us; 671us; 2us; 668us; 669us; 1us; 668us; 1us; 669us; 1us; 670us; 1us; 671us; 1us; 672us; 1us; 673us; 1us; 675us; 6us; 676us; 677us; 922us; 923us; 925us; 926us; 1us; 676us; 1us; 676us; 1us; 676us; 1us; 676us; 1us; 677us; 1us; 677us; 6us; 678us; 679us; 680us; 681us; 682us; 683us; 2us; 678us; 679us; 1us; 678us; 1us; 679us; 2us; 680us; 681us; 1us; 680us; 1us; 681us; 1us; 682us; 1us; 683us; 2us; 684us; 685us; 1us; 684us; 1us; 684us; 2us; 686us; 687us; 1us; 688us; 1us; 689us; 1us; 691us; 1us; 692us; 1us; 693us; 1us; 694us; 1us; 695us; 1us; 696us; 1us; 697us; 1us; 698us; 1us; 699us; 4us; 700us; 701us; 702us; 703us; 2us; 700us; 701us; 1us; 700us; 1us; 701us; 1us; 702us; 1us; 702us; 1us; 703us; 4us; 704us; 705us; 706us; 707us; 5us; 704us; 705us; 706us; 707us; 952us; 2us; 704us; 705us; 1us; 704us; 1us; 705us; 1us; 706us; 1us; 707us; 4us; 708us; 709us; 710us; 711us; 2us; 708us; 709us; 1us; 708us; 1us; 709us; 1us; 710us; 1us; 711us; 9us; 712us; 713us; 714us; 715us; 716us; 717us; 718us; 719us; 720us; 14us; 712us; 713us; 714us; 715us; 716us; 717us; 718us; 719us; 720us; 725us; 922us; 923us; 925us; 926us; 13us; 712us; 713us; 714us; 715us; 716us; 717us; 718us; 719us; 720us; 922us; 923us; 925us; 926us; 1us; 712us; 2us; 713us; 714us; 1us; 713us; 1us; 714us; 1us; 715us; 2us; 715us; 923us; 1us; 716us; 1us; 717us; 1us; 718us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 721us; 1us; 721us; 1us; 721us; 1us; 721us; 1us; 721us; 1us; 722us; 1us; 723us; 1us; 724us; 2us; 724us; 727us; 2us; 725us; 726us; 1us; 725us; 1us; 726us; 1us; 726us; 5us; 728us; 729us; 730us; 731us; 732us; 2us; 728us; 729us; 1us; 728us; 1us; 729us; 1us; 730us; 1us; 731us; 1us; 732us; 1us; 733us; 1us; 734us; 1us; 735us; 1us; 736us; 1us; 738us; 1us; 739us; 3us; 740us; 741us; 742us; 1us; 741us; 1us; 742us; 1us; 743us; 1us; 743us; 3us; 744us; 745us; 746us; 1us; 745us; 1us; 746us; 1us; 747us; 1us; 748us; 1us; 748us; 1us; 749us; 1us; 749us; 1us; 749us; 2us; 749us; 750us; 1us; 749us; 1us; 749us; 1us; 750us; 1us; 753us; 1us; 755us; 1us; 755us; 1us; 755us; 1us; 755us; 2us; 757us; 758us; 1us; 757us; 5us; 758us; 847us; 873us; 874us; 880us; 1us; 758us; 1us; 759us; 1us; 759us; 1us; 759us; 1us; 759us; 2us; 759us; 775us; 1us; 759us; 1us; 760us; 1us; 760us; 2us; 760us; 775us; 1us; 760us; 3us; 761us; 762us; 763us; 2us; 762us; 763us; 1us; 763us; 2us; 763us; 775us; 1us; 763us; 1us; 764us; 1us; 764us; 2us; 764us; 775us; 1us; 764us; 2us; 765us; 766us; 1us; 765us; 1us; 765us; 1us; 766us; 2us; 766us; 775us; 1us; 766us; 1us; 766us; 1us; 767us; 2us; 767us; 775us; 2us; 769us; 772us; 2us; 770us; 771us; 1us; 771us; 1us; 772us; 3us; 773us; 920us; 921us; 1us; 774us; 1us; 775us; 5us; 777us; 778us; 779us; 780us; 781us; 3us; 777us; 778us; 779us; 1us; 777us; 1us; 779us; 1us; 781us; 2us; 782us; 783us; 1us; 782us; 1us; 782us; 1us; 782us; 1us; 783us; 1us; 783us; 1us; 785us; 1us; 788us; 2us; 790us; 792us; 1us; 790us; 1us; 791us; 1us; 791us; 1us; 791us; 1us; 792us; 1us; 792us; 1us; 793us; 1us; 793us; 1us; 795us; 1us; 795us; 1us; 796us; 1us; 796us; 1us; 797us; 4us; 797us; 844us; 845us; 846us; 1us; 797us; 1us; 797us; 1us; 797us; 1us; 798us; 1us; 799us; 2us; 800us; 801us; 2us; 800us; 801us; 2us; 800us; 801us; 1us; 800us; 1us; 801us; 6us; 802us; 803us; 804us; 805us; 806us; 807us; 5us; 802us; 803us; 804us; 805us; 806us; 4us; 802us; 803us; 804us; 805us; 2us; 802us; 803us; 1us; 802us; 1us; 803us; 1us; 804us; 1us; 804us; 1us; 805us; 1us; 806us; 1us; 806us; 1us; 807us; 1us; 807us; 1us; 808us; 1us; 808us; 1us; 809us; 1us; 809us; 1us; 809us; 2us; 810us; 811us; 1us; 811us; 2us; 812us; 813us; 1us; 813us; 1us; 815us; 1us; 815us; 2us; 816us; 817us; 1us; 816us; 1us; 816us; 2us; 818us; 819us; 1us; 818us; 1us; 818us; 2us; 820us; 821us; 1us; 820us; 1us; 820us; 3us; 822us; 823us; 824us; 5us; 822us; 824us; 844us; 845us; 846us; 1us; 822us; 4us; 822us; 844us; 845us; 846us; 1us; 823us; 1us; 823us; 1us; 823us; 4us; 823us; 844us; 845us; 846us; 5us; 825us; 827us; 844us; 845us; 846us; 1us; 825us; 4us; 825us; 844us; 845us; 846us; 1us; 826us; 1us; 826us; 1us; 826us; 4us; 826us; 844us; 845us; 846us; 2us; 828us; 829us; 1us; 828us; 1us; 828us; 1us; 830us; 1us; 830us; 6us; 831us; 833us; 834us; 844us; 845us; 846us; 1us; 831us; 1us; 831us; 1us; 832us; 1us; 832us; 1us; 833us; 1us; 833us; 6us; 835us; 836us; 837us; 844us; 845us; 846us; 1us; 835us; 1us; 835us; 1us; 836us; 1us; 836us; 3us; 840us; 920us; 921us; 1us; 841us; 2us; 841us; 849us; 3us; 841us; 849us; 866us; 2us; 842us; 843us; 4us; 842us; 843us; 881us; 884us; 1us; 842us; 1us; 842us; 6us; 844us; 845us; 846us; 861us; 862us; 863us; 1us; 844us; 2us; 844us; 861us; 1us; 845us; 2us; 845us; 862us; 1us; 845us; 2us; 845us; 862us; 1us; 846us; 2us; 846us; 863us; 5us; 847us; 864us; 873us; 874us; 880us; 4us; 847us; 873us; 874us; 880us; 1us; 847us; 2us; 847us; 864us; 1us; 847us; 2us; 847us; 864us; 1us; 847us; 2us; 847us; 864us; 1us; 848us; 1us; 849us; 2us; 849us; 866us; 1us; 849us; 2us; 849us; 866us; 3us; 850us; 867us; 872us; 2us; 850us; 872us; 1us; 850us; 2us; 850us; 867us; 1us; 850us; 2us; 850us; 867us; 4us; 851us; 852us; 853us; 854us; 1us; 851us; 3us; 852us; 853us; 854us; 1us; 852us; 2us; 853us; 854us; 1us; 853us; 1us; 854us; 1us; 854us; 1us; 855us; 1us; 855us; 1us; 855us; 3us; 855us; 856us; 857us; 4us; 856us; 857us; 887us; 888us; 2us; 856us; 857us; 1us; 856us; 1us; 857us; 6us; 859us; 860us; 868us; 869us; 882us; 883us; 4us; 859us; 860us; 882us; 883us; 1us; 860us; 2us; 860us; 869us; 1us; 860us; 2us; 860us; 869us; 1us; 865us; 1us; 870us; 3us; 870us; 882us; 883us; 1us; 871us; 1us; 872us; 3us; 873us; 874us; 880us; 2us; 873us; 874us; 5us; 873us; 874us; 894us; 895us; 896us; 1us; 873us; 1us; 874us; 1us; 875us; 1us; 876us; 1us; 877us; 1us; 878us; 1us; 879us; 1us; 880us; 1us; 880us; 1us; 881us; 2us; 882us; 883us; 4us; 882us; 883us; 920us; 921us; 1us; 883us; 1us; 884us; 1us; 884us; 1us; 885us; 1us; 886us; 1us; 886us; 7us; 887us; 888us; 889us; 890us; 891us; 892us; 893us; 3us; 887us; 888us; 889us; 3us; 887us; 888us; 889us; 2us; 887us; 888us; 1us; 887us; 1us; 888us; 1us; 889us; 3us; 890us; 891us; 897us; 1us; 890us; 1us; 891us; 1us; 892us; 1us; 893us; 3us; 894us; 895us; 896us; 2us; 895us; 896us; 1us; 895us; 1us; 897us; 1us; 898us; 2us; 900us; 901us; 3us; 900us; 911us; 912us; 1us; 900us; 1us; 901us; 1us; 901us; 3us; 902us; 920us; 921us; 1us; 903us; 1us; 904us; 3us; 904us; 911us; 912us; 1us; 904us; 2us; 905us; 906us; 1us; 906us; 1us; 906us; 1us; 907us; 2us; 908us; 909us; 1us; 909us; 1us; 910us; 3us; 911us; 911us; 912us; 3us; 911us; 912us; 912us; 3us; 911us; 912us; 913us; 1us; 911us; 1us; 912us; 1us; 913us; 1us; 914us; 1us; 914us; 1us; 915us; 1us; 916us; 2us; 916us; 930us; 1us; 916us; 1us; 917us; 1us; 918us; 1us; 919us; 2us; 920us; 921us; 1us; 920us; 1us; 921us; 4us; 922us; 923us; 925us; 926us; 1us; 922us; 1us; 922us; 1us; 923us; 1us; 923us; 1us; 924us; 3us; 925us; 926us; 955us; 3us; 925us; 926us; 955us; 1us; 925us; 1us; 926us; 1us; 926us; 1us; 926us; 1us; 927us; 1us; 928us; 1us; 929us; 1us; 930us; 1us; 931us; 1us; 932us; 1us; 933us; 1us; 934us; 1us; 935us; 1us; 936us; 1us; 937us; 1us; 938us; 1us; 939us; 1us; 940us; 1us; 941us; 1us; 942us; 1us; 943us; 1us; 944us; 1us; 945us; 1us; 946us; 1us; 947us; 1us; 948us; 1us; 949us; 2us; 950us; 951us; 1us; 951us; 1us; 952us; 1us; 952us; 1us; 953us; 1us; 954us; 1us; 954us; 1us; 955us; 1us; 956us; 1us; 957us; 3us; 958us; 960us; 961us; 1us; 959us; 2us; 960us; 961us; 1us; 960us; 1us; 961us; 1us; 962us; 1us; 963us; 1us; 964us; 1us; 965us; 2us; 966us; 967us; 1us; 967us; 1us; 968us; 1us; 968us; 2us; 970us; 972us; 2us; 971us; 973us; 1us; 972us; 1us; 973us; 1us; 974us; 1us; 975us; 1us; 976us; 1us; 977us; 1us; 978us; 1us; 979us; 1us; 981us; 1us; 983us; 1us; 985us; 1us; 987us; 1us; 989us; 1us; 993us; 1us; 995us; 1us; 997us; 1us; 998us; 1us; 999us; 1us; 1000us; 1us; 1001us; 1us; 1002us; 1us; 1003us; 1us; 1004us; 1us; 1005us; 1us; 1006us; 1us; 1007us; 1us; 1008us; 1us; 1009us; 1us; 1010us; 1us; 1012us; 1us; 1014us; 2us; 1014us; 1034us; 1us; 1014us; 1us; 1015us; 1us; 1016us; 1us; 1017us; 2us; 1017us; 1035us; 1us; 1017us; 1us; 1018us; 1us; 1019us; 1us; 1020us; 1us; 1020us; 1us; 1021us; 1us; 1022us; 1us; 1023us; 1us; 1023us; 1us; 1024us; 1us; 1025us; 1us; 1026us; 1us; 1026us; 1us; 1027us; 1us; 1028us; 1us; 1029us; 1us; 1030us; 1us; 1031us; 1us; 1032us; 1us; 1033us; 1us; 1034us; 1us; 1035us; 1us; 1036us; 1us; 1037us; 1us; 1038us; 1us; 1039us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 62us; 64us; 72us; 80us; 128us; 130us; 133us; 135us; 137us; 139us; 141us; 143us; 146us; 148us; 150us; 153us; 155us; 157us; 159us; 163us; 165us; 167us; 169us; 173us; 175us; 179us; 182us; 184us; 187us; 189us; 191us; 193us; 195us; 202us; 209us; 213us; 215us; 217us; 219us; 223us; 226us; 228us; 230us; 232us; 236us; 238us; 240us; 243us; 246us; 249us; 251us; 253us; 255us; 257us; 259us; 261us; 267us; 273us; 276us; 279us; 281us; 283us; 285us; 287us; 289us; 293us; 295us; 297us; 299us; 301us; 303us; 305us; 307us; 309us; 311us; 313us; 316us; 364us; 366us; 414us; 416us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 434us; 436us; 438us; 440us; 442us; 445us; 447us; 449us; 452us; 454us; 456us; 458us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 494us; 497us; 499us; 501us; 503us; 505us; 508us; 511us; 513us; 515us; 518us; 521us; 523us; 525us; 528us; 531us; 533us; 535us; 537us; 539us; 541us; 543us; 545us; 553us; 566us; 574us; 587us; 589us; 591us; 593us; 595us; 597us; 599us; 601us; 603us; 605us; 607us; 612us; 614us; 619us; 621us; 623us; 627us; 629us; 631us; 633us; 635us; 637us; 639us; 641us; 643us; 645us; 648us; 651us; 653us; 655us; 658us; 660us; 662us; 664us; 667us; 669us; 671us; 673us; 675us; 677us; 679us; 682us; 684us; 686us; 688us; 691us; 693us; 696us; 698us; 701us; 703us; 705us; 707us; 709us; 721us; 732us; 735us; 737us; 739us; 743us; 746us; 748us; 750us; 752us; 755us; 757us; 759us; 761us; 772us; 782us; 832us; 835us; 837us; 839us; 841us; 846us; 848us; 851us; 853us; 855us; 858us; 861us; 863us; 865us; 867us; 869us; 876us; 883us; 885us; 889us; 891us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 916us; 918us; 920us; 924us; 926us; 930us; 936us; 939us; 941us; 943us; 946us; 948us; 950us; 952us; 954us; 958us; 962us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; 982us; 984us; 989us; 993us; 996us; 998us; 1000us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1016us; 1018us; 1022us; 1024us; 1026us; 1029us; 1033us; 1035us; 1037us; 1039us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1060us; 1062us; 1064us; 1066us; 1071us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1096us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1121us; 1124us; 1127us; 1130us; 1133us; 1135us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; 1149us; 1151us; 1153us; 1155us; 1159us; 1162us; 1164us; 1166us; 1169us; 1171us; 1174us; 1177us; 1179us; 1181us; 1184us; 1187us; 1189us; 1191us; 1193us; 1195us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1212us; 1215us; 1217us; 1219us; 1222us; 1224us; 1226us; 1228us; 1230us; 1232us; 1234us; 1236us; 1238us; 1241us; 1244us; 1247us; 1249us; 1251us; 1253us; 1256us; 1258us; 1270us; 1287us; 1299us; 1316us; 1318us; 1320us; 1323us; 1325us; 1327us; 1329us; 1334us; 1336us; 1338us; 1340us; 1342us; 1344us; 1346us; 1348us; 1350us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; 1432us; 1434us; 1436us; 1438us; 1440us; 1442us; 1444us; 1446us; 1448us; 1452us; 1455us; 1457us; 1459us; 1461us; 1463us; 1465us; 1467us; 1469us; 1471us; 1473us; 1476us; 1478us; 1480us; 1483us; 1486us; 1488us; 1490us; 1492us; 1495us; 1498us; 1500us; 1505us; 1511us; 1515us; 1517us; 1519us; 1521us; 1523us; 1525us; 1527us; 1529us; 1531us; 1533us; 1535us; 1541us; 1547us; 1552us; 1554us; 1556us; 1558us; 1560us; 1562us; 1564us; 1570us; 1572us; 1574us; 1578us; 1581us; 1583us; 1585us; 1587us; 1589us; 1592us; 1595us; 1597us; 1599us; 1601us; 1603us; 1605us; 1607us; 1611us; 1616us; 1618us; 1622us; 1624us; 1626us; 1628us; 1631us; 1633us; 1636us; 1640us; 1642us; 1645us; 1647us; 1649us; 1651us; 1653us; 1655us; 1657us; 1659us; 1661us; 1663us; 1665us; 1667us; 1669us; 1671us; 1673us; 1675us; 1678us; 1680us; 1683us; 1686us; 1689us; 1691us; 1693us; 1695us; 1697us; 1699us; 1701us; 1703us; 1712us; 1714us; 1716us; 1724us; 1726us; 1730us; 1732us; 1734us; 1736us; 1738us; 1740us; 1742us; 1745us; 1747us; 1749us; 1751us; 1753us; 1755us; 1757us; 1759us; 1761us; 1763us; 1765us; 1767us; 1769us; 1771us; 1773us; 1775us; 1777us; 1780us; 1782us; 1785us; 1787us; 1789us; 1794us; 1799us; 1804us; 1806us; 1808us; 1810us; 1812us; 1814us; 1816us; 1818us; 1820us; 1822us; 1824us; 1826us; 1833us; 1835us; 1837us; 1839us; 1841us; 1843us; 1849us; 1851us; 1854us; 1857us; 1860us; 1862us; 1864us; 1866us; 1869us; 1871us; 1873us; 1876us; 1878us; 1883us; 1888us; 1890us; 1892us; 1895us; 1898us; 1900us; 1902us; 1904us; 1906us; 1908us; 1910us; 1912us; 1914us; 1916us; 1918us; 1920us; 1922us; 1924us; 1926us; 1928us; 1930us; 1932us; 1935us; 1937us; 1939us; 1941us; 1945us; 1947us; 1951us; 1953us; 1955us; 1957us; 1959us; 1961us; 1963us; 1965us; 1967us; 1969us; 1971us; 1973us; 1975us; 1977us; 1979us; 1981us; 1983us; 1985us; 1987us; 1989us; 1991us; 1993us; 1995us; 1997us; 1999us; 2001us; 2003us; 2005us; 2008us; 2011us; 2013us; 2015us; 2017us; 2019us; 2022us; 2028us; 2030us; 2034us; 2039us; 2041us; 2043us; 2045us; 2047us; 2049us; 2051us; 2054us; 2056us; 2059us; 2061us; 2063us; 2065us; 2067us; 2069us; 2071us; 2073us; 2075us; 2079us; 2083us; 2087us; 2091us; 2094us; 2096us; 2098us; 2100us; 2103us; 2106us; 2108us; 2110us; 2112us; 2114us; 2117us; 2119us; 2121us; 2124us; 2126us; 2128us; 2130us; 2132us; 2134us; 2137us; 2139us; 2141us; 2143us; 2145us; 2147us; 2149us; 2151us; 2153us; 2155us; 2157us; 2159us; 2161us; 2163us; 2165us; 2167us; 2169us; 2172us; 2174us; 2176us; 2178us; 2180us; 2183us; 2185us; 2187us; 2190us; 2193us; 2195us; 2197us; 2199us; 2201us; 2203us; 2205us; 2207us; 2209us; 2211us; 2214us; 2216us; 2218us; 2225us; 2227us; 2229us; 2231us; 2234us; 2238us; 2240us; 2242us; 2244us; 2246us; 2248us; 2254us; 2257us; 2259us; 2261us; 2263us; 2266us; 2268us; 2270us; 2277us; 2284us; 2291us; 2298us; 2305us; 2312us; 2319us; 2327us; 2329us; 2331us; 2333us; 2335us; 2338us; 2341us; 2343us; 2345us; 2347us; 2349us; 2351us; 2354us; 2356us; 2359us; 2361us; 2363us; 2368us; 2370us; 2378us; 2384us; 2388us; 2390us; 2392us; 2394us; 2396us; 2398us; 2400us; 2404us; 2406us; 2416us; 2418us; 2420us; 2422us; 2427us; 2429us; 2431us; 2433us; 2435us; 2437us; 2439us; 2441us; 2443us; 2445us; 2447us; 2449us; 2451us; 2453us; 2455us; 2457us; 2459us; 2461us; 2463us; 2465us; 2468us; 2470us; 2472us; 2474us; 2476us; 2478us; 2480us; 2489us; 2492us; 2494us; 2496us; 2500us; 2503us; 2505us; 2513us; 2521us; 2529us; 2537us; 2545us; 2553us; 2561us; 2569us; 2577us; 2586us; 2600us; 2608us; 2610us; 2612us; 2614us; 2617us; 2620us; 2622us; 2624us; 2626us; 2628us; 2630us; 2632us; 2634us; 2636us; 2638us; 2640us; 2643us; 2645us; 2648us; 2650us; 2654us; 2656us; 2658us; 2661us; 2663us; 2666us; 2669us; 2671us; 2673us; 2675us; 2677us; 2679us; 2681us; 2729us; 2732us; 2734us; 2737us; 2739us; 2741us; 2743us; 2745us; 2797us; 2852us; 2907us; 2910us; 2912us; 2914us; 2916us; 2918us; 2920us; 2922us; 2924us; 2930us; 2932us; 2935us; 2938us; 2941us; 2944us; 2947us; 2950us; 2953us; 2956us; 2959us; 2962us; 2966us; 2969us; 2971us; 2974us; 2977us; 2979us; 2981us; 2986us; 2988us; 2990us; 2993us; 2995us; 2997us; 2999us; 3001us; 3003us; 3006us; 3009us; 3011us; 3013us; 3017us; 3021us; 3023us; 3025us; 3027us; 3029us; 3033us; 3082us; 3084us; 3086us; 3088us; 3090us; 3138us; 3141us; 3189us; 3191us; 3193us; 3196us; 3198us; 3205us; 3256us; 3260us; 3263us; 3265us; 3267us; 3269us; 3271us; 3273us; 3275us; 3277us; 3293us; 3300us; 3305us; 3308us; 3310us; 3312us; 3314us; 3316us; 3318us; 3324us; 3329us; 3332us; 3334us; 3336us; 3338us; 3340us; 3342us; 3344us; 3346us; 3348us; 3350us; 3352us; 3355us; 3357us; 3405us; 3407us; 3455us; 3457us; 3459us; 3461us; 3463us; 3465us; 3467us; 3470us; 3473us; 3476us; 3479us; 3482us; 3484us; 3486us; 3488us; 3490us; 3492us; 3494us; 3496us; 3498us; 3500us; 3502us; 3504us; 3506us; 3508us; 3510us; 3558us; 3606us; 3654us; 3702us; 3750us; 3798us; 3846us; 3894us; 3942us; 3990us; 4038us; 4086us; 4134us; 4182us; 4230us; 4278us; 4326us; 4374us; 4422us; 4470us; 4518us; 4566us; 4614us; 4662us; 4711us; 4759us; 4807us; 4857us; 4905us; 4953us; 5004us; 5053us; 5101us; 5149us; 5197us; 5199us; 5201us; 5203us; 5205us; 5207us; 5209us; 5211us; 5214us; 5216us; 5218us; 5222us; 5225us; 5228us; 5231us; 5234us; 5237us; 5240us; 5243us; 5246us; 5249us; 5252us; 5255us; 5258us; 5261us; 5264us; 5267us; 5270us; 5273us; 5276us; 5279us; 5282us; 5284us; 5286us; 5288us; 5290us; 5292us; 5294us; 5296us; 5298us; 5300us; 5302us; 5304us; 5306us; 5308us; 5310us; 5312us; 5314us; 5316us; 5318us; 5320us; 5322us; 5324us; 5326us; 5328us; 5330us; 5332us; 5334us; 5337us; 5340us; 5342us; 5344us; 5346us; 5349us; 5351us; 5353us; 5355us; 5357us; 5363us; 5368us; 5371us; 5373us; 5375us; 5377us; 5379us; 5381us; 5383us; 5385us; 5387us; 5389us; 5391us; 5394us; 5397us; 5400us; 5402us; 5404us; 5406us; 5409us; 5412us; 5415us; 5417us; 5419us; 5422us; 5424us; 5426us; 5429us; 5431us; 5434us; 5436us; 5438us; 5441us; 5443us; 5445us; 5448us; 5450us; 5452us; 5455us; 5457us; 5459us; 5462us; 5464us; 5466us; 5469us; 5471us; 5473us; 5476us; 5478us; 5482us; 5490us; 5493us; 5500us; 5503us; 5508us; 5510us; 5514us; 5516us; 5518us; 5520us; 5522us; 5524us; 5526us; 5529us; 5536us; 5538us; 5545us; 5547us; 5554us; 5561us; 5568us; 5575us; 5582us; 5589us; 5591us; 5593us; 5595us; 5597us; 5599us; 5602us; 5604us; 5606us; 5608us; 5610us; 5612us; 5614us; 5617us; 5619us; 5621us; 5623us; 5625us; 5627us; 5632us; 5635us; 5637us; 5639us; 5641us; 5643us; 5645us; 5647us; 5649us; 5656us; 5658us; 5660us; 5662us; 5664us; 5666us; 5668us; 5675us; 5678us; 5680us; 5682us; 5685us; 5687us; 5689us; 5691us; 5693us; 5696us; 5698us; 5700us; 5703us; 5705us; 5707us; 5709us; 5711us; 5713us; 5715us; 5717us; 5719us; 5721us; 5723us; 5725us; 5730us; 5733us; 5735us; 5737us; 5739us; 5741us; 5743us; 5748us; 5754us; 5757us; 5759us; 5761us; 5763us; 5765us; 5770us; 5773us; 5775us; 5777us; 5779us; 5781us; 5791us; 5806us; 5820us; 5822us; 5825us; 5827us; 5829us; 5831us; 5834us; 5836us; 5838us; 5840us; 5842us; 5844us; 5846us; 5848us; 5850us; 5852us; 5854us; 5856us; 5858us; 5860us; 5862us; 5865us; 5868us; 5870us; 5872us; 5874us; 5880us; 5883us; 5885us; 5887us; 5889us; 5891us; 5893us; 5895us; 5897us; 5899us; 5901us; 5903us; 5905us; 5909us; 5911us; 5913us; 5915us; 5917us; 5921us; 5923us; 5925us; 5927us; 5929us; 5931us; 5933us; 5935us; 5937us; 5940us; 5942us; 5944us; 5946us; 5948us; 5950us; 5952us; 5954us; 5956us; 5959us; 5961us; 5967us; 5969us; 5971us; 5973us; 5975us; 5977us; 5980us; 5982us; 5984us; 5986us; 5989us; 5991us; 5995us; 5998us; 6000us; 6003us; 6005us; 6007us; 6009us; 6012us; 6014us; 6017us; 6019us; 6021us; 6023us; 6026us; 6028us; 6030us; 6032us; 6035us; 6038us; 6041us; 6043us; 6045us; 6049us; 6051us; 6053us; 6059us; 6063us; 6065us; 6067us; 6069us; 6072us; 6074us; 6076us; 6078us; 6080us; 6082us; 6084us; 6086us; 6089us; 6091us; 6093us; 6095us; 6097us; 6099us; 6101us; 6103us; 6105us; 6107us; 6109us; 6111us; 6113us; 6115us; 6120us; 6122us; 6124us; 6126us; 6128us; 6130us; 6133us; 6136us; 6139us; 6141us; 6143us; 6150us; 6156us; 6161us; 6164us; 6166us; 6168us; 6170us; 6172us; 6174us; 6176us; 6178us; 6180us; 6182us; 6184us; 6186us; 6188us; 6190us; 6192us; 6195us; 6197us; 6200us; 6202us; 6204us; 6206us; 6209us; 6211us; 6213us; 6216us; 6218us; 6220us; 6223us; 6225us; 6227us; 6231us; 6237us; 6239us; 6244us; 6246us; 6248us; 6250us; 6255us; 6261us; 6263us; 6268us; 6270us; 6272us; 6274us; 6279us; 6282us; 6284us; 6286us; 6288us; 6290us; 6297us; 6299us; 6301us; 6303us; 6305us; 6307us; 6309us; 6316us; 6318us; 6320us; 6322us; 6324us; 6328us; 6330us; 6333us; 6337us; 6340us; 6345us; 6347us; 6349us; 6356us; 6358us; 6361us; 6363us; 6366us; 6368us; 6371us; 6373us; 6376us; 6382us; 6387us; 6389us; 6392us; 6394us; 6397us; 6399us; 6402us; 6404us; 6406us; 6409us; 6411us; 6414us; 6418us; 6421us; 6423us; 6426us; 6428us; 6431us; 6436us; 6438us; 6442us; 6444us; 6447us; 6449us; 6451us; 6453us; 6455us; 6457us; 6459us; 6463us; 6468us; 6471us; 6473us; 6475us; 6482us; 6487us; 6489us; 6492us; 6494us; 6497us; 6499us; 6501us; 6505us; 6507us; 6509us; 6513us; 6516us; 6522us; 6524us; 6526us; 6528us; 6530us; 6532us; 6534us; 6536us; 6538us; 6540us; 6542us; 6545us; 6550us; 6552us; 6554us; 6556us; 6558us; 6560us; 6562us; 6570us; 6574us; 6578us; 6581us; 6583us; 6585us; 6587us; 6591us; 6593us; 6595us; 6597us; 6599us; 6603us; 6606us; 6608us; 6610us; 6612us; 6615us; 6619us; 6621us; 6623us; 6625us; 6629us; 6631us; 6633us; 6637us; 6639us; 6642us; 6644us; 6646us; 6648us; 6651us; 6653us; 6655us; 6659us; 6663us; 6667us; 6669us; 6671us; 6673us; 6675us; 6677us; 6679us; 6681us; 6684us; 6686us; 6688us; 6690us; 6692us; 6695us; 6697us; 6699us; 6704us; 6706us; 6708us; 6710us; 6712us; 6714us; 6718us; 6722us; 6724us; 6726us; 6728us; 6730us; 6732us; 6734us; 6736us; 6738us; 6740us; 6742us; 6744us; 6746us; 6748us; 6750us; 6752us; 6754us; 6756us; 6758us; 6760us; 6762us; 6764us; 6766us; 6768us; 6770us; 6772us; 6774us; 6776us; 6779us; 6781us; 6783us; 6785us; 6787us; 6789us; 6791us; 6793us; 6795us; 6797us; 6801us; 6803us; 6806us; 6808us; 6810us; 6812us; 6814us; 6816us; 6818us; 6821us; 6823us; 6825us; 6827us; 6830us; 6833us; 6835us; 6837us; 6839us; 6841us; 6843us; 6845us; 6847us; 6849us; 6851us; 6853us; 6855us; 6857us; 6859us; 6861us; 6863us; 6865us; 6867us; 6869us; 6871us; 6873us; 6875us; 6877us; 6879us; 6881us; 6883us; 6885us; 6887us; 6889us; 6891us; 6893us; 6895us; 6898us; 6900us; 6902us; 6904us; 6906us; 6909us; 6911us; 6913us; 6915us; 6917us; 6919us; 6921us; 6923us; 6925us; 6927us; 6929us; 6931us; 6933us; 6935us; 6937us; 6939us; 6941us; 6943us; 6945us; 6947us; 6949us; 6951us; 6953us; 6955us; 6957us; 6959us; |]
let _fsyacc_action_rows = 1784
let _fsyacc_actionTableElements = [|16us; 16431us; 21us; 67us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 47us; 0us; 49152us; 82us; 16507us; 21us; 228us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 214us; 0us; 49152us; 7us; 16542us; 10us; 14us; 20us; 12us; 67us; 13us; 72us; 296us; 83us; 11us; 87us; 38us; 100us; 675us; 0us; 49152us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 49152us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 49152us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 4us; 32768us; 10us; 14us; 20us; 37us; 67us; 13us; 83us; 36us; 0us; 16395us; 4us; 32768us; 10us; 14us; 20us; 37us; 67us; 13us; 83us; 36us; 0us; 16396us; 4us; 32768us; 10us; 14us; 20us; 37us; 67us; 13us; 83us; 36us; 0us; 16397us; 5us; 16542us; 10us; 14us; 67us; 13us; 72us; 296us; 87us; 38us; 100us; 675us; 0us; 16398us; 5us; 16542us; 10us; 14us; 67us; 13us; 72us; 296us; 87us; 38us; 100us; 675us; 0us; 16399us; 5us; 16542us; 10us; 14us; 67us; 13us; 72us; 296us; 87us; 38us; 100us; 675us; 0us; 16400us; 16us; 16401us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 100us; 675us; 107us; 16542us; 119us; 16542us; 135us; 16542us; 147us; 16542us; 159us; 16542us; 0us; 16402us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 74us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 107us; 1755us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 119us; 664us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 135us; 681us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 147us; 1760us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 25us; 16403us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 0us; 16404us; 2us; 16405us; 20us; 37us; 83us; 36us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 188us; 39us; 0us; 16410us; 2us; 16409us; 189us; 1747us; 190us; 1746us; 0us; 16411us; 0us; 16412us; 2us; 32768us; 10us; 44us; 192us; 45us; 0us; 16413us; 1us; 32768us; 10us; 46us; 0us; 16414us; 4us; 16430us; 10us; 48us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 0us; 16415us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 1us; 16416us; 76us; 1658us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 1us; 16417us; 76us; 1658us; 1us; 16418us; 148us; 52us; 0us; 16419us; 1us; 16421us; 148us; 52us; 0us; 16420us; 1us; 17368us; 69us; 1730us; 16us; 16431us; 21us; 67us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 75us; 0us; 16422us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 8us; 32768us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 107us; 1755us; 108us; 94us; 119us; 664us; 147us; 1760us; 18us; 16431us; 21us; 67us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 69us; 1745us; 72us; 296us; 77us; 1744us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 75us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 15us; 16431us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 72us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 1us; 17370us; 20us; 1731us; 0us; 16426us; 0us; 16427us; 6us; 16430us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 0us; 16428us; 0us; 16429us; 3us; 16430us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 3us; 17353us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 15us; 16434us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 79us; 0us; 16432us; 3us; 32768us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 4us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 192us; 79us; 0us; 16433us; 0us; 16435us; 0us; 16436us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 8us; 32768us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 107us; 1755us; 108us; 94us; 119us; 664us; 147us; 1760us; 2us; 32768us; 69us; 1745us; 77us; 1744us; 5us; 32768us; 21us; 109us; 44us; 1656us; 55us; 1742us; 134us; 1743us; 188us; 1655us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 1us; 16441us; 76us; 1658us; 1us; 16542us; 72us; 296us; 1us; 17378us; 109us; 1734us; 1us; 17380us; 116us; 1735us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 2us; 16676us; 32us; 1750us; 157us; 17397us; 1us; 32768us; 77us; 101us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16443us; 69us; 104us; 0us; 16442us; 67us; 32768us; 21us; 106us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 25us; 16444us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 28us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 0us; 16445us; 8us; 16542us; 44us; 1656us; 55us; 1742us; 72us; 296us; 87us; 38us; 100us; 92us; 134us; 1743us; 188us; 1655us; 192us; 79us; 3us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 0us; 16446us; 15us; 16431us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 75us; 1us; 32768us; 140us; 114us; 3us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 0us; 16447us; 15us; 16431us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 72us; 296us; 87us; 38us; 100us; 92us; 107us; 16542us; 108us; 16542us; 119us; 16542us; 147us; 16542us; 192us; 75us; 1us; 32768us; 140us; 118us; 0us; 16448us; 1us; 16542us; 72us; 296us; 0us; 16449us; 1us; 16451us; 129us; 122us; 1us; 16542us; 72us; 296us; 0us; 16450us; 2us; 16491us; 69us; 125us; 86us; 207us; 7us; 16542us; 21us; 128us; 47us; 535us; 54us; 537us; 72us; 296us; 110us; 536us; 134us; 153us; 149us; 139us; 0us; 16452us; 0us; 16453us; 51us; 16471us; 13us; 16542us; 21us; 149us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 47us; 535us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 54us; 537us; 56us; 16542us; 66us; 16542us; 72us; 296us; 73us; 16542us; 87us; 16542us; 90us; 16542us; 91us; 16542us; 105us; 16542us; 108us; 16542us; 110us; 536us; 112us; 16542us; 117us; 16542us; 120us; 16542us; 134us; 153us; 145us; 16542us; 149us; 139us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 182us; 16542us; 185us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 1us; 17370us; 20us; 1731us; 14us; 16471us; 13us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 1us; 16491us; 86us; 207us; 3us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 1us; 16491us; 86us; 207us; 0us; 16454us; 1us; 16491us; 86us; 207us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 118us; 140us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16458us; 0us; 16459us; 16us; 16471us; 13us; 16542us; 21us; 157us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 192us; 147us; 3us; 32768us; 10us; 965us; 140us; 145us; 192us; 952us; 0us; 16460us; 0us; 16461us; 1us; 32768us; 140us; 148us; 0us; 16462us; 14us; 16471us; 13us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16463us; 0us; 16464us; 15us; 16471us; 13us; 16542us; 21us; 157us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 3us; 32768us; 10us; 965us; 140us; 155us; 192us; 952us; 0us; 16465us; 0us; 16466us; 14us; 16471us; 13us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 14us; 16471us; 13us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 0us; 16472us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 10us; 32768us; 13us; 539us; 45us; 185us; 46us; 331us; 48us; 203us; 49us; 332us; 50us; 333us; 52us; 181us; 108us; 183us; 110us; 538us; 117us; 190us; 42us; 32768us; 13us; 539us; 44us; 1656us; 45us; 185us; 46us; 331us; 48us; 203us; 49us; 332us; 50us; 333us; 52us; 181us; 56us; 610us; 66us; 1556us; 73us; 526us; 87us; 1584us; 90us; 1649us; 91us; 523us; 105us; 1597us; 108us; 183us; 110us; 538us; 112us; 1595us; 117us; 190us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17378us; 109us; 1734us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 2us; 16676us; 32us; 1750us; 157us; 17397us; 1us; 32768us; 77us; 175us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 16480us; 25us; 195us; 86us; 193us; 1us; 16443us; 69us; 104us; 0us; 16473us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 16474us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 16475us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 1us; 17380us; 116us; 1735us; 0us; 16476us; 5us; 32768us; 35us; 1751us; 36us; 1754us; 46us; 330us; 107us; 1755us; 108us; 186us; 1us; 17380us; 116us; 1735us; 0us; 16477us; 1us; 16542us; 72us; 296us; 0us; 16478us; 1us; 32768us; 77us; 191us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16479us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 0us; 16481us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 2us; 32768us; 19us; 197us; 192us; 198us; 0us; 16482us; 0us; 16483us; 1us; 16484us; 96us; 200us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 0us; 16485us; 0us; 16486us; 1us; 16487us; 46us; 204us; 0us; 16488us; 1us; 16491us; 86us; 207us; 0us; 16489us; 15us; 16471us; 13us; 16542us; 21us; 157us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 45us; 16542us; 46us; 16542us; 48us; 16542us; 49us; 16542us; 50us; 16542us; 52us; 16542us; 72us; 296us; 108us; 16542us; 110us; 16542us; 117us; 16542us; 3us; 32768us; 18us; 1723us; 19us; 1724us; 140us; 1725us; 0us; 16490us; 2us; 32768us; 10us; 211us; 192us; 212us; 0us; 16492us; 1us; 32768us; 10us; 213us; 0us; 16493us; 4us; 32768us; 10us; 215us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 0us; 16494us; 1us; 16495us; 148us; 52us; 0us; 16496us; 1us; 16498us; 148us; 52us; 0us; 16497us; 1us; 17368us; 69us; 1730us; 82us; 16507us; 21us; 228us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 248us; 0us; 16499us; 4us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 192us; 243us; 74us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 107us; 1755us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 119us; 664us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 135us; 681us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 147us; 1760us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 83us; 16507us; 21us; 228us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 69us; 267us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 248us; 0us; 16500us; 0us; 16501us; 81us; 16507us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 233us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 1us; 17370us; 20us; 1731us; 0us; 16502us; 0us; 16503us; 6us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 4us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 192us; 243us; 74us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 107us; 1755us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 119us; 664us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 135us; 681us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 147us; 1760us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 28us; 16510us; 20us; 1714us; 61us; 1127us; 62us; 1120us; 67us; 1713us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 83us; 1712us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 81us; 16509us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 248us; 0us; 16508us; 0us; 16511us; 0us; 16512us; 21us; 16515us; 20us; 1714us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 67us; 1713us; 72us; 296us; 83us; 1712us; 87us; 38us; 100us; 675us; 107us; 16542us; 119us; 16542us; 135us; 16542us; 147us; 16542us; 159us; 16542us; 192us; 248us; 0us; 16513us; 81us; 16516us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 248us; 0us; 16514us; 3us; 32768us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 6us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 4us; 32768us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 140us; 289us; 4us; 16542us; 72us; 296us; 87us; 38us; 100us; 675us; 192us; 248us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 11us; 32768us; 31us; 683us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 39us; 696us; 107us; 1755us; 119us; 664us; 135us; 681us; 147us; 1760us; 159us; 677us; 0us; 16520us; 1us; 16520us; 125us; 967us; 0us; 16521us; 67us; 16521us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 972us; 0us; 16522us; 1us; 16542us; 72us; 296us; 1us; 16564us; 129us; 337us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 69us; 267us; 5us; 32768us; 21us; 275us; 44us; 1656us; 54us; 1740us; 134us; 1741us; 188us; 1655us; 0us; 16525us; 2us; 16541us; 10us; 965us; 192us; 952us; 0us; 16526us; 0us; 16527us; 4us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 76us; 1658us; 0us; 16528us; 1us; 16529us; 76us; 1658us; 6us; 16542us; 54us; 1740us; 72us; 296us; 87us; 38us; 100us; 675us; 134us; 1741us; 192us; 249us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16530us; 0us; 16531us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 1us; 16536us; 76us; 1658us; 81us; 16507us; 23us; 16542us; 24us; 16542us; 28us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 35us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 41us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 61us; 16542us; 70us; 16542us; 71us; 16542us; 72us; 296us; 73us; 16542us; 74us; 16542us; 85us; 16542us; 87us; 38us; 88us; 16542us; 89us; 16542us; 91us; 16542us; 97us; 16542us; 99us; 16542us; 100us; 675us; 105us; 16542us; 106us; 16542us; 107us; 16542us; 113us; 16542us; 114us; 16542us; 115us; 16542us; 117us; 16542us; 119us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 128us; 16542us; 131us; 16542us; 132us; 16542us; 134us; 16542us; 135us; 16542us; 143us; 16542us; 144us; 16542us; 145us; 16542us; 147us; 16542us; 151us; 16542us; 152us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 176us; 16542us; 177us; 16542us; 179us; 16542us; 180us; 16542us; 183us; 16542us; 188us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 250us; 3us; 32768us; 10us; 965us; 140us; 287us; 192us; 952us; 0us; 16537us; 0us; 16538us; 0us; 16539us; 6us; 16542us; 18us; 16586us; 19us; 16586us; 21us; 377us; 72us; 296us; 140us; 16586us; 192us; 383us; 3us; 32768us; 18us; 1723us; 19us; 1724us; 140us; 1725us; 0us; 16540us; 0us; 16541us; 1us; 16543us; 72us; 296us; 0us; 16544us; 14us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1752us; 36us; 1754us; 37us; 1757us; 38us; 1759us; 44us; 1656us; 59us; 1780us; 93us; 1781us; 107us; 1755us; 147us; 1760us; 160us; 327us; 188us; 1655us; 192us; 301us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 8us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 53us; 299us; 59us; 1780us; 93us; 1781us; 192us; 952us; 1us; 17370us; 20us; 1731us; 0us; 16545us; 1us; 16893us; 53us; 302us; 1us; 17370us; 20us; 1731us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 9us; 17371us; 35us; 1751us; 36us; 1754us; 37us; 1756us; 38us; 1759us; 44us; 1656us; 107us; 1755us; 147us; 1760us; 160us; 327us; 188us; 1655us; 0us; 16550us; 3us; 17395us; 33us; 1749us; 34us; 1748us; 76us; 1658us; 26us; 17136us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16551us; 3us; 32768us; 21us; 316us; 44us; 1656us; 188us; 1655us; 3us; 17395us; 33us; 1749us; 34us; 1748us; 76us; 1658us; 26us; 17136us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16552us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 4us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 76us; 1658us; 2us; 17395us; 33us; 1749us; 34us; 1748us; 26us; 17136us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16553us; 1us; 32768us; 77us; 322us; 0us; 16554us; 1us; 32768us; 77us; 324us; 0us; 16555us; 1us; 17303us; 77us; 326us; 0us; 16556us; 1us; 32768us; 77us; 328us; 0us; 16557us; 10us; 32768us; 29us; 687us; 31us; 683us; 35us; 1751us; 36us; 1754us; 39us; 696us; 46us; 330us; 107us; 1755us; 108us; 446us; 135us; 681us; 159us; 677us; 0us; 16558us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 1us; 16679us; 84us; 569us; 0us; 16562us; 1us; 16542us; 72us; 296us; 1us; 16564us; 129us; 337us; 0us; 16563us; 40us; 16542us; 10us; 16565us; 13us; 16565us; 14us; 16565us; 15us; 16565us; 16us; 16565us; 18us; 16565us; 19us; 16565us; 20us; 16565us; 29us; 16565us; 31us; 16565us; 35us; 16565us; 36us; 16565us; 37us; 16565us; 38us; 16565us; 39us; 16565us; 45us; 16565us; 46us; 16565us; 48us; 16565us; 49us; 16565us; 50us; 16565us; 52us; 16565us; 67us; 16565us; 69us; 341us; 72us; 296us; 83us; 16565us; 86us; 290us; 87us; 16565us; 100us; 16565us; 107us; 16565us; 108us; 16565us; 110us; 16565us; 117us; 16565us; 119us; 16565us; 129us; 16565us; 135us; 16565us; 140us; 16565us; 147us; 16565us; 148us; 16565us; 159us; 16565us; 192us; 16565us; 6us; 16542us; 21us; 351us; 47us; 535us; 54us; 537us; 72us; 296us; 110us; 536us; 149us; 363us; 0us; 16566us; 0us; 16567us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 2us; 17395us; 33us; 1749us; 34us; 1748us; 1us; 32768us; 91us; 805us; 1us; 16631us; 130us; 487us; 1us; 32768us; 69us; 349us; 6us; 16542us; 21us; 351us; 47us; 535us; 54us; 537us; 72us; 296us; 110us; 536us; 149us; 363us; 0us; 16568us; 11us; 16542us; 10us; 16586us; 14us; 16586us; 15us; 16586us; 16us; 16586us; 21us; 373us; 47us; 535us; 54us; 537us; 72us; 296us; 110us; 536us; 149us; 363us; 192us; 383us; 1us; 17370us; 20us; 1731us; 7us; 16542us; 10us; 16586us; 14us; 16586us; 15us; 16586us; 16us; 16586us; 72us; 296us; 86us; 16586us; 192us; 383us; 1us; 16626us; 86us; 476us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 1us; 16626us; 86us; 476us; 0us; 16569us; 0us; 16570us; 1us; 16626us; 86us; 476us; 0us; 16571us; 0us; 16572us; 0us; 16573us; 1us; 32768us; 118us; 364us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16574us; 0us; 16575us; 5us; 16542us; 10us; 16586us; 21us; 377us; 72us; 296us; 140us; 16586us; 192us; 371us; 3us; 32768us; 10us; 965us; 140us; 369us; 192us; 952us; 0us; 16576us; 0us; 16577us; 4us; 16542us; 10us; 16586us; 72us; 296us; 140us; 372us; 192us; 383us; 0us; 16578us; 6us; 16542us; 10us; 16586us; 14us; 16586us; 15us; 16586us; 16us; 16586us; 72us; 296us; 192us; 383us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16579us; 0us; 16580us; 6us; 16542us; 10us; 16586us; 14us; 16586us; 15us; 16586us; 16us; 16586us; 72us; 296us; 192us; 383us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16581us; 0us; 16582us; 0us; 16583us; 0us; 16584us; 10us; 16542us; 10us; 16586us; 14us; 16586us; 15us; 16586us; 16us; 16586us; 18us; 16586us; 19us; 16586us; 72us; 296us; 86us; 16586us; 140us; 16586us; 192us; 383us; 0us; 16585us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 10us; 16542us; 10us; 16586us; 14us; 16586us; 15us; 16586us; 16us; 16586us; 18us; 16586us; 19us; 16586us; 72us; 296us; 86us; 16586us; 140us; 16586us; 192us; 383us; 0us; 16587us; 1us; 17378us; 109us; 1734us; 0us; 16588us; 1us; 17378us; 109us; 1734us; 2us; 32768us; 19us; 392us; 192us; 393us; 0us; 16589us; 0us; 16590us; 1us; 16591us; 129us; 395us; 1us; 17378us; 109us; 1734us; 0us; 16592us; 1us; 16542us; 72us; 296us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17198us; 77us; 1482us; 1us; 32768us; 69us; 401us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16593us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17198us; 77us; 1482us; 3us; 32768us; 25us; 390us; 69us; 406us; 86us; 388us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16594us; 0us; 16595us; 1us; 16596us; 46us; 410us; 0us; 16597us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 15us; 32768us; 13us; 539us; 29us; 687us; 31us; 683us; 39us; 696us; 45us; 329us; 46us; 331us; 48us; 409us; 49us; 332us; 50us; 333us; 52us; 479us; 108us; 446us; 110us; 538us; 117us; 438us; 135us; 681us; 159us; 677us; 47us; 32768us; 13us; 539us; 29us; 687us; 31us; 683us; 39us; 696us; 44us; 1656us; 45us; 329us; 46us; 331us; 48us; 409us; 49us; 332us; 50us; 333us; 52us; 479us; 56us; 610us; 66us; 1556us; 73us; 526us; 87us; 1584us; 90us; 1649us; 91us; 523us; 105us; 1597us; 108us; 446us; 110us; 538us; 112us; 1595us; 117us; 438us; 120us; 1596us; 135us; 681us; 145us; 1594us; 159us; 677us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16598us; 0us; 16599us; 2us; 17378us; 108us; 452us; 109us; 1734us; 1us; 17366us; 18us; 1729us; 0us; 16600us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 7us; 16624us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 86us; 473us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 0us; 16601us; 1us; 17378us; 109us; 1734us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 2us; 16676us; 32us; 1750us; 157us; 17397us; 1us; 32768us; 77us; 427us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 16480us; 25us; 195us; 86us; 193us; 1us; 17366us; 18us; 1729us; 0us; 16602us; 0us; 16603us; 1us; 17366us; 18us; 1729us; 0us; 16604us; 1us; 17366us; 18us; 1729us; 0us; 16605us; 1us; 17366us; 18us; 1729us; 0us; 16606us; 34us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16631us; 130us; 487us; 1us; 32768us; 69us; 441us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17366us; 18us; 1729us; 0us; 16607us; 1us; 16542us; 72us; 296us; 0us; 16608us; 1us; 17380us; 116us; 1735us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 1us; 32768us; 188us; 1655us; 1us; 32768us; 77us; 450us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16609us; 1us; 17380us; 116us; 1735us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 1us; 32768us; 188us; 1655us; 1us; 16611us; 77us; 460us; 1us; 32768us; 69us; 457us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 16480us; 25us; 195us; 86us; 193us; 0us; 16610us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16612us; 1us; 32768us; 76us; 463us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 0us; 16613us; 0us; 16614us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 0us; 16615us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 2us; 16542us; 21us; 493us; 72us; 296us; 3us; 32768us; 18us; 1723us; 19us; 1724us; 140us; 1725us; 0us; 16623us; 6us; 16542us; 18us; 16586us; 19us; 16586us; 21us; 377us; 72us; 296us; 140us; 16586us; 192us; 383us; 3us; 32768us; 18us; 1723us; 19us; 1724us; 140us; 1725us; 0us; 16625us; 36us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 44us; 1656us; 59us; 1780us; 66us; 1555us; 87us; 1584us; 90us; 1649us; 91us; 1542us; 93us; 1781us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 29us; 16634us; 33us; 1749us; 34us; 1748us; 71us; 17395us; 73us; 17395us; 91us; 17395us; 105us; 17395us; 120us; 17395us; 130us; 490us; 134us; 17395us; 145us; 17395us; 152us; 17395us; 162us; 17395us; 163us; 17395us; 164us; 17395us; 165us; 17395us; 166us; 17395us; 167us; 17395us; 168us; 17395us; 169us; 17395us; 170us; 17395us; 171us; 17395us; 172us; 17395us; 173us; 17395us; 174us; 17395us; 176us; 17395us; 177us; 17395us; 189us; 17395us; 190us; 17395us; 191us; 17395us; 0us; 16627us; 26us; 32768us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16634us; 130us; 490us; 0us; 16628us; 0us; 16629us; 0us; 16630us; 1us; 32768us; 188us; 1655us; 0us; 16632us; 0us; 16633us; 2us; 32768us; 151us; 492us; 188us; 1655us; 0us; 16635us; 0us; 16636us; 1us; 16542us; 72us; 296us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16637us; 0us; 16638us; 0us; 16639us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 14us; 16542us; 10us; 16641us; 13us; 16641us; 14us; 16641us; 15us; 16641us; 16us; 16641us; 18us; 16641us; 19us; 16641us; 20us; 16641us; 58us; 16641us; 59us; 16641us; 60us; 16641us; 72us; 296us; 110us; 16641us; 140us; 16641us; 0us; 16640us; 3us; 32768us; 46us; 512us; 49us; 513us; 192us; 509us; 4us; 17378us; 46us; 512us; 49us; 513us; 109us; 1734us; 192us; 509us; 3us; 17378us; 108us; 452us; 109us; 1734us; 192us; 508us; 1us; 17366us; 18us; 1729us; 0us; 16642us; 1us; 17366us; 18us; 1729us; 0us; 16643us; 0us; 16644us; 1us; 17378us; 109us; 1734us; 1us; 17366us; 18us; 1729us; 0us; 16645us; 0us; 16646us; 0us; 16647us; 3us; 16622us; 41us; 470us; 42us; 469us; 43us; 471us; 32us; 32768us; 44us; 1656us; 56us; 610us; 66us; 1556us; 73us; 526us; 87us; 1584us; 90us; 1649us; 91us; 523us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 17224us; 76us; 1658us; 152us; 517us; 1us; 32768us; 190us; 518us; 2us; 32768us; 10us; 965us; 192us; 952us; 0us; 16648us; 0us; 16649us; 0us; 16650us; 0us; 16651us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 532us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1598us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16652us; 2us; 16542us; 72us; 296us; 192us; 530us; 5us; 32768us; 10us; 965us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 192us; 952us; 0us; 16653us; 0us; 16654us; 3us; 32768us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 0us; 16655us; 29us; 32768us; 44us; 1656us; 66us; 1587us; 87us; 1584us; 90us; 1649us; 91us; 1588us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16791us; 87us; 534us; 0us; 16656us; 0us; 16657us; 0us; 16658us; 0us; 16659us; 0us; 16660us; 0us; 16661us; 5us; 32768us; 44us; 1656us; 90us; 1649us; 91us; 546us; 185us; 1652us; 188us; 1655us; 3us; 16662us; 32us; 1750us; 76us; 1658us; 157us; 17397us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 1us; 16663us; 76us; 1658us; 0us; 16664us; 0us; 16665us; 1us; 16542us; 72us; 296us; 4us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 96us; 551us; 0us; 16666us; 2us; 16679us; 84us; 569us; 96us; 551us; 1us; 16672us; 96us; 552us; 1us; 16542us; 72us; 296us; 2us; 16542us; 72us; 296us; 141us; 561us; 0us; 16667us; 0us; 16668us; 2us; 32768us; 90us; 1649us; 185us; 1652us; 0us; 16669us; 1us; 32768us; 157us; 558us; 1us; 16542us; 72us; 296us; 1us; 32768us; 158us; 560us; 0us; 16670us; 0us; 16671us; 1us; 32768us; 157us; 563us; 3us; 16542us; 72us; 296us; 84us; 16673us; 158us; 16673us; 1us; 16679us; 84us; 569us; 1us; 32768us; 158us; 566us; 0us; 16674us; 0us; 16675us; 27us; 16677us; 10us; 16828us; 15us; 16828us; 20us; 16828us; 25us; 16828us; 35us; 16828us; 37us; 16828us; 56us; 16828us; 57us; 16828us; 58us; 16828us; 59us; 16828us; 60us; 16828us; 64us; 16828us; 69us; 16828us; 77us; 16828us; 78us; 16828us; 83us; 16828us; 84us; 16828us; 86us; 16828us; 88us; 16828us; 92us; 16828us; 93us; 16828us; 94us; 16828us; 96us; 16828us; 97us; 16828us; 125us; 16828us; 130us; 16828us; 192us; 16828us; 4us; 32768us; 50us; 576us; 90us; 1649us; 91us; 591us; 185us; 1652us; 1us; 16680us; 129us; 573us; 1us; 17195us; 129us; 573us; 1us; 17197us; 129us; 573us; 4us; 32768us; 50us; 576us; 90us; 1649us; 91us; 591us; 185us; 1652us; 0us; 16681us; 0us; 16682us; 2us; 32768us; 90us; 1649us; 185us; 1652us; 1us; 32768us; 77us; 578us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16683us; 2us; 32768us; 77us; 583us; 79us; 581us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16684us; 5us; 32768us; 54us; 584us; 91us; 588us; 145us; 587us; 149us; 598us; 188us; 585us; 0us; 16685us; 3us; 16692us; 32us; 1607us; 54us; 586us; 157us; 1609us; 0us; 16686us; 0us; 16687us; 1us; 16542us; 72us; 296us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16688us; 2us; 32768us; 90us; 1649us; 185us; 1652us; 4us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 101us; 601us; 1us; 32768us; 77us; 594us; 1us; 32768us; 91us; 595us; 1us; 16542us; 72us; 296us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16689us; 2us; 32768us; 32us; 1607us; 157us; 1609us; 0us; 16690us; 0us; 16691us; 2us; 32768us; 90us; 1649us; 185us; 1652us; 0us; 16693us; 0us; 16694us; 1us; 16542us; 72us; 296us; 0us; 16695us; 1us; 32768us; 56us; 610us; 1us; 16542us; 72us; 296us; 0us; 16696us; 2us; 16697us; 20us; 1731us; 56us; 17370us; 0us; 16698us; 1us; 16700us; 56us; 610us; 1us; 16542us; 72us; 296us; 0us; 16699us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 3us; 32768us; 91us; 628us; 99us; 1666us; 188us; 1655us; 4us; 17370us; 20us; 1731us; 69us; 624us; 77us; 621us; 118us; 618us; 0us; 16701us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 73us; 526us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17370us; 20us; 1731us; 0us; 16702us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17370us; 20us; 1731us; 0us; 16703us; 18us; 32768us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17370us; 20us; 1731us; 0us; 16704us; 0us; 16705us; 29us; 32768us; 56us; 1701us; 61us; 1683us; 62us; 1681us; 69us; 1685us; 70us; 631us; 74us; 1689us; 78us; 629us; 82us; 1693us; 88us; 1690us; 89us; 1691us; 95us; 1684us; 101us; 1686us; 141us; 1696us; 142us; 1692us; 152us; 1698us; 155us; 1695us; 157us; 1687us; 158us; 1688us; 178us; 1694us; 179us; 1682us; 180us; 1679us; 181us; 1678us; 182us; 1680us; 183us; 1673us; 184us; 1677us; 185us; 1676us; 186us; 1675us; 187us; 1674us; 192us; 1664us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16706us; 1us; 32768us; 57us; 632us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16707us; 4us; 17303us; 20us; 1731us; 56us; 17370us; 69us; 636us; 118us; 640us; 0us; 16708us; 18us; 32768us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17370us; 20us; 1731us; 45us; 16709us; 10us; 16712us; 13us; 16712us; 14us; 16712us; 15us; 16712us; 16us; 16712us; 18us; 16712us; 19us; 16712us; 20us; 16712us; 29us; 16712us; 31us; 16712us; 35us; 16712us; 36us; 16712us; 37us; 16712us; 38us; 16712us; 39us; 16712us; 41us; 16712us; 42us; 16712us; 43us; 16712us; 45us; 16712us; 46us; 16712us; 48us; 16712us; 49us; 16712us; 50us; 16712us; 52us; 16712us; 67us; 16712us; 72us; 16712us; 83us; 16712us; 86us; 16712us; 87us; 16712us; 92us; 16712us; 93us; 16712us; 94us; 16712us; 100us; 16712us; 107us; 16712us; 108us; 16712us; 110us; 16712us; 117us; 16712us; 119us; 16712us; 129us; 16712us; 135us; 16712us; 140us; 16712us; 147us; 16712us; 148us; 16712us; 159us; 16712us; 192us; 16712us; 0us; 16710us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 73us; 526us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16711us; 1us; 16714us; 95us; 643us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16713us; 1us; 17303us; 77us; 646us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 16715us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 6us; 16716us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 0us; 16717us; 0us; 16718us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 6us; 16542us; 10us; 17371us; 58us; 17371us; 59us; 17371us; 60us; 17371us; 72us; 296us; 192us; 17371us; 0us; 16719us; 0us; 16720us; 1us; 17380us; 116us; 1735us; 0us; 16721us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 1us; 32768us; 188us; 1655us; 1us; 32768us; 77us; 660us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16722us; 1us; 16626us; 86us; 476us; 0us; 16723us; 0us; 16724us; 1us; 16542us; 72us; 296us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 1us; 32768us; 188us; 1655us; 1us; 16728us; 69us; 673us; 0us; 16725us; 1us; 16726us; 118us; 671us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 73us; 526us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16727us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 1us; 16729us; 76us; 1658us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 1us; 16730us; 76us; 1658us; 1us; 17374us; 102us; 1733us; 2us; 16542us; 72us; 296us; 192us; 731us; 0us; 16731us; 0us; 16732us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16733us; 1us; 17374us; 102us; 1733us; 2us; 16542us; 72us; 296us; 192us; 731us; 3us; 32768us; 10us; 965us; 18us; 694us; 192us; 952us; 0us; 16734us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 10us; 965us; 18us; 694us; 192us; 952us; 0us; 16735us; 0us; 16736us; 0us; 16737us; 0us; 16738us; 0us; 16739us; 0us; 16740us; 0us; 16741us; 1us; 16542us; 72us; 296us; 3us; 16616us; 41us; 470us; 42us; 469us; 43us; 471us; 1us; 32768us; 188us; 1655us; 2us; 17395us; 33us; 1749us; 34us; 1748us; 1us; 32768us; 91us; 701us; 4us; 16542us; 72us; 296us; 92us; 16745us; 93us; 16745us; 94us; 16745us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16742us; 1us; 16743us; 96us; 706us; 1us; 16744us; 96us; 708us; 1us; 16542us; 72us; 296us; 0us; 16746us; 1us; 16542us; 72us; 296us; 0us; 16747us; 3us; 32768us; 40us; 720us; 44us; 1656us; 188us; 1655us; 6us; 16748us; 33us; 1749us; 34us; 1748us; 70us; 17395us; 88us; 719us; 95us; 718us; 188us; 1655us; 0us; 16749us; 1us; 16750us; 76us; 1658us; 5us; 16755us; 33us; 1749us; 34us; 1748us; 70us; 17395us; 88us; 719us; 95us; 718us; 1us; 32768us; 70us; 716us; 1us; 32768us; 57us; 717us; 0us; 16751us; 0us; 16752us; 0us; 16753us; 1us; 32768us; 95us; 722us; 1us; 16756us; 95us; 722us; 0us; 16754us; 3us; 32768us; 40us; 721us; 44us; 1656us; 188us; 1655us; 1us; 16759us; 129us; 726us; 0us; 16757us; 2us; 16542us; 72us; 296us; 192us; 731us; 1us; 16759us; 129us; 726us; 0us; 16758us; 1us; 17378us; 109us; 1734us; 0us; 16760us; 0us; 16761us; 1us; 17380us; 116us; 1735us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17198us; 77us; 1482us; 3us; 32768us; 10us; 965us; 69us; 736us; 192us; 952us; 68us; 32768us; 21us; 740us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 738us; 0us; 16762us; 0us; 16763us; 0us; 16764us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16765us; 0us; 16766us; 0us; 16767us; 0us; 16770us; 1us; 16768us; 84us; 748us; 0us; 16769us; 2us; 32768us; 90us; 1649us; 185us; 1652us; 2us; 32768us; 69us; 750us; 129us; 752us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16771us; 2us; 32768us; 90us; 1649us; 185us; 1652us; 0us; 16772us; 0us; 16773us; 2us; 32768us; 54us; 758us; 77us; 756us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16774us; 0us; 16775us; 0us; 16776us; 0us; 16777us; 0us; 16778us; 0us; 16779us; 0us; 16780us; 0us; 16781us; 0us; 16782us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 0us; 16787us; 0us; 16788us; 1us; 16788us; 141us; 861us; 0us; 16789us; 0us; 16790us; 0us; 16791us; 0us; 16792us; 1us; 16795us; 182us; 778us; 1us; 32768us; 174us; 779us; 0us; 16793us; 1us; 32768us; 174us; 781us; 1us; 16796us; 182us; 782us; 1us; 32768us; 174us; 783us; 0us; 16794us; 0us; 16797us; 2us; 32768us; 61us; 780us; 174us; 777us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16798us; 0us; 16799us; 2us; 32768us; 91us; 785us; 174us; 784us; 0us; 16800us; 1us; 16801us; 32us; 792us; 1us; 32768us; 157us; 1626us; 0us; 16802us; 5us; 16803us; 56us; 823us; 78us; 824us; 88us; 831us; 96us; 829us; 130us; 821us; 0us; 16804us; 1us; 32768us; 188us; 1655us; 0us; 16805us; 1us; 16807us; 77us; 800us; 2us; 16808us; 77us; 800us; 96us; 803us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16806us; 3us; 32768us; 72us; 296us; 74us; 796us; 188us; 1655us; 3us; 32768us; 72us; 296us; 74us; 796us; 188us; 1655us; 0us; 16809us; 8us; 32768us; 10us; 965us; 72us; 296us; 74us; 796us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 188us; 1655us; 192us; 810us; 5us; 32768us; 10us; 965us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 192us; 952us; 0us; 16810us; 0us; 16811us; 0us; 16812us; 3us; 16893us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16813us; 0us; 16814us; 3us; 16816us; 78us; 824us; 88us; 831us; 96us; 829us; 1us; 16817us; 78us; 824us; 2us; 16821us; 78us; 824us; 88us; 831us; 2us; 16822us; 78us; 824us; 88us; 831us; 1us; 16823us; 78us; 824us; 1us; 16824us; 78us; 824us; 6us; 32768us; 56us; 823us; 69us; 1041us; 78us; 824us; 88us; 831us; 96us; 829us; 130us; 821us; 6us; 32768us; 56us; 823us; 69us; 1047us; 78us; 824us; 88us; 831us; 96us; 829us; 130us; 821us; 1us; 32768us; 188us; 1655us; 0us; 16815us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16818us; 96us; 828us; 0us; 16819us; 0us; 16820us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 0us; 16825us; 1us; 17371us; 188us; 1655us; 0us; 16826us; 1us; 32768us; 69us; 838us; 2us; 17342us; 69us; 838us; 76us; 1708us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 16827us; 56us; 902us; 77us; 905us; 78us; 908us; 88us; 913us; 96us; 911us; 130us; 900us; 29us; 16678us; 10us; 16847us; 15us; 16847us; 20us; 16847us; 25us; 16847us; 32us; 1750us; 35us; 16847us; 37us; 16847us; 56us; 16847us; 57us; 16847us; 58us; 16847us; 59us; 16847us; 60us; 16847us; 64us; 16847us; 69us; 16847us; 77us; 16847us; 78us; 16847us; 83us; 16847us; 84us; 16847us; 86us; 16847us; 88us; 16847us; 92us; 16847us; 93us; 16847us; 94us; 16847us; 96us; 16847us; 97us; 16847us; 125us; 16847us; 130us; 16847us; 157us; 17397us; 192us; 16847us; 36us; 32768us; 33us; 843us; 34us; 845us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 850us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16829us; 34us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 850us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16830us; 34us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 850us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16831us; 29us; 32768us; 44us; 1656us; 66us; 1587us; 87us; 1584us; 90us; 1649us; 91us; 1588us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16832us; 76us; 1601us; 0us; 16833us; 62us; 16857us; 10us; 965us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 56us; 1701us; 61us; 1683us; 62us; 1681us; 66us; 872us; 69us; 1685us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 874us; 81us; 847us; 82us; 1693us; 88us; 1690us; 89us; 1691us; 91us; 881us; 95us; 1684us; 99us; 1666us; 101us; 1686us; 105us; 879us; 120us; 878us; 141us; 1696us; 142us; 1692us; 145us; 880us; 152us; 1307us; 155us; 1695us; 157us; 1687us; 158us; 1688us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 178us; 1694us; 179us; 1682us; 180us; 1679us; 181us; 1678us; 182us; 1680us; 183us; 1673us; 184us; 1677us; 185us; 1676us; 186us; 1675us; 187us; 1674us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 885us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16834us; 0us; 16835us; 36us; 16839us; 33us; 858us; 34us; 856us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16836us; 34us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16837us; 34us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16838us; 0us; 16840us; 1us; 32768us; 164us; 862us; 0us; 16841us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 3us; 32768us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 0us; 16842us; 36us; 16874us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 57us; 868us; 0us; 16843us; 36us; 16874us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 64us; 871us; 0us; 16844us; 0us; 16845us; 1us; 32768us; 188us; 1655us; 1us; 17327us; 188us; 1655us; 0us; 16846us; 0us; 16847us; 0us; 16848us; 0us; 16849us; 0us; 16850us; 0us; 16851us; 62us; 16857us; 10us; 965us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 56us; 1701us; 61us; 1683us; 62us; 1681us; 66us; 872us; 69us; 1685us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 874us; 81us; 847us; 82us; 1693us; 88us; 1690us; 89us; 1691us; 91us; 881us; 95us; 1684us; 99us; 1666us; 101us; 1686us; 105us; 879us; 120us; 878us; 141us; 1696us; 142us; 1692us; 145us; 880us; 152us; 1307us; 155us; 1695us; 157us; 1687us; 158us; 1688us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 178us; 1694us; 179us; 1682us; 180us; 1679us; 181us; 1678us; 182us; 1680us; 183us; 1673us; 184us; 1677us; 185us; 1676us; 186us; 1675us; 187us; 1674us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 885us; 5us; 32768us; 10us; 965us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 192us; 952us; 0us; 16852us; 0us; 16853us; 3us; 16893us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 2us; 16854us; 32us; 17307us; 157us; 17307us; 0us; 16855us; 6us; 16856us; 56us; 902us; 77us; 905us; 78us; 908us; 88us; 913us; 96us; 911us; 130us; 900us; 4us; 16859us; 77us; 905us; 78us; 908us; 88us; 913us; 96us; 911us; 3us; 16863us; 77us; 905us; 78us; 908us; 88us; 913us; 2us; 16864us; 77us; 905us; 78us; 908us; 3us; 16866us; 77us; 905us; 78us; 908us; 88us; 913us; 3us; 16867us; 77us; 905us; 78us; 908us; 88us; 913us; 2us; 16868us; 77us; 905us; 78us; 908us; 2us; 16869us; 77us; 905us; 78us; 908us; 6us; 16873us; 56us; 902us; 77us; 905us; 78us; 908us; 88us; 913us; 96us; 911us; 130us; 900us; 8us; 17372us; 20us; 1719us; 56us; 902us; 77us; 905us; 78us; 908us; 83us; 1720us; 88us; 913us; 96us; 911us; 130us; 900us; 15us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 56us; 902us; 59us; 1780us; 69us; 1369us; 77us; 905us; 78us; 908us; 88us; 913us; 93us; 1781us; 96us; 911us; 125us; 1365us; 130us; 900us; 192us; 957us; 7us; 17010us; 56us; 902us; 77us; 905us; 78us; 908us; 84us; 1174us; 88us; 913us; 96us; 911us; 130us; 900us; 1us; 32768us; 188us; 1655us; 0us; 16858us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16860us; 96us; 910us; 1us; 16861us; 88us; 912us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16862us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16865us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16870us; 2us; 17372us; 20us; 1719us; 83us; 1720us; 0us; 16871us; 2us; 17371us; 44us; 1656us; 188us; 1655us; 0us; 16872us; 2us; 32768us; 69us; 920us; 76us; 1658us; 36us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16875us; 36us; 16874us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16876us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 16877us; 0us; 16878us; 0us; 16879us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 0us; 16880us; 25us; 16881us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 1us; 16883us; 17us; 934us; 0us; 16882us; 1us; 16885us; 77us; 936us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16884us; 1us; 32768us; 10us; 939us; 0us; 16886us; 29us; 16889us; 20us; 1719us; 27us; 947us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 83us; 1720us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 103us; 945us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 30us; 16889us; 20us; 1719us; 27us; 947us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 83us; 1720us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 17074us; 101us; 1114us; 103us; 945us; 126us; 1111us; 141us; 1287us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 30us; 16889us; 20us; 1719us; 27us; 947us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 83us; 1720us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 103us; 945us; 126us; 1111us; 141us; 1360us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 66us; 16888us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16887us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16890us; 1us; 32768us; 21us; 948us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 0us; 16891us; 69us; 16892us; 20us; 973us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 972us; 0us; 16893us; 2us; 16893us; 18us; 1739us; 136us; 1738us; 2us; 16893us; 18us; 1739us; 136us; 1738us; 2us; 16893us; 18us; 1739us; 136us; 1738us; 2us; 16893us; 29us; 1737us; 135us; 1736us; 2us; 16893us; 18us; 1739us; 136us; 1738us; 1us; 16893us; 57us; 1263us; 1us; 16893us; 57us; 1282us; 1us; 16893us; 153us; 1311us; 1us; 16893us; 64us; 1317us; 3us; 16893us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 3us; 16893us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 3us; 16893us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 0us; 16894us; 1us; 32768us; 125us; 967us; 67us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 969us; 0us; 16895us; 0us; 16896us; 69us; 32768us; 20us; 973us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 972us; 0us; 16897us; 0us; 16898us; 68us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 975us; 0us; 16899us; 0us; 16900us; 0us; 16901us; 0us; 16902us; 0us; 16903us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 4us; 32768us; 10us; 965us; 25us; 1157us; 86us; 1155us; 192us; 952us; 0us; 16904us; 0us; 16905us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 5us; 32768us; 10us; 965us; 25us; 1157us; 86us; 1155us; 127us; 987us; 192us; 952us; 0us; 16906us; 0us; 16907us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16908us; 68us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 29us; 32768us; 10us; 965us; 27us; 1180us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 103us; 1179us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 192us; 952us; 0us; 16909us; 0us; 16910us; 0us; 16911us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16912us; 58us; 16914us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 156us; 1040us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16913us; 67us; 32768us; 21us; 929us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16915us; 59us; 16917us; 21us; 929us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 156us; 1040us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16916us; 68us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 953us; 29us; 32768us; 10us; 965us; 29us; 1737us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 135us; 1736us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 192us; 952us; 68us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1008us; 4us; 32768us; 10us; 965us; 18us; 1739us; 136us; 1738us; 192us; 952us; 0us; 16918us; 0us; 16919us; 2us; 32768us; 18us; 1739us; 136us; 1738us; 0us; 16920us; 0us; 16921us; 0us; 16922us; 0us; 16923us; 43us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 59us; 1780us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 93us; 1781us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 956us; 10us; 17370us; 10us; 965us; 15us; 1782us; 20us; 1731us; 29us; 1737us; 35us; 1778us; 37us; 1779us; 59us; 1780us; 93us; 1781us; 135us; 1736us; 192us; 952us; 74us; 32768us; 10us; 965us; 15us; 1782us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1778us; 37us; 1779us; 39us; 696us; 44us; 1257us; 59us; 1780us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 93us; 1781us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 954us; 9us; 32768us; 10us; 965us; 15us; 1782us; 18us; 1739us; 35us; 1778us; 37us; 1779us; 59us; 1780us; 93us; 1781us; 136us; 1738us; 192us; 952us; 0us; 16924us; 0us; 16925us; 0us; 16926us; 0us; 16927us; 0us; 16928us; 4us; 32768us; 10us; 965us; 29us; 1737us; 135us; 1736us; 192us; 952us; 69us; 32768us; 10us; 965us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 955us; 4us; 32768us; 10us; 965us; 18us; 1739us; 136us; 1738us; 192us; 952us; 0us; 16929us; 0us; 16930us; 0us; 16931us; 0us; 16932us; 0us; 16933us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 32768us; 18us; 1739us; 136us; 1738us; 0us; 16934us; 0us; 16935us; 0us; 16936us; 0us; 16937us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 25us; 16938us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 25us; 16939us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 125us; 1043us; 1us; 17370us; 20us; 1731us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16940us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 10us; 965us; 18us; 694us; 192us; 952us; 1us; 17370us; 20us; 1731us; 68us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1052us; 0us; 16941us; 0us; 16942us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 125us; 1055us; 1us; 17370us; 20us; 1731us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16943us; 67us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 10us; 965us; 18us; 694us; 192us; 952us; 0us; 16944us; 1us; 32768us; 97us; 1363us; 0us; 16945us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16946us; 25us; 16950us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 20us; 16953us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 20us; 16954us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 9us; 16955us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 20us; 16956us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 18us; 16957us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 18us; 16958us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 9us; 16959us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 9us; 16960us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 9us; 16961us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 9us; 16962us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 9us; 16963us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 9us; 16964us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 9us; 16965us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 185us; 1123us; 187us; 1130us; 1us; 16966us; 187us; 1130us; 8us; 16967us; 61us; 1127us; 78us; 1125us; 81us; 1100us; 95us; 1128us; 155us; 1124us; 180us; 1126us; 182us; 1129us; 187us; 1130us; 4us; 16968us; 95us; 1128us; 155us; 1124us; 182us; 1129us; 187us; 1130us; 4us; 16969us; 95us; 1128us; 155us; 1124us; 182us; 1129us; 187us; 1130us; 1us; 16970us; 187us; 1130us; 1us; 16971us; 187us; 1130us; 1us; 16972us; 187us; 1130us; 25us; 17009us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 25us; 17013us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 25us; 17017us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 29us; 32768us; 10us; 965us; 27us; 1180us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 103us; 1179us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 192us; 952us; 23us; 17022us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 23us; 17025us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 25us; 17074us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 101us; 1114us; 126us; 1111us; 141us; 1287us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 24us; 17070us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 24us; 17072us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 26us; 17128us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 141us; 1360us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 26us; 17124us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 141us; 1361us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 25us; 17125us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 27us; 32768us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 104us; 1453us; 126us; 1111us; 137us; 1454us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 25us; 17132us; 61us; 1127us; 62us; 1120us; 69us; 1118us; 78us; 1125us; 79us; 1102us; 80us; 1104us; 81us; 1100us; 82us; 1106us; 88us; 1115us; 89us; 1116us; 95us; 1128us; 96us; 1196us; 101us; 1114us; 126us; 1111us; 142us; 1112us; 155us; 1124us; 157us; 1121us; 158us; 1122us; 180us; 1126us; 181us; 1117us; 182us; 1129us; 184us; 1113us; 185us; 1123us; 186us; 1119us; 187us; 1130us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16947us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16948us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16949us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 16993us; 68us; 1108us; 67us; 32768us; 21us; 929us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16951us; 1us; 16952us; 96us; 1194us; 67us; 32768us; 15us; 1131us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1132us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1133us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1134us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1135us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1136us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1137us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1138us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1139us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1140us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1141us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1142us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1143us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1144us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1145us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1146us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1147us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1148us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1149us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 67us; 32768us; 15us; 1150us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 16973us; 0us; 16974us; 0us; 16975us; 0us; 16976us; 0us; 16977us; 0us; 16978us; 0us; 16979us; 0us; 16980us; 0us; 16981us; 0us; 16982us; 0us; 16983us; 0us; 16984us; 0us; 16985us; 0us; 16986us; 0us; 16987us; 0us; 16988us; 0us; 16989us; 0us; 16990us; 0us; 16991us; 0us; 16992us; 0us; 16994us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 16995us; 38us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 56us; 1162us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1165us; 0us; 16996us; 38us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 56us; 1162us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1165us; 3us; 32768us; 10us; 965us; 19us; 1159us; 192us; 952us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 37us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1164us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 0us; 17003us; 2us; 32768us; 97us; 1175us; 192us; 1173us; 2us; 17004us; 56us; 1169us; 192us; 1172us; 37us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1171us; 0us; 17005us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17011us; 3us; 17016us; 26us; 1186us; 138us; 1185us; 139us; 1191us; 0us; 17012us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 21us; 1181us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 17014us; 0us; 17015us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 21us; 1187us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 5us; 32768us; 10us; 965us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 192us; 952us; 0us; 17018us; 0us; 17019us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17020us; 0us; 17021us; 73us; 32768us; 10us; 965us; 15us; 1782us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1778us; 37us; 1779us; 39us; 696us; 44us; 1257us; 59us; 1780us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 93us; 1781us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 0us; 17023us; 73us; 32768us; 10us; 965us; 15us; 1782us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1778us; 37us; 1779us; 39us; 696us; 44us; 1257us; 59us; 1780us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 93us; 1781us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 0us; 17024us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 42us; 17321us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17026us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 42us; 17317us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17027us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 42us; 17320us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17028us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 42us; 17333us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17029us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 42us; 17328us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17030us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 42us; 17329us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17031us; 30us; 32768us; 44us; 1656us; 66us; 1555us; 87us; 1584us; 90us; 1649us; 91us; 1542us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1225us; 30us; 32768us; 44us; 1656us; 66us; 1555us; 87us; 1584us; 90us; 1649us; 91us; 1542us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1225us; 2us; 17395us; 33us; 1749us; 34us; 1748us; 33us; 17168us; 13us; 17171us; 20us; 17171us; 25us; 17171us; 33us; 1749us; 34us; 1748us; 71us; 17395us; 73us; 17395us; 86us; 17171us; 91us; 17395us; 105us; 17395us; 110us; 17171us; 120us; 17395us; 134us; 17395us; 145us; 17395us; 152us; 17395us; 162us; 17395us; 163us; 17395us; 164us; 17395us; 165us; 17395us; 166us; 17395us; 167us; 17395us; 168us; 17395us; 169us; 17395us; 170us; 17395us; 171us; 17395us; 172us; 17395us; 173us; 17395us; 174us; 17395us; 176us; 17395us; 177us; 17395us; 189us; 17395us; 190us; 17395us; 191us; 17395us; 27us; 32768us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1224us; 27us; 32768us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1224us; 0us; 17032us; 5us; 17032us; 13us; 17170us; 25us; 17170us; 86us; 17170us; 110us; 17170us; 130us; 490us; 0us; 17033us; 0us; 17034us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17035us; 42us; 32768us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 117us; 1216us; 120us; 1294us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17036us; 34us; 17037us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1234us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 37us; 17037us; 25us; 1406us; 44us; 1257us; 69us; 1393us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 86us; 1402us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1234us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17038us; 5us; 17039us; 32us; 1243us; 33us; 1242us; 34us; 1241us; 74us; 1255us; 76us; 1247us; 33us; 32768us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 5us; 17040us; 32us; 1243us; 33us; 1242us; 34us; 1241us; 74us; 1255us; 76us; 1247us; 5us; 17041us; 32us; 1243us; 33us; 1242us; 34us; 1241us; 74us; 1255us; 76us; 1247us; 2us; 17042us; 32us; 1243us; 33us; 1242us; 1us; 17043us; 32us; 1243us; 5us; 17045us; 32us; 1243us; 33us; 1242us; 34us; 1241us; 74us; 1255us; 76us; 1247us; 5us; 17261us; 32us; 1243us; 33us; 1242us; 34us; 1241us; 74us; 1255us; 76us; 1247us; 33us; 32768us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 33us; 32768us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 157us; 1609us; 0us; 17044us; 33us; 32768us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 33us; 17311us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 17058us; 10us; 965us; 70us; 1275us; 91us; 1268us; 99us; 1666us; 188us; 1655us; 192us; 952us; 0us; 17046us; 1us; 32768us; 76us; 1250us; 6us; 17058us; 10us; 965us; 70us; 1275us; 91us; 1268us; 99us; 1666us; 188us; 1655us; 192us; 952us; 0us; 17047us; 3us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 3us; 17327us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 0us; 17048us; 2us; 32768us; 91us; 1152us; 188us; 1151us; 0us; 17049us; 0us; 17050us; 0us; 17051us; 68us; 17121us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 958us; 3us; 32768us; 10us; 965us; 57us; 1261us; 192us; 952us; 0us; 17052us; 0us; 17053us; 0us; 17054us; 0us; 17055us; 0us; 17056us; 0us; 17057us; 0us; 17059us; 85us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 56us; 1701us; 61us; 1199us; 62us; 1681us; 69us; 1685us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1253us; 78us; 1269us; 82us; 1693us; 85us; 1002us; 88us; 1211us; 89us; 1214us; 91us; 1321us; 95us; 1684us; 97us; 1063us; 99us; 1666us; 101us; 1686us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 141us; 1696us; 142us; 1692us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1307us; 155us; 1208us; 156us; 1040us; 157us; 1687us; 158us; 1688us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 178us; 1694us; 179us; 1205us; 180us; 1202us; 181us; 1678us; 182us; 1680us; 183us; 1246us; 184us; 1677us; 185us; 1676us; 186us; 1675us; 187us; 1674us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1664us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 1us; 32768us; 76us; 1271us; 1us; 32768us; 174us; 1272us; 0us; 17060us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17061us; 70us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 95us; 1289us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 141us; 1288us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 959us; 3us; 32768us; 10us; 965us; 57us; 1277us; 192us; 952us; 0us; 17062us; 0us; 17063us; 3us; 32768us; 10us; 965us; 57us; 1280us; 192us; 952us; 0us; 17064us; 0us; 17065us; 0us; 17066us; 0us; 17067us; 1us; 17069us; 96us; 1285us; 68us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 95us; 1289us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 141us; 1288us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17068us; 66us; 17071us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17073us; 0us; 17075us; 0us; 17076us; 0us; 17077us; 0us; 17078us; 0us; 17079us; 0us; 17080us; 0us; 17081us; 0us; 17082us; 0us; 17083us; 68us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 140us; 1305us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1303us; 3us; 32768us; 10us; 965us; 140us; 1301us; 192us; 952us; 0us; 17084us; 0us; 17085us; 1us; 32768us; 140us; 1304us; 0us; 17086us; 0us; 17087us; 68us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 960us; 69us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 153us; 1699us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 960us; 3us; 32768us; 10us; 965us; 153us; 1309us; 192us; 952us; 0us; 17088us; 0us; 17089us; 0us; 17090us; 0us; 17091us; 68us; 17121us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 961us; 3us; 32768us; 10us; 965us; 64us; 1315us; 192us; 952us; 0us; 17092us; 0us; 17093us; 0us; 17094us; 0us; 17095us; 77us; 32768us; 10us; 965us; 15us; 1331us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1328us; 37us; 1329us; 39us; 696us; 44us; 1257us; 59us; 1330us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 87us; 1371us; 88us; 1210us; 89us; 1213us; 91us; 1320us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 962us; 93us; 32768us; 10us; 965us; 15us; 1331us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1328us; 37us; 1329us; 39us; 696us; 44us; 1257us; 56us; 1701us; 59us; 1330us; 61us; 1199us; 62us; 1681us; 69us; 1685us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1253us; 82us; 1693us; 85us; 1002us; 87us; 1371us; 88us; 1211us; 89us; 1214us; 91us; 1320us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 95us; 1684us; 97us; 1063us; 99us; 1666us; 101us; 1686us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 141us; 1696us; 142us; 1692us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1307us; 155us; 1208us; 156us; 1040us; 157us; 1687us; 158us; 1688us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 178us; 1694us; 179us; 1205us; 180us; 1202us; 181us; 1678us; 182us; 1680us; 183us; 1246us; 184us; 1677us; 185us; 1653us; 186us; 1675us; 187us; 1674us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 963us; 93us; 32768us; 10us; 965us; 15us; 1331us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1328us; 37us; 1329us; 39us; 696us; 44us; 1257us; 56us; 1701us; 59us; 1330us; 61us; 1199us; 62us; 1681us; 69us; 1685us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1253us; 82us; 1693us; 85us; 1002us; 87us; 1371us; 88us; 1211us; 89us; 1214us; 91us; 1320us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 95us; 1684us; 97us; 1063us; 99us; 1666us; 101us; 1686us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 141us; 1696us; 142us; 1692us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1307us; 155us; 1208us; 156us; 1040us; 157us; 1687us; 158us; 1688us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 178us; 1694us; 179us; 1205us; 180us; 1202us; 181us; 1678us; 182us; 1680us; 183us; 1246us; 184us; 1677us; 185us; 1653us; 186us; 1675us; 187us; 1674us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 963us; 0us; 17096us; 9us; 32768us; 10us; 965us; 15us; 1776us; 35us; 1773us; 37us; 1774us; 59us; 1775us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 192us; 952us; 0us; 17097us; 0us; 17098us; 0us; 17099us; 0us; 17099us; 0us; 17100us; 0us; 17101us; 0us; 17102us; 0us; 17103us; 0us; 17104us; 1us; 32768us; 77us; 1334us; 1us; 32768us; 91us; 1335us; 1us; 16542us; 72us; 296us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17108us; 4us; 17108us; 92us; 17111us; 93us; 17111us; 94us; 17111us; 101us; 17111us; 4us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 101us; 1345us; 0us; 17109us; 1us; 32768us; 185us; 1652us; 0us; 17110us; 73us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 52us; 1387us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 61us; 1198us; 66us; 1397us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1217us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 964us; 5us; 32768us; 10us; 965us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 192us; 952us; 0us; 17112us; 0us; 17113us; 0us; 17114us; 0us; 17115us; 0us; 17116us; 0us; 17117us; 0us; 17118us; 0us; 17119us; 0us; 17120us; 0us; 17122us; 0us; 17123us; 68us; 32768us; 10us; 965us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17126us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17127us; 73us; 32768us; 10us; 965us; 15us; 1782us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1778us; 37us; 1779us; 39us; 696us; 44us; 1257us; 59us; 1780us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 93us; 1781us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 0us; 17129us; 0us; 17130us; 0us; 17131us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 66us; 32768us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 32768us; 189us; 1747us; 190us; 1746us; 3us; 17138us; 35us; 1751us; 36us; 1754us; 107us; 1755us; 0us; 17135us; 35us; 17140us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 77us; 1383us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1234us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 87us; 1376us; 0us; 17133us; 0us; 17134us; 0us; 17137us; 1us; 32768us; 91us; 1380us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17139us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1385us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17141us; 34us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1598us; 0us; 17142us; 29us; 32768us; 44us; 1656us; 66us; 1555us; 87us; 1584us; 90us; 1649us; 91us; 1542us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 2us; 17395us; 33us; 1749us; 34us; 1748us; 26us; 17136us; 71us; 1313us; 73us; 1347us; 91us; 1319us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17160us; 2us; 17152us; 20us; 1415us; 83us; 1416us; 0us; 17143us; 67us; 32768us; 21us; 929us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17160us; 2us; 17152us; 20us; 1415us; 83us; 1416us; 0us; 17144us; 1us; 17145us; 69us; 1398us; 67us; 17146us; 21us; 929us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17160us; 2us; 17152us; 20us; 1415us; 83us; 1416us; 0us; 17147us; 3us; 32768us; 44us; 1656us; 66us; 1420us; 188us; 1655us; 0us; 17160us; 2us; 17152us; 20us; 1415us; 83us; 1416us; 0us; 17148us; 5us; 17152us; 20us; 1415us; 44us; 1656us; 66us; 1420us; 83us; 1416us; 188us; 1655us; 1us; 32768us; 19us; 1408us; 0us; 17149us; 0us; 17160us; 2us; 17152us; 20us; 1415us; 83us; 1416us; 1us; 32768us; 19us; 1412us; 0us; 17150us; 0us; 17151us; 3us; 17151us; 44us; 1656us; 66us; 1420us; 188us; 1655us; 1us; 17153us; 83us; 1418us; 1us; 17154us; 20us; 1417us; 0us; 17155us; 0us; 17156us; 1us; 17157us; 76us; 1658us; 0us; 17158us; 0us; 17159us; 8us; 17164us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 59us; 1780us; 69us; 1423us; 93us; 1781us; 192us; 952us; 74us; 17162us; 10us; 965us; 15us; 1782us; 21us; 929us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 35us; 1778us; 37us; 1779us; 39us; 696us; 44us; 1257us; 59us; 1780us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 93us; 1781us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 0us; 17161us; 0us; 17163us; 0us; 17165us; 3us; 17370us; 20us; 1731us; 25us; 1437us; 86us; 1435us; 1us; 17370us; 20us; 1731us; 3us; 17178us; 13us; 539us; 110us; 538us; 192us; 1446us; 0us; 17166us; 2us; 32768us; 13us; 539us; 110us; 538us; 0us; 17167us; 0us; 17169us; 0us; 17172us; 3us; 16542us; 21us; 493us; 72us; 296us; 192us; 731us; 0us; 17174us; 2us; 16542us; 72us; 296us; 192us; 731us; 1us; 32768us; 19us; 1439us; 0us; 17175us; 3us; 17364us; 18us; 1726us; 19us; 1727us; 140us; 1728us; 0us; 17176us; 3us; 17178us; 13us; 539us; 110us; 538us; 192us; 1446us; 0us; 17177us; 3us; 17178us; 13us; 539us; 110us; 538us; 192us; 1446us; 0us; 17179us; 3us; 17178us; 13us; 539us; 110us; 538us; 192us; 1446us; 0us; 17180us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 8us; 17173us; 25us; 1437us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 86us; 1435us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 3us; 17364us; 18us; 1726us; 19us; 1727us; 140us; 1728us; 1us; 17370us; 20us; 1731us; 0us; 17181us; 0us; 17182us; 0us; 17183us; 34us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 32768us; 97us; 1457us; 68us; 32768us; 21us; 924us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1459us; 0us; 17184us; 0us; 17185us; 35us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 66us; 872us; 70us; 866us; 71us; 869us; 73us; 863us; 74us; 873us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1471us; 2us; 32768us; 97us; 1462us; 192us; 1469us; 69us; 32768us; 10us; 965us; 17us; 1466us; 23us; 1460us; 24us; 1475us; 28us; 1058us; 29us; 687us; 30us; 1046us; 31us; 683us; 39us; 696us; 44us; 1257us; 61us; 1198us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 85us; 1002us; 88us; 1210us; 89us; 1213us; 91us; 1321us; 97us; 1063us; 99us; 1666us; 105us; 1295us; 106us; 983us; 113us; 994us; 114us; 998us; 115us; 979us; 117us; 1216us; 120us; 1294us; 121us; 1013us; 122us; 1455us; 123us; 1473us; 124us; 989us; 128us; 1053us; 131us; 996us; 132us; 1000us; 134us; 1299us; 143us; 1226us; 144us; 1228us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 155us; 1207us; 156us; 1040us; 159us; 677us; 160us; 1036us; 161us; 1038us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 179us; 1204us; 180us; 1201us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 3us; 32768us; 10us; 965us; 19us; 1464us; 192us; 952us; 0us; 17186us; 0us; 17187us; 1us; 32768us; 19us; 1467us; 0us; 17188us; 0us; 17189us; 1us; 32768us; 19us; 1470us; 0us; 17190us; 1us; 32768us; 19us; 1472us; 0us; 17191us; 38us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 56us; 1162us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1165us; 0us; 17192us; 38us; 32768us; 41us; 470us; 42us; 469us; 43us; 471us; 44us; 462us; 56us; 1162us; 66us; 872us; 70us; 866us; 71us; 869us; 72us; 296us; 73us; 863us; 74us; 873us; 81us; 847us; 91us; 881us; 99us; 1666us; 105us; 879us; 120us; 878us; 145us; 880us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 772us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1165us; 1us; 32768us; 19us; 1477us; 0us; 17193us; 1us; 17194us; 84us; 1479us; 4us; 32768us; 50us; 576us; 90us; 1649us; 91us; 591us; 185us; 1652us; 1us; 17196us; 84us; 1481us; 4us; 32768us; 50us; 576us; 90us; 1649us; 91us; 591us; 185us; 1652us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17199us; 1us; 17201us; 97us; 1485us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17200us; 1us; 17203us; 95us; 1488us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17202us; 1us; 17205us; 95us; 1491us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 72us; 296us; 74us; 1504us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17204us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 74us; 1497us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 7us; 17208us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 77us; 1495us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 17206us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 1us; 32768us; 188us; 1655us; 1us; 32768us; 77us; 1499us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 17207us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 7us; 17211us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 77us; 1502us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 17209us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 1us; 32768us; 188us; 1655us; 1us; 32768us; 77us; 1506us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 6us; 17210us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 1us; 17213us; 97us; 1509us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17212us; 1us; 32768us; 10us; 1512us; 0us; 17214us; 8us; 17218us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 95us; 1514us; 182us; 1518us; 185us; 1652us; 188us; 1655us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17215us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17216us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17217us; 8us; 17221us; 34us; 1536us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 95us; 1521us; 182us; 1523us; 185us; 1652us; 188us; 1655us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17219us; 29us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17220us; 1us; 17224us; 76us; 1658us; 0us; 17225us; 1us; 17225us; 79us; 1551us; 1us; 17225us; 79us; 1552us; 1us; 17227us; 185us; 1531us; 4us; 17227us; 32us; 1607us; 76us; 1604us; 157us; 1609us; 185us; 1531us; 3us; 32768us; 61us; 789us; 91us; 785us; 174us; 784us; 0us; 17226us; 6us; 32768us; 34us; 1537us; 44us; 1656us; 70us; 1561us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 0us; 17228us; 62us; 17228us; 10us; 17245us; 13us; 17245us; 14us; 17245us; 15us; 17245us; 16us; 17245us; 18us; 17245us; 19us; 17245us; 20us; 17245us; 25us; 17245us; 29us; 17245us; 31us; 17245us; 33us; 17245us; 39us; 17245us; 41us; 17245us; 42us; 17245us; 43us; 17245us; 45us; 17245us; 46us; 17245us; 48us; 17245us; 49us; 17245us; 50us; 17245us; 52us; 17245us; 58us; 17245us; 59us; 17245us; 60us; 17245us; 71us; 17245us; 72us; 17245us; 73us; 17245us; 83us; 17245us; 86us; 17245us; 91us; 17245us; 105us; 17245us; 108us; 17245us; 110us; 17245us; 117us; 17245us; 120us; 17245us; 130us; 17245us; 134us; 17245us; 135us; 17245us; 140us; 17245us; 145us; 17245us; 152us; 17245us; 159us; 17245us; 162us; 17245us; 163us; 17245us; 164us; 17245us; 165us; 17245us; 166us; 17245us; 167us; 17245us; 168us; 17245us; 169us; 17245us; 170us; 17245us; 171us; 17245us; 172us; 17245us; 173us; 17245us; 174us; 17245us; 176us; 17245us; 177us; 17245us; 189us; 17245us; 190us; 17245us; 191us; 17245us; 192us; 17245us; 1us; 32768us; 70us; 1561us; 1us; 32768us; 70us; 1561us; 0us; 17229us; 62us; 17229us; 10us; 17246us; 13us; 17246us; 14us; 17246us; 15us; 17246us; 16us; 17246us; 18us; 17246us; 19us; 17246us; 20us; 17246us; 25us; 17246us; 29us; 17246us; 31us; 17246us; 33us; 17246us; 39us; 17246us; 41us; 17246us; 42us; 17246us; 43us; 17246us; 45us; 17246us; 46us; 17246us; 48us; 17246us; 49us; 17246us; 50us; 17246us; 52us; 17246us; 58us; 17246us; 59us; 17246us; 60us; 17246us; 71us; 17246us; 72us; 17246us; 73us; 17246us; 83us; 17246us; 86us; 17246us; 91us; 17246us; 105us; 17246us; 108us; 17246us; 110us; 17246us; 117us; 17246us; 120us; 17246us; 130us; 17246us; 134us; 17246us; 135us; 17246us; 140us; 17246us; 145us; 17246us; 152us; 17246us; 159us; 17246us; 162us; 17246us; 163us; 17246us; 164us; 17246us; 165us; 17246us; 166us; 17246us; 167us; 17246us; 168us; 17246us; 169us; 17246us; 170us; 17246us; 171us; 17246us; 172us; 17246us; 173us; 17246us; 174us; 17246us; 176us; 17246us; 177us; 17246us; 189us; 17246us; 190us; 17246us; 191us; 17246us; 192us; 17246us; 0us; 17230us; 62us; 17230us; 10us; 17247us; 13us; 17247us; 14us; 17247us; 15us; 17247us; 16us; 17247us; 18us; 17247us; 19us; 17247us; 20us; 17247us; 25us; 17247us; 29us; 17247us; 31us; 17247us; 33us; 17247us; 39us; 17247us; 41us; 17247us; 42us; 17247us; 43us; 17247us; 45us; 17247us; 46us; 17247us; 48us; 17247us; 49us; 17247us; 50us; 17247us; 52us; 17247us; 58us; 17247us; 59us; 17247us; 60us; 17247us; 71us; 17247us; 72us; 17247us; 73us; 17247us; 83us; 17247us; 86us; 17247us; 91us; 17247us; 105us; 17247us; 108us; 17247us; 110us; 17247us; 117us; 17247us; 120us; 17247us; 130us; 17247us; 134us; 17247us; 135us; 17247us; 140us; 17247us; 145us; 17247us; 152us; 17247us; 159us; 17247us; 162us; 17247us; 163us; 17247us; 164us; 17247us; 165us; 17247us; 166us; 17247us; 167us; 17247us; 168us; 17247us; 169us; 17247us; 170us; 17247us; 171us; 17247us; 172us; 17247us; 173us; 17247us; 174us; 17247us; 176us; 17247us; 177us; 17247us; 189us; 17247us; 190us; 17247us; 191us; 17247us; 192us; 17247us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1598us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1598us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 4us; 32768us; 44us; 1656us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 4us; 32768us; 44us; 1656us; 90us; 1649us; 185us; 1652us; 188us; 1655us; 0us; 17231us; 62us; 17231us; 10us; 17248us; 13us; 17248us; 14us; 17248us; 15us; 17248us; 16us; 17248us; 18us; 17248us; 19us; 17248us; 20us; 17248us; 25us; 17248us; 29us; 17248us; 31us; 17248us; 33us; 17248us; 39us; 17248us; 41us; 17248us; 42us; 17248us; 43us; 17248us; 45us; 17248us; 46us; 17248us; 48us; 17248us; 49us; 17248us; 50us; 17248us; 52us; 17248us; 58us; 17248us; 59us; 17248us; 60us; 17248us; 71us; 17248us; 72us; 17248us; 73us; 17248us; 83us; 17248us; 86us; 17248us; 91us; 17248us; 105us; 17248us; 108us; 17248us; 110us; 17248us; 117us; 17248us; 120us; 17248us; 130us; 17248us; 134us; 17248us; 135us; 17248us; 140us; 17248us; 145us; 17248us; 152us; 17248us; 159us; 17248us; 162us; 17248us; 163us; 17248us; 164us; 17248us; 165us; 17248us; 166us; 17248us; 167us; 17248us; 168us; 17248us; 169us; 17248us; 170us; 17248us; 171us; 17248us; 172us; 17248us; 173us; 17248us; 174us; 17248us; 176us; 17248us; 177us; 17248us; 189us; 17248us; 190us; 17248us; 191us; 17248us; 192us; 17248us; 0us; 17232us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17233us; 62us; 17233us; 10us; 17250us; 13us; 17250us; 14us; 17250us; 15us; 17250us; 16us; 17250us; 18us; 17250us; 19us; 17250us; 20us; 17250us; 25us; 17250us; 29us; 17250us; 31us; 17250us; 33us; 17250us; 39us; 17250us; 41us; 17250us; 42us; 17250us; 43us; 17250us; 45us; 17250us; 46us; 17250us; 48us; 17250us; 49us; 17250us; 50us; 17250us; 52us; 17250us; 58us; 17250us; 59us; 17250us; 60us; 17250us; 71us; 17250us; 72us; 17250us; 73us; 17250us; 83us; 17250us; 86us; 17250us; 91us; 17250us; 105us; 17250us; 108us; 17250us; 110us; 17250us; 117us; 17250us; 120us; 17250us; 130us; 17250us; 134us; 17250us; 135us; 17250us; 140us; 17250us; 145us; 17250us; 152us; 17250us; 159us; 17250us; 162us; 17250us; 163us; 17250us; 164us; 17250us; 165us; 17250us; 166us; 17250us; 167us; 17250us; 168us; 17250us; 169us; 17250us; 170us; 17250us; 171us; 17250us; 172us; 17250us; 173us; 17250us; 174us; 17250us; 176us; 17250us; 177us; 17250us; 189us; 17250us; 190us; 17250us; 191us; 17250us; 192us; 17250us; 1us; 17256us; 79us; 1558us; 1us; 17256us; 79us; 1557us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17234us; 62us; 17234us; 10us; 17251us; 13us; 17251us; 14us; 17251us; 15us; 17251us; 16us; 17251us; 18us; 17251us; 19us; 17251us; 20us; 17251us; 25us; 17251us; 29us; 17251us; 31us; 17251us; 33us; 17251us; 39us; 17251us; 41us; 17251us; 42us; 17251us; 43us; 17251us; 45us; 17251us; 46us; 17251us; 48us; 17251us; 49us; 17251us; 50us; 17251us; 52us; 17251us; 58us; 17251us; 59us; 17251us; 60us; 17251us; 71us; 17251us; 72us; 17251us; 73us; 17251us; 83us; 17251us; 86us; 17251us; 91us; 17251us; 105us; 17251us; 108us; 17251us; 110us; 17251us; 117us; 17251us; 120us; 17251us; 130us; 17251us; 134us; 17251us; 135us; 17251us; 140us; 17251us; 145us; 17251us; 152us; 17251us; 159us; 17251us; 162us; 17251us; 163us; 17251us; 164us; 17251us; 165us; 17251us; 166us; 17251us; 167us; 17251us; 168us; 17251us; 169us; 17251us; 170us; 17251us; 171us; 17251us; 172us; 17251us; 173us; 17251us; 174us; 17251us; 176us; 17251us; 177us; 17251us; 189us; 17251us; 190us; 17251us; 191us; 17251us; 192us; 17251us; 2us; 32768us; 57us; 1562us; 96us; 1563us; 0us; 17235us; 2us; 32768us; 57us; 1564us; 96us; 1565us; 0us; 17236us; 2us; 32768us; 57us; 1566us; 96us; 1567us; 0us; 17237us; 1us; 32768us; 57us; 1568us; 0us; 17238us; 1us; 32768us; 96us; 1570us; 30us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17242us; 1us; 17239us; 96us; 1574us; 4us; 32768us; 10us; 965us; 96us; 1574us; 158us; 1613us; 192us; 952us; 30us; 17283us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17240us; 0us; 17241us; 64us; 17243us; 10us; 17252us; 13us; 17252us; 14us; 17252us; 15us; 17252us; 16us; 17252us; 18us; 17252us; 19us; 17252us; 20us; 17252us; 25us; 17252us; 29us; 17252us; 31us; 17252us; 33us; 17252us; 39us; 17252us; 41us; 17252us; 42us; 17252us; 43us; 17252us; 45us; 17252us; 46us; 17252us; 48us; 17252us; 49us; 17252us; 50us; 17252us; 52us; 17252us; 58us; 17252us; 59us; 17252us; 60us; 17252us; 71us; 17252us; 72us; 17252us; 73us; 17252us; 76us; 1601us; 83us; 17252us; 86us; 17252us; 91us; 17252us; 105us; 17252us; 108us; 17252us; 110us; 17252us; 117us; 17252us; 120us; 17252us; 130us; 17252us; 134us; 17252us; 135us; 17252us; 140us; 17252us; 145us; 17252us; 152us; 17252us; 159us; 17252us; 162us; 17252us; 163us; 17252us; 164us; 17252us; 165us; 17252us; 166us; 17252us; 167us; 17252us; 168us; 17252us; 169us; 17252us; 170us; 17252us; 171us; 17252us; 172us; 17252us; 173us; 17252us; 174us; 17252us; 176us; 17252us; 177us; 17252us; 185us; 1580us; 189us; 17252us; 190us; 17252us; 191us; 17252us; 192us; 17252us; 2us; 17243us; 76us; 1601us; 185us; 1579us; 3us; 32768us; 61us; 789us; 91us; 785us; 174us; 784us; 3us; 32768us; 61us; 789us; 91us; 785us; 174us; 784us; 0us; 17244us; 62us; 17244us; 10us; 17253us; 13us; 17253us; 14us; 17253us; 15us; 17253us; 16us; 17253us; 18us; 17253us; 19us; 17253us; 20us; 17253us; 25us; 17253us; 29us; 17253us; 31us; 17253us; 33us; 17253us; 39us; 17253us; 41us; 17253us; 42us; 17253us; 43us; 17253us; 45us; 17253us; 46us; 17253us; 48us; 17253us; 49us; 17253us; 50us; 17253us; 52us; 17253us; 58us; 17253us; 59us; 17253us; 60us; 17253us; 71us; 17253us; 72us; 17253us; 73us; 17253us; 83us; 17253us; 86us; 17253us; 91us; 17253us; 105us; 17253us; 108us; 17253us; 110us; 17253us; 117us; 17253us; 120us; 17253us; 130us; 17253us; 134us; 17253us; 135us; 17253us; 140us; 17253us; 145us; 17253us; 152us; 17253us; 159us; 17253us; 162us; 17253us; 163us; 17253us; 164us; 17253us; 165us; 17253us; 166us; 17253us; 167us; 17253us; 168us; 17253us; 169us; 17253us; 170us; 17253us; 171us; 17253us; 172us; 17253us; 173us; 17253us; 174us; 17253us; 176us; 17253us; 177us; 17253us; 189us; 17253us; 190us; 17253us; 191us; 17253us; 192us; 17253us; 0us; 17249us; 29us; 32768us; 44us; 1656us; 66us; 1587us; 87us; 1584us; 90us; 1649us; 91us; 1588us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 1us; 17254us; 76us; 1601us; 0us; 17255us; 0us; 17256us; 31us; 32768us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 1598us; 5us; 32768us; 10us; 965us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 192us; 952us; 6us; 17278us; 10us; 965us; 69us; 1622us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 192us; 952us; 0us; 17257us; 0us; 17258us; 0us; 17259us; 0us; 17260us; 33us; 32768us; 44us; 1257us; 70us; 1259us; 71us; 1313us; 73us; 1347us; 74us; 1252us; 91us; 1321us; 99us; 1666us; 105us; 1295us; 120us; 1294us; 134us; 1299us; 145us; 1293us; 151us; 1249us; 152us; 1306us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 183us; 1245us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17262us; 0us; 17263us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17264us; 0us; 17265us; 2us; 32768us; 44us; 1656us; 188us; 1655us; 3us; 17266us; 32us; 1607us; 76us; 1658us; 157us; 1609us; 0us; 17267us; 7us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 59us; 1780us; 93us; 1781us; 192us; 952us; 0us; 17268us; 0us; 17269us; 1us; 32768us; 157us; 1609us; 0us; 17270us; 33us; 17283us; 10us; 965us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 158us; 1619us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 1us; 32768us; 96us; 1611us; 37us; 17283us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 44us; 1656us; 59us; 1780us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 93us; 1781us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 192us; 952us; 0us; 17242us; 0us; 17271us; 0us; 17272us; 0us; 17273us; 3us; 17281us; 10us; 965us; 158us; 1617us; 192us; 952us; 0us; 17274us; 0us; 17275us; 0us; 17276us; 0us; 17277us; 1us; 17278us; 69us; 1622us; 30us; 17280us; 44us; 1656us; 66us; 1556us; 87us; 1584us; 90us; 1649us; 91us; 1543us; 105us; 1597us; 112us; 1595us; 120us; 1596us; 145us; 1594us; 162us; 774us; 163us; 773us; 164us; 771us; 165us; 770us; 166us; 769us; 167us; 767us; 168us; 768us; 169us; 766us; 170us; 764us; 171us; 762us; 172us; 760us; 173us; 765us; 174us; 763us; 176us; 761us; 177us; 759us; 182us; 1516us; 185us; 1652us; 188us; 1655us; 189us; 1747us; 190us; 1746us; 191us; 776us; 0us; 17279us; 0us; 17281us; 0us; 17282us; 8us; 32768us; 44us; 1656us; 66us; 1629us; 90us; 1649us; 91us; 1633us; 174us; 1639us; 182us; 1648us; 185us; 1652us; 188us; 1655us; 3us; 32768us; 95us; 1646us; 158us; 1628us; 182us; 1647us; 0us; 17284us; 1us; 32768us; 158us; 1630us; 0us; 17285us; 1us; 17286us; 76us; 1658us; 0us; 17287us; 7us; 32768us; 44us; 1656us; 90us; 1649us; 91us; 1633us; 174us; 1639us; 182us; 1648us; 185us; 1652us; 188us; 1655us; 5us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 95us; 1646us; 182us; 1647us; 0us; 17288us; 1us; 17289us; 185us; 1637us; 3us; 32768us; 61us; 789us; 91us; 785us; 174us; 784us; 0us; 17290us; 0us; 17291us; 6us; 17292us; 44us; 1656us; 90us; 1649us; 91us; 1633us; 174us; 1639us; 185us; 1652us; 188us; 1655us; 0us; 17293us; 0us; 17294us; 0us; 17295us; 0us; 17296us; 0us; 17297us; 7us; 32768us; 44us; 1656us; 90us; 1649us; 91us; 1633us; 174us; 1639us; 182us; 1648us; 185us; 1652us; 188us; 1655us; 7us; 32768us; 44us; 1656us; 90us; 1649us; 91us; 1633us; 174us; 1639us; 182us; 1648us; 185us; 1652us; 188us; 1655us; 7us; 32768us; 44us; 1656us; 90us; 1649us; 91us; 1633us; 174us; 1639us; 182us; 1648us; 185us; 1652us; 188us; 1655us; 1us; 32768us; 188us; 1655us; 0us; 17298us; 0us; 17299us; 1us; 32768us; 188us; 1655us; 1us; 17314us; 188us; 1655us; 0us; 17300us; 0us; 17301us; 0us; 17302us; 0us; 17303us; 8us; 32768us; 10us; 965us; 15us; 1782us; 35us; 1778us; 37us; 1779us; 59us; 1780us; 93us; 1781us; 188us; 1655us; 192us; 952us; 0us; 17304us; 0us; 17305us; 27us; 32768us; 56us; 1701us; 61us; 1683us; 62us; 1681us; 69us; 1685us; 74us; 1689us; 82us; 1693us; 88us; 1690us; 89us; 1691us; 95us; 1684us; 101us; 1686us; 141us; 1696us; 142us; 1692us; 152us; 1698us; 155us; 1695us; 157us; 1687us; 158us; 1688us; 178us; 1694us; 179us; 1682us; 180us; 1679us; 181us; 1678us; 182us; 1680us; 183us; 1673us; 184us; 1677us; 185us; 1676us; 186us; 1675us; 187us; 1674us; 192us; 1664us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17306us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17307us; 0us; 17308us; 1us; 32768us; 56us; 1668us; 5us; 32768us; 66us; 1670us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 188us; 1700us; 0us; 17309us; 1us; 32768us; 56us; 1671us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17310us; 0us; 17311us; 0us; 17312us; 0us; 17313us; 0us; 17314us; 0us; 17315us; 0us; 17316us; 0us; 17317us; 0us; 17318us; 0us; 17319us; 0us; 17320us; 0us; 17321us; 0us; 17322us; 0us; 17323us; 0us; 17324us; 0us; 17325us; 0us; 17326us; 0us; 17327us; 0us; 17328us; 0us; 17329us; 0us; 17330us; 0us; 17331us; 0us; 17332us; 0us; 17333us; 1us; 17334us; 141us; 1697us; 0us; 17335us; 1us; 32768us; 153us; 1699us; 0us; 17336us; 0us; 17337us; 1us; 32768us; 188us; 1700us; 0us; 17338us; 0us; 17339us; 0us; 17340us; 0us; 17341us; 1us; 17342us; 76us; 1708us; 0us; 17343us; 4us; 32768us; 91us; 1661us; 99us; 1666us; 188us; 1655us; 192us; 1710us; 0us; 17344us; 0us; 17345us; 0us; 17346us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 3us; 17350us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 0us; 17351us; 3us; 17353us; 20us; 1714us; 67us; 1713us; 83us; 1712us; 0us; 17352us; 1us; 17354us; 83us; 1721us; 1us; 17355us; 20us; 1722us; 0us; 17356us; 0us; 17357us; 0us; 17358us; 0us; 17359us; 0us; 17360us; 0us; 17361us; 0us; 17362us; 0us; 17363us; 0us; 17365us; 0us; 17367us; 0us; 17369us; 0us; 17371us; 0us; 17373us; 0us; 17377us; 0us; 17379us; 0us; 17381us; 0us; 17382us; 0us; 17383us; 0us; 17384us; 0us; 17385us; 0us; 17386us; 0us; 17387us; 0us; 17388us; 0us; 17389us; 0us; 17390us; 0us; 17391us; 0us; 17392us; 0us; 17393us; 0us; 17394us; 0us; 17396us; 3us; 32768us; 35us; 1751us; 36us; 1754us; 107us; 1755us; 3us; 17418us; 35us; 1751us; 36us; 1754us; 107us; 1755us; 0us; 17398us; 0us; 17399us; 0us; 17400us; 3us; 32768us; 37us; 1756us; 38us; 1759us; 147us; 1760us; 3us; 17419us; 37us; 1756us; 38us; 1759us; 147us; 1760us; 0us; 17401us; 0us; 17402us; 0us; 17403us; 3us; 32768us; 58us; 1764us; 59us; 1761us; 60us; 1763us; 0us; 17404us; 0us; 17405us; 0us; 17406us; 3us; 32768us; 92us; 1768us; 93us; 1765us; 94us; 1767us; 0us; 17407us; 0us; 17408us; 0us; 17409us; 3us; 32768us; 14us; 1772us; 15us; 1769us; 16us; 1771us; 0us; 17410us; 0us; 17411us; 0us; 17412us; 0us; 17413us; 0us; 17414us; 0us; 17415us; 0us; 17416us; 0us; 17417us; 0us; 17418us; 0us; 17419us; 0us; 17420us; 0us; 17421us; 0us; 17422us; 0us; 17423us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 101us; 102us; 110us; 111us; 178us; 179us; 210us; 211us; 212us; 213us; 214us; 215us; 216us; 217us; 222us; 223us; 228us; 229us; 234us; 235us; 241us; 242us; 248us; 249us; 255us; 256us; 273us; 274us; 278us; 353us; 379us; 380us; 383us; 384us; 385us; 386us; 388us; 389us; 392us; 393us; 394us; 397us; 398us; 400us; 401us; 406us; 407us; 411us; 414us; 416us; 419us; 421us; 423us; 424us; 426us; 427us; 429us; 446us; 447us; 451us; 460us; 479us; 480us; 481us; 482us; 498us; 504us; 506us; 507us; 508us; 515us; 516us; 517us; 521us; 525us; 541us; 542us; 546us; 551us; 552us; 553us; 554us; 558us; 567us; 570us; 576us; 577us; 578us; 579us; 580us; 583us; 585us; 587us; 589us; 591us; 595us; 599us; 602us; 604us; 636us; 638us; 639us; 707us; 733us; 800us; 829us; 830us; 839us; 843us; 844us; 860us; 862us; 866us; 867us; 883us; 885us; 886us; 888us; 889us; 891us; 893us; 894us; 897us; 905us; 906us; 907us; 959us; 961us; 976us; 978us; 982us; 984us; 985us; 987us; 988us; 989us; 990us; 992us; 1024us; 1025us; 1026us; 1043us; 1047us; 1048us; 1049us; 1051us; 1052us; 1067us; 1073us; 1074us; 1075us; 1091us; 1095us; 1096us; 1097us; 1112us; 1118us; 1119us; 1120us; 1121us; 1122us; 1125us; 1140us; 1141us; 1145us; 1149us; 1160us; 1203us; 1205us; 1209us; 1213us; 1216us; 1218us; 1250us; 1253us; 1255us; 1256us; 1286us; 1293us; 1323us; 1330us; 1332us; 1333us; 1339us; 1341us; 1342us; 1344us; 1345us; 1347us; 1379us; 1380us; 1384us; 1385us; 1389us; 1392us; 1393us; 1394us; 1396us; 1400us; 1401us; 1402us; 1404us; 1405us; 1407us; 1408us; 1424us; 1428us; 1429us; 1432us; 1433us; 1435us; 1436us; 1441us; 1442us; 1444us; 1445us; 1447us; 1448us; 1450us; 1533us; 1534us; 1539us; 1614us; 1698us; 1699us; 1700us; 1782us; 1788us; 1790us; 1791us; 1792us; 1799us; 1800us; 1801us; 1802us; 1807us; 1882us; 1911us; 1993us; 1994us; 1995us; 1996us; 2018us; 2019us; 2101us; 2102us; 2106us; 2113us; 2118us; 2123us; 2124us; 2125us; 2126us; 2130us; 2142us; 2143us; 2145us; 2146us; 2214us; 2215us; 2217us; 2219us; 2220us; 2221us; 2223us; 2229us; 2230us; 2233us; 2234us; 2235us; 2240us; 2241us; 2243us; 2250us; 2256us; 2257us; 2258us; 2264us; 2265us; 2266us; 2267us; 2268us; 2270us; 2352us; 2356us; 2357us; 2358us; 2359us; 2366us; 2370us; 2371us; 2372us; 2374us; 2375us; 2390us; 2393us; 2402us; 2404us; 2405us; 2407us; 2409us; 2410us; 2411us; 2412us; 2413us; 2423us; 2424us; 2428us; 2455us; 2456us; 2460us; 2464us; 2491us; 2492us; 2495us; 2500us; 2503us; 2530us; 2531us; 2533us; 2534us; 2536us; 2537us; 2539us; 2540us; 2542us; 2543us; 2554us; 2555us; 2556us; 2557us; 2558us; 2562us; 2564us; 2565us; 2567us; 2569us; 2570us; 2611us; 2618us; 2619us; 2620us; 2624us; 2627us; 2629us; 2631us; 2633us; 2640us; 2641us; 2653us; 2655us; 2663us; 2665us; 2671us; 2673us; 2674us; 2675us; 2677us; 2678us; 2679us; 2680us; 2682us; 2714us; 2715us; 2716us; 2722us; 2726us; 2727us; 2728us; 2733us; 2734us; 2741us; 2747us; 2748us; 2749us; 2756us; 2762us; 2763us; 2764us; 2765us; 2766us; 2777us; 2778us; 2781us; 2792us; 2793us; 2795us; 2796us; 2798us; 2801us; 2802us; 2803us; 2805us; 2807us; 2808us; 2810us; 2846us; 2848us; 2850us; 2918us; 2919us; 2955us; 2957us; 2961us; 3029us; 3030us; 3031us; 3033us; 3034us; 3038us; 3042us; 3058us; 3106us; 3107us; 3108us; 3111us; 3113us; 3114us; 3144us; 3152us; 3153us; 3155us; 3159us; 3162us; 3164us; 3196us; 3199us; 3201us; 3202us; 3203us; 3205us; 3206us; 3208us; 3209us; 3211us; 3212us; 3247us; 3249us; 3251us; 3319us; 3321us; 3322us; 3324us; 3325us; 3327us; 3331us; 3333us; 3335us; 3366us; 3367us; 3369us; 3373us; 3375us; 3377us; 3379us; 3447us; 3450us; 3451us; 3482us; 3483us; 3485us; 3489us; 3490us; 3491us; 3495us; 3496us; 3497us; 3498us; 3499us; 3500us; 3501us; 3504us; 3508us; 3509us; 3516us; 3520us; 3521us; 3558us; 3588us; 3589us; 3616us; 3618us; 3619us; 3620us; 3621us; 3623us; 3624us; 3625us; 3628us; 3629us; 3630us; 3632us; 3638us; 3639us; 3640us; 3641us; 3644us; 3659us; 3660us; 3664us; 3669us; 3673us; 3675us; 3676us; 3678us; 3679us; 3680us; 3682us; 3684us; 3685us; 3686us; 3687us; 3691us; 3724us; 3727us; 3729us; 3732us; 3733us; 3734us; 3735us; 3736us; 3768us; 3772us; 3773us; 3776us; 3782us; 3783us; 3784us; 3788us; 3789us; 3819us; 3821us; 3822us; 3823us; 3824us; 3825us; 3826us; 3827us; 3833us; 3837us; 3840us; 3842us; 3843us; 3844us; 3846us; 3851us; 3852us; 3855us; 3857us; 3859us; 3862us; 3863us; 3864us; 3867us; 3868us; 3870us; 3872us; 3874us; 3875us; 3876us; 3878us; 3882us; 3884us; 3886us; 3887us; 3888us; 3916us; 3921us; 3923us; 3925us; 3927us; 3932us; 3933us; 3934us; 3937us; 3939us; 3970us; 3971us; 3974us; 4005us; 4006us; 4012us; 4013us; 4017us; 4018us; 4019us; 4021us; 4025us; 4026us; 4029us; 4034us; 4036us; 4038us; 4040us; 4044us; 4045us; 4048us; 4049us; 4050us; 4053us; 4054us; 4055us; 4057us; 4058us; 4060us; 4062us; 4063us; 4066us; 4067us; 4069us; 4071us; 4072us; 4076us; 4080us; 4085us; 4086us; 4117us; 4119us; 4120us; 4152us; 4154us; 4155us; 4174us; 4176us; 4177us; 4178us; 4208us; 4212us; 4213us; 4215us; 4219us; 4220us; 4225us; 4226us; 4245us; 4247us; 4293us; 4294us; 4325us; 4326us; 4328us; 4358us; 4359us; 4361us; 4391us; 4398us; 4405us; 4406us; 4407us; 4410us; 4417us; 4418us; 4419us; 4421us; 4422us; 4426us; 4428us; 4430us; 4461us; 4462us; 4464us; 4465us; 4466us; 4468us; 4472us; 4474us; 4476us; 4477us; 4479us; 4510us; 4511us; 4514us; 4516us; 4519us; 4521us; 4523us; 4526us; 4527us; 4528us; 4596us; 4597us; 4599us; 4602us; 4606us; 4607us; 4675us; 4679us; 4680us; 4681us; 4682us; 4683us; 4684us; 4685us; 4686us; 4688us; 4692us; 4694us; 4697us; 4699us; 4704us; 4708us; 4709us; 4711us; 4713us; 4715us; 4716us; 4718us; 4719us; 4723us; 4730us; 4731us; 4733us; 4739us; 4741us; 4743us; 4744us; 4745us; 4746us; 4748us; 4750us; 4751us; 4755us; 4757us; 4758us; 4761us; 4763us; 4764us; 4766us; 4767us; 4768us; 4770us; 4806us; 4808us; 4812us; 4881us; 4882us; 4883us; 4884us; 4951us; 4957us; 4958us; 4959us; 4960us; 4961us; 4963us; 4964us; 4967us; 4970us; 5038us; 5039us; 5042us; 5043us; 5044us; 5047us; 5078us; 5079us; 5080us; 5081us; 5082us; 5083us; 5084us; 5085us; 5086us; 5087us; 5088us; 5089us; 5090us; 5091us; 5092us; 5093us; 5095us; 5096us; 5097us; 5098us; 5099us; 5101us; 5103us; 5104us; 5106us; 5108us; 5110us; 5111us; 5112us; 5115us; 5119us; 5120us; 5121us; 5124us; 5125us; 5127us; 5129us; 5130us; 5136us; 5137us; 5139us; 5140us; 5142us; 5145us; 5176us; 5177us; 5181us; 5185us; 5186us; 5195us; 5201us; 5202us; 5203us; 5204us; 5208us; 5209us; 5210us; 5214us; 5216us; 5219us; 5222us; 5224us; 5226us; 5233us; 5240us; 5242us; 5243us; 5279us; 5315us; 5317us; 5318us; 5319us; 5355us; 5391us; 5427us; 5463us; 5466us; 5467us; 5469us; 5470us; 5472us; 5475us; 5512us; 5519us; 5549us; 5586us; 5587us; 5622us; 5623us; 5658us; 5659us; 5689us; 5691us; 5692us; 5755us; 5759us; 5760us; 5761us; 5798us; 5799us; 5834us; 5835us; 5870us; 5871us; 5872us; 5874us; 5875us; 5878us; 5882us; 5883us; 5920us; 5922us; 5923us; 5960us; 5962us; 5963us; 5964us; 5966us; 5968us; 5969us; 5970us; 5971us; 5972us; 5973us; 5974us; 6037us; 6043us; 6044us; 6045us; 6049us; 6052us; 6053us; 6060us; 6065us; 6069us; 6072us; 6076us; 6080us; 6083us; 6086us; 6093us; 6102us; 6118us; 6126us; 6128us; 6129us; 6166us; 6168us; 6170us; 6201us; 6202us; 6239us; 6276us; 6277us; 6314us; 6351us; 6388us; 6425us; 6426us; 6429us; 6430us; 6433us; 6434us; 6437us; 6474us; 6475us; 6512us; 6513us; 6580us; 6586us; 6587us; 6588us; 6589us; 6656us; 6660us; 6661us; 6687us; 6689us; 6690us; 6692us; 6723us; 6724us; 6726us; 6727us; 6757us; 6788us; 6819us; 6886us; 6887us; 6954us; 6955us; 6957us; 7024us; 7028us; 7029us; 7099us; 7100us; 7103us; 7106us; 7109us; 7112us; 7115us; 7117us; 7119us; 7121us; 7123us; 7127us; 7131us; 7135us; 7136us; 7138us; 7206us; 7207us; 7208us; 7278us; 7279us; 7280us; 7349us; 7350us; 7351us; 7352us; 7353us; 7354us; 7421us; 7426us; 7427us; 7428us; 7495us; 7501us; 7502us; 7503us; 7571us; 7572us; 7641us; 7671us; 7672us; 7673us; 7674us; 7741us; 7742us; 7801us; 7802us; 7870us; 7871us; 7931us; 7932us; 8001us; 8031us; 8100us; 8105us; 8106us; 8107us; 8110us; 8111us; 8112us; 8113us; 8114us; 8158us; 8169us; 8244us; 8254us; 8255us; 8256us; 8257us; 8258us; 8259us; 8264us; 8334us; 8339us; 8340us; 8341us; 8342us; 8343us; 8344us; 8412us; 8415us; 8416us; 8417us; 8418us; 8419us; 8486us; 8512us; 8579us; 8605us; 8641us; 8709us; 8711us; 8713us; 8781us; 8782us; 8818us; 8886us; 8890us; 8892us; 8961us; 8962us; 8963us; 9030us; 9032us; 9034us; 9102us; 9103us; 9171us; 9175us; 9176us; 9178us; 9179us; 9246us; 9247us; 9273us; 9294us; 9315us; 9325us; 9346us; 9365us; 9384us; 9394us; 9404us; 9414us; 9424us; 9434us; 9444us; 9454us; 9456us; 9465us; 9470us; 9475us; 9477us; 9479us; 9481us; 9507us; 9533us; 9559us; 9589us; 9613us; 9637us; 9663us; 9688us; 9713us; 9740us; 9767us; 9793us; 9821us; 9847us; 9878us; 9879us; 9910us; 9911us; 9942us; 9943us; 10010us; 10012us; 10080us; 10081us; 10083us; 10151us; 10219us; 10287us; 10355us; 10423us; 10491us; 10559us; 10627us; 10695us; 10763us; 10831us; 10899us; 10967us; 11035us; 11103us; 11171us; 11239us; 11307us; 11375us; 11443us; 11444us; 11445us; 11446us; 11447us; 11448us; 11449us; 11450us; 11451us; 11452us; 11453us; 11454us; 11455us; 11456us; 11457us; 11458us; 11459us; 11460us; 11461us; 11462us; 11463us; 11464us; 11531us; 11535us; 11536us; 11575us; 11576us; 11615us; 11619us; 11620us; 11621us; 11622us; 11660us; 11661us; 11662us; 11663us; 11664us; 11667us; 11670us; 11708us; 11709us; 11710us; 11711us; 11712us; 11779us; 11846us; 11847us; 11851us; 11852us; 11919us; 11921us; 11988us; 11994us; 11995us; 11996us; 12063us; 12065us; 12132us; 12138us; 12139us; 12140us; 12207us; 12208us; 12209us; 12283us; 12284us; 12358us; 12359us; 12402us; 12445us; 12446us; 12489us; 12532us; 12533us; 12576us; 12619us; 12620us; 12663us; 12706us; 12707us; 12750us; 12793us; 12794us; 12837us; 12880us; 12881us; 12912us; 12943us; 12946us; 12980us; 13008us; 13036us; 13037us; 13043us; 13044us; 13045us; 13088us; 13089us; 13132us; 13133us; 13168us; 13206us; 13207us; 13213us; 13247us; 13253us; 13259us; 13262us; 13264us; 13270us; 13276us; 13310us; 13344us; 13346us; 13347us; 13381us; 13415us; 13422us; 13423us; 13425us; 13432us; 13433us; 13437us; 13441us; 13442us; 13445us; 13446us; 13447us; 13448us; 13517us; 13521us; 13522us; 13523us; 13524us; 13525us; 13526us; 13527us; 13528us; 13614us; 13618us; 13620us; 13622us; 13623us; 13627us; 13628us; 13699us; 13703us; 13704us; 13705us; 13709us; 13710us; 13711us; 13712us; 13713us; 13715us; 13784us; 13785us; 13852us; 13919us; 13920us; 13921us; 13922us; 13923us; 13924us; 13925us; 13926us; 13927us; 13928us; 13929us; 13998us; 14002us; 14003us; 14004us; 14006us; 14007us; 14008us; 14077us; 14147us; 14151us; 14152us; 14153us; 14154us; 14155us; 14224us; 14228us; 14229us; 14230us; 14231us; 14232us; 14310us; 14404us; 14498us; 14499us; 14509us; 14510us; 14511us; 14512us; 14513us; 14514us; 14515us; 14516us; 14517us; 14518us; 14520us; 14522us; 14524us; 14528us; 14595us; 14596us; 14597us; 14598us; 14599us; 14604us; 14609us; 14610us; 14612us; 14613us; 14687us; 14693us; 14694us; 14695us; 14696us; 14697us; 14698us; 14699us; 14700us; 14701us; 14702us; 14703us; 14704us; 14773us; 14840us; 14841us; 14908us; 14909us; 14983us; 14984us; 14985us; 14986us; 15053us; 15120us; 15123us; 15127us; 15128us; 15164us; 15166us; 15167us; 15168us; 15169us; 15171us; 15202us; 15206us; 15207us; 15238us; 15239us; 15274us; 15275us; 15305us; 15308us; 15335us; 15336us; 15339us; 15340us; 15408us; 15409us; 15412us; 15413us; 15415us; 15483us; 15484us; 15487us; 15488us; 15492us; 15493us; 15496us; 15497us; 15503us; 15505us; 15506us; 15507us; 15510us; 15512us; 15513us; 15514us; 15518us; 15520us; 15522us; 15523us; 15524us; 15526us; 15527us; 15528us; 15537us; 15612us; 15613us; 15614us; 15615us; 15619us; 15621us; 15625us; 15626us; 15629us; 15630us; 15631us; 15632us; 15636us; 15637us; 15640us; 15642us; 15643us; 15647us; 15648us; 15652us; 15653us; 15657us; 15658us; 15662us; 15663us; 15693us; 15702us; 15706us; 15708us; 15709us; 15710us; 15711us; 15746us; 15748us; 15817us; 15818us; 15819us; 15855us; 15858us; 15928us; 15932us; 15933us; 15934us; 15936us; 15937us; 15938us; 15940us; 15941us; 15943us; 15944us; 15983us; 15984us; 16023us; 16025us; 16026us; 16028us; 16033us; 16035us; 16040us; 16072us; 16073us; 16075us; 16107us; 16108us; 16110us; 16142us; 16143us; 16145us; 16177us; 16178us; 16209us; 16217us; 16247us; 16254us; 16256us; 16258us; 16288us; 16295us; 16303us; 16333us; 16340us; 16342us; 16344us; 16374us; 16381us; 16383us; 16414us; 16415us; 16417us; 16418us; 16427us; 16457us; 16458us; 16488us; 16489us; 16519us; 16520us; 16529us; 16559us; 16560us; 16590us; 16591us; 16593us; 16594us; 16596us; 16598us; 16600us; 16605us; 16609us; 16610us; 16617us; 16618us; 16681us; 16683us; 16685us; 16686us; 16749us; 16750us; 16813us; 16845us; 16877us; 16881us; 16885us; 16890us; 16895us; 16896us; 16959us; 16960us; 16991us; 17022us; 17023us; 17086us; 17088us; 17090us; 17121us; 17152us; 17153us; 17216us; 17219us; 17220us; 17223us; 17224us; 17227us; 17228us; 17230us; 17231us; 17233us; 17264us; 17265us; 17267us; 17272us; 17303us; 17304us; 17305us; 17370us; 17373us; 17377us; 17381us; 17382us; 17445us; 17446us; 17476us; 17478us; 17479us; 17480us; 17512us; 17518us; 17525us; 17526us; 17527us; 17528us; 17529us; 17563us; 17564us; 17565us; 17569us; 17570us; 17571us; 17574us; 17578us; 17579us; 17587us; 17588us; 17589us; 17591us; 17592us; 17626us; 17628us; 17666us; 17667us; 17668us; 17669us; 17670us; 17674us; 17675us; 17676us; 17677us; 17678us; 17680us; 17711us; 17712us; 17713us; 17714us; 17723us; 17727us; 17728us; 17730us; 17731us; 17733us; 17734us; 17742us; 17748us; 17749us; 17751us; 17755us; 17756us; 17757us; 17764us; 17765us; 17766us; 17767us; 17768us; 17769us; 17777us; 17785us; 17793us; 17795us; 17796us; 17797us; 17799us; 17801us; 17802us; 17803us; 17804us; 17805us; 17814us; 17815us; 17816us; 17844us; 17848us; 17849us; 17853us; 17854us; 17855us; 17857us; 17863us; 17864us; 17866us; 17870us; 17871us; 17872us; 17873us; 17874us; 17875us; 17876us; 17877us; 17878us; 17879us; 17880us; 17881us; 17882us; 17883us; 17884us; 17885us; 17886us; 17887us; 17888us; 17889us; 17890us; 17891us; 17892us; 17893us; 17894us; 17896us; 17897us; 17899us; 17900us; 17901us; 17903us; 17904us; 17905us; 17906us; 17907us; 17909us; 17910us; 17915us; 17916us; 17917us; 17918us; 17919us; 17920us; 17921us; 17925us; 17926us; 17930us; 17931us; 17933us; 17935us; 17936us; 17937us; 17938us; 17939us; 17940us; 17941us; 17942us; 17943us; 17944us; 17945us; 17946us; 17947us; 17948us; 17949us; 17950us; 17951us; 17952us; 17953us; 17954us; 17955us; 17956us; 17957us; 17958us; 17959us; 17960us; 17961us; 17962us; 17963us; 17964us; 17965us; 17969us; 17973us; 17974us; 17975us; 17976us; 17980us; 17984us; 17985us; 17986us; 17987us; 17991us; 17992us; 17993us; 17994us; 17998us; 17999us; 18000us; 18001us; 18005us; 18006us; 18007us; 18008us; 18009us; 18010us; 18011us; 18012us; 18013us; 18014us; 18015us; 18016us; 18017us; 18018us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 2us; 3us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 3us; 3us; 2us; 12us; 0us; 2us; 4us; 3us; 5us; 3us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 1us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 7us; 7us; 7us; 5us; 3us; 4us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 2us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 1us; 3us; 2us; 1us; 1us; 3us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 12us; 12us; 13us; 14us; 14us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 36us; 37us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 40us; 40us; 40us; 40us; 40us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 44us; 45us; 45us; 46us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 59us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 68us; 69us; 69us; 70us; 70us; 70us; 70us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 73us; 73us; 74us; 74us; 75us; 75us; 75us; 76us; 76us; 76us; 77us; 78us; 78us; 78us; 79us; 79us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 84us; 85us; 86us; 86us; 87us; 87us; 87us; 88us; 88us; 89us; 89us; 89us; 90us; 90us; 91us; 91us; 92us; 92us; 93us; 93us; 93us; 94us; 94us; 95us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 101us; 101us; 102us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 104us; 105us; 105us; 105us; 106us; 106us; 107us; 107us; 107us; 108us; 108us; 109us; 109us; 110us; 111us; 112us; 112us; 112us; 113us; 114us; 114us; 115us; 115us; 116us; 116us; 117us; 117us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 119us; 119us; 120us; 120us; 120us; 121us; 122us; 122us; 123us; 123us; 123us; 123us; 124us; 124us; 124us; 125us; 125us; 125us; 126us; 126us; 127us; 127us; 128us; 128us; 129us; 129us; 130us; 130us; 131us; 132us; 133us; 134us; 135us; 136us; 136us; 137us; 137us; 138us; 139us; 139us; 140us; 141us; 142us; 143us; 143us; 143us; 143us; 144us; 144us; 145us; 146us; 146us; 146us; 147us; 147us; 148us; 148us; 149us; 149us; 149us; 149us; 149us; 150us; 150us; 151us; 152us; 152us; 153us; 153us; 154us; 154us; 154us; 155us; 155us; 155us; 156us; 157us; 157us; 158us; 159us; 159us; 160us; 160us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 162us; 162us; 162us; 162us; 163us; 163us; 164us; 164us; 165us; 165us; 166us; 167us; 167us; 167us; 167us; 168us; 168us; 169us; 169us; 169us; 169us; 169us; 170us; 170us; 170us; 170us; 170us; 170us; 171us; 171us; 172us; 172us; 173us; 173us; 174us; 175us; 175us; 175us; 175us; 175us; 175us; 176us; 176us; 177us; 177us; 177us; 177us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 179us; 179us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 181us; 181us; 182us; 182us; 183us; 184us; 184us; 185us; 186us; 186us; 186us; 187us; 187us; 187us; 188us; 188us; 189us; 189us; 190us; 190us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 193us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 195us; 195us; 196us; 196us; 196us; 197us; 197us; 197us; 197us; 198us; 199us; 199us; 199us; 199us; 199us; 200us; 200us; 201us; 202us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 204us; 204us; 205us; 205us; 205us; 205us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 207us; 207us; 208us; 208us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 211us; 211us; 212us; 212us; 212us; 212us; 212us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 214us; 214us; 214us; 214us; 215us; 215us; 215us; 215us; 216us; 216us; 216us; 216us; 217us; 217us; 217us; 217us; 217us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 219us; 219us; 220us; 220us; 221us; 221us; 221us; 221us; 221us; 222us; 222us; 222us; 223us; 223us; 224us; 224us; 225us; 225us; 225us; 226us; 227us; 227us; 227us; 227us; 228us; 229us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 233us; 233us; 234us; 234us; 234us; 234us; 234us; 234us; 234us; 234us; 235us; 235us; 236us; 236us; 236us; 236us; 237us; 237us; 238us; 238us; 239us; 239us; 239us; 239us; 239us; 240us; 240us; 240us; 241us; 241us; 241us; 242us; 242us; 243us; 243us; 243us; 244us; 245us; 245us; 245us; 246us; 247us; 247us; 248us; 248us; 248us; 248us; 248us; 248us; 248us; 248us; 249us; 249us; 250us; 250us; 251us; 251us; 252us; 252us; 253us; 253us; 254us; 254us; 255us; 255us; 256us; 256us; 256us; 256us; 256us; 256us; 257us; 257us; 258us; 259us; 259us; 259us; 259us; 260us; 260us; 260us; 261us; 261us; 262us; 262us; 263us; 263us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 265us; 265us; 265us; 265us; 266us; 267us; 267us; 267us; 268us; 268us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 270us; 270us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 272us; 272us; 273us; 273us; 273us; 273us; 273us; 273us; 273us; 274us; 274us; 274us; 275us; 275us; 276us; 277us; 277us; 278us; 278us; 278us; 279us; 279us; 279us; 280us; 280us; 281us; 281us; 281us; 281us; 282us; 282us; 283us; 284us; 285us; 285us; 285us; 285us; 286us; 286us; 286us; 286us; 286us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 288us; 289us; 289us; 290us; 290us; 291us; 291us; 291us; 291us; 292us; 293us; 293us; 293us; 294us; 294us; 295us; 295us; 296us; 296us; 296us; 296us; 297us; 297us; 297us; 298us; 298us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 302us; 302us; 303us; 303us; 304us; 304us; 305us; 305us; 306us; 306us; 307us; 307us; 308us; 308us; 309us; 309us; 310us; 310us; 311us; 311us; 312us; 312us; 313us; 313us; 313us; 314us; 314us; 315us; 315us; 315us; 316us; 316us; 316us; 317us; 317us; 317us; 318us; 318us; 318us; 319us; 319us; 319us; 320us; 320us; 320us; 320us; 320us; 321us; 321us; 321us; 321us; 321us; 321us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 16406us; 16407us; 16408us; 65535us; 65535us; 65535us; 16411us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 16435us; 16436us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 65535us; 16452us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16478us; 65535us; 65535us; 16479us; 65535us; 16481us; 65535us; 65535us; 16482us; 16483us; 65535us; 65535us; 16485us; 16486us; 65535us; 16488us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 16493us; 65535us; 16494us; 65535us; 16496us; 65535us; 16497us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 65535us; 16502us; 16503us; 65535us; 16504us; 16505us; 16506us; 65535us; 65535us; 65535us; 65535us; 16508us; 16511us; 16512us; 65535us; 16513us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 16517us; 16518us; 16519us; 65535us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 65535us; 16525us; 65535us; 16526us; 16527us; 65535us; 16528us; 65535us; 65535us; 65535us; 16530us; 16531us; 65535us; 16532us; 16533us; 16534us; 16535us; 65535us; 65535us; 65535us; 16537us; 16538us; 16539us; 65535us; 65535us; 16540us; 16541us; 65535us; 16544us; 65535us; 65535us; 65535us; 65535us; 16545us; 65535us; 65535us; 16546us; 16547us; 16548us; 16549us; 65535us; 16550us; 65535us; 65535us; 16551us; 65535us; 65535us; 65535us; 16552us; 65535us; 65535us; 65535us; 65535us; 16553us; 65535us; 16554us; 65535us; 16555us; 65535us; 16556us; 65535us; 16557us; 65535us; 16558us; 16559us; 16560us; 16561us; 65535us; 65535us; 16562us; 65535us; 65535us; 16563us; 65535us; 65535us; 16566us; 16567us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16568us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16569us; 16570us; 65535us; 16571us; 16572us; 16573us; 65535us; 65535us; 16574us; 16575us; 65535us; 65535us; 16576us; 16577us; 65535us; 16578us; 65535us; 65535us; 16579us; 16580us; 65535us; 65535us; 16581us; 16582us; 16583us; 16584us; 65535us; 16585us; 65535us; 65535us; 16587us; 65535us; 16588us; 65535us; 65535us; 16589us; 16590us; 65535us; 65535us; 16592us; 65535us; 65535us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 65535us; 65535us; 16594us; 16595us; 65535us; 16597us; 65535us; 65535us; 65535us; 65535us; 16598us; 16599us; 65535us; 65535us; 16600us; 65535us; 65535us; 16601us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16602us; 16603us; 65535us; 16604us; 65535us; 16605us; 65535us; 16606us; 65535us; 65535us; 65535us; 65535us; 65535us; 16607us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16610us; 65535us; 16612us; 65535us; 65535us; 16613us; 16614us; 65535us; 16615us; 16617us; 16618us; 16619us; 16620us; 16621us; 65535us; 65535us; 16623us; 65535us; 65535us; 16625us; 65535us; 65535us; 16627us; 65535us; 65535us; 16628us; 16629us; 16630us; 65535us; 16632us; 16633us; 65535us; 16635us; 16636us; 65535us; 65535us; 16637us; 16638us; 16639us; 65535us; 65535us; 16640us; 65535us; 65535us; 65535us; 65535us; 16642us; 65535us; 16643us; 16644us; 65535us; 65535us; 16645us; 16646us; 16647us; 65535us; 65535us; 65535us; 65535us; 65535us; 16648us; 16649us; 16650us; 16651us; 65535us; 65535us; 16652us; 65535us; 65535us; 16653us; 16654us; 65535us; 16655us; 65535us; 65535us; 16656us; 16657us; 16658us; 16659us; 16660us; 16661us; 65535us; 65535us; 65535us; 65535us; 16664us; 16665us; 65535us; 65535us; 16666us; 65535us; 65535us; 65535us; 65535us; 16667us; 16668us; 65535us; 16669us; 65535us; 65535us; 65535us; 16670us; 16671us; 65535us; 65535us; 65535us; 65535us; 16674us; 16675us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16681us; 16682us; 65535us; 65535us; 65535us; 16683us; 65535us; 65535us; 16684us; 65535us; 16685us; 65535us; 16686us; 16687us; 65535us; 65535us; 16688us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16689us; 65535us; 16690us; 16691us; 65535us; 16693us; 16694us; 65535us; 16695us; 65535us; 65535us; 16696us; 65535us; 16698us; 65535us; 65535us; 16699us; 65535us; 65535us; 65535us; 16701us; 65535us; 65535us; 16702us; 65535us; 65535us; 16703us; 65535us; 65535us; 16704us; 16705us; 65535us; 65535us; 16706us; 65535us; 65535us; 16707us; 65535us; 16708us; 65535us; 65535us; 65535us; 16710us; 65535us; 16711us; 65535us; 65535us; 16713us; 65535us; 65535us; 65535us; 65535us; 16717us; 16718us; 65535us; 65535us; 16719us; 16720us; 65535us; 16721us; 65535us; 65535us; 65535us; 65535us; 16722us; 65535us; 16723us; 16724us; 65535us; 65535us; 65535us; 65535us; 16725us; 65535us; 65535us; 16727us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16731us; 16732us; 65535us; 16733us; 65535us; 65535us; 65535us; 16734us; 65535us; 65535us; 16735us; 16736us; 16737us; 16738us; 16739us; 16740us; 16741us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16742us; 65535us; 65535us; 65535us; 16746us; 65535us; 16747us; 65535us; 65535us; 16749us; 65535us; 65535us; 65535us; 65535us; 16751us; 16752us; 16753us; 65535us; 65535us; 16754us; 65535us; 65535us; 16757us; 65535us; 65535us; 16758us; 65535us; 16760us; 16761us; 65535us; 65535us; 65535us; 65535us; 65535us; 16762us; 16763us; 16764us; 65535us; 65535us; 16765us; 16766us; 16767us; 65535us; 65535us; 16769us; 65535us; 65535us; 65535us; 16771us; 65535us; 16772us; 16773us; 65535us; 65535us; 16774us; 16775us; 16776us; 16777us; 16778us; 16779us; 16780us; 16781us; 16782us; 16783us; 16784us; 16785us; 16786us; 16787us; 16788us; 65535us; 16789us; 16790us; 16791us; 16792us; 65535us; 65535us; 16793us; 65535us; 65535us; 65535us; 16794us; 16797us; 65535us; 65535us; 16798us; 16799us; 65535us; 16800us; 65535us; 65535us; 16802us; 65535us; 16804us; 65535us; 16805us; 65535us; 65535us; 65535us; 16806us; 65535us; 65535us; 16809us; 65535us; 65535us; 16810us; 16811us; 16812us; 65535us; 16813us; 16814us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16815us; 65535us; 65535us; 65535us; 65535us; 16820us; 65535us; 65535us; 65535us; 65535us; 65535us; 16825us; 65535us; 16826us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16829us; 65535us; 16830us; 65535us; 16831us; 65535us; 65535us; 16833us; 65535us; 65535us; 16834us; 16835us; 65535us; 16836us; 65535us; 16837us; 65535us; 16838us; 16840us; 65535us; 16841us; 65535us; 65535us; 16842us; 65535us; 65535us; 16843us; 65535us; 65535us; 16844us; 16845us; 65535us; 65535us; 16846us; 16847us; 16848us; 16849us; 16850us; 16851us; 65535us; 65535us; 16852us; 16853us; 65535us; 65535us; 16855us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16858us; 65535us; 65535us; 65535us; 65535us; 16862us; 65535us; 65535us; 16865us; 65535us; 65535us; 65535us; 65535us; 16870us; 65535us; 16871us; 65535us; 16872us; 65535us; 65535us; 16875us; 65535us; 16876us; 65535us; 65535us; 16877us; 16878us; 16879us; 65535us; 65535us; 16880us; 65535us; 65535us; 16882us; 65535us; 65535us; 16884us; 65535us; 16886us; 65535us; 65535us; 65535us; 65535us; 16887us; 65535us; 16890us; 65535us; 65535us; 65535us; 16891us; 65535us; 16893us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16894us; 65535us; 65535us; 16895us; 16896us; 65535us; 16897us; 16898us; 65535us; 16899us; 16900us; 16901us; 16902us; 16903us; 65535us; 65535us; 16904us; 16905us; 65535us; 65535us; 16906us; 16907us; 65535us; 16908us; 65535us; 65535us; 16909us; 16910us; 16911us; 65535us; 65535us; 65535us; 65535us; 65535us; 16915us; 65535us; 16916us; 65535us; 65535us; 65535us; 65535us; 16918us; 16919us; 65535us; 16920us; 16921us; 16922us; 16923us; 65535us; 65535us; 65535us; 65535us; 16924us; 16925us; 16926us; 16927us; 16928us; 65535us; 65535us; 65535us; 16929us; 16930us; 16931us; 16932us; 16933us; 65535us; 65535us; 16934us; 16935us; 16936us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16940us; 65535us; 65535us; 65535us; 65535us; 65535us; 16941us; 16942us; 65535us; 65535us; 65535us; 65535us; 16943us; 65535us; 65535us; 16944us; 65535us; 16945us; 65535us; 16946us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16947us; 65535us; 16948us; 65535us; 16949us; 65535us; 65535us; 65535us; 16951us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16973us; 16974us; 16975us; 16976us; 16977us; 16978us; 16979us; 16980us; 16981us; 16982us; 16983us; 16984us; 16985us; 16986us; 16987us; 16988us; 16989us; 16990us; 16991us; 16992us; 16994us; 65535us; 65535us; 16995us; 65535us; 16996us; 65535us; 65535us; 16997us; 16998us; 16999us; 65535us; 17000us; 17001us; 17002us; 17003us; 65535us; 65535us; 65535us; 17005us; 17006us; 17007us; 17008us; 65535us; 65535us; 17011us; 65535us; 17012us; 65535us; 65535us; 65535us; 65535us; 17014us; 17015us; 65535us; 65535us; 65535us; 65535us; 17018us; 17019us; 65535us; 17020us; 17021us; 65535us; 17023us; 65535us; 17024us; 65535us; 65535us; 17026us; 65535us; 65535us; 17027us; 65535us; 65535us; 17028us; 65535us; 65535us; 17029us; 65535us; 65535us; 17030us; 65535us; 65535us; 17031us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17032us; 65535us; 17033us; 17034us; 65535us; 17035us; 65535us; 17036us; 65535us; 65535us; 17038us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17044us; 65535us; 65535us; 65535us; 17046us; 65535us; 65535us; 17047us; 65535us; 65535us; 17048us; 65535us; 17049us; 17050us; 17051us; 65535us; 65535us; 17052us; 17053us; 17054us; 17055us; 17056us; 17057us; 17059us; 65535us; 65535us; 65535us; 65535us; 17060us; 65535us; 17061us; 65535us; 65535us; 17062us; 17063us; 65535us; 17064us; 17065us; 17066us; 17067us; 65535us; 65535us; 17068us; 65535us; 65535us; 17073us; 17075us; 17076us; 17077us; 17078us; 17079us; 17080us; 17081us; 17082us; 17083us; 65535us; 65535us; 17084us; 17085us; 65535us; 17086us; 17087us; 65535us; 65535us; 65535us; 17088us; 17089us; 17090us; 17091us; 65535us; 65535us; 17092us; 17093us; 17094us; 17095us; 65535us; 65535us; 65535us; 17096us; 65535us; 17097us; 17098us; 17099us; 65535us; 17100us; 17101us; 17102us; 17103us; 17104us; 65535us; 65535us; 65535us; 65535us; 65535us; 17105us; 17106us; 17107us; 17108us; 65535us; 65535us; 17109us; 65535us; 17110us; 65535us; 65535us; 17112us; 17113us; 17114us; 17115us; 17116us; 17117us; 17118us; 17119us; 17120us; 17122us; 17123us; 65535us; 65535us; 17126us; 65535us; 17127us; 65535us; 17129us; 17130us; 17131us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17133us; 17134us; 17137us; 65535us; 65535us; 65535us; 17139us; 65535us; 17141us; 65535us; 17142us; 65535us; 65535us; 65535us; 65535us; 65535us; 17143us; 65535us; 65535us; 65535us; 17144us; 65535us; 65535us; 65535us; 65535us; 17147us; 65535us; 65535us; 65535us; 17148us; 65535us; 65535us; 17149us; 65535us; 65535us; 65535us; 17150us; 17151us; 65535us; 65535us; 65535us; 17155us; 17156us; 65535us; 17158us; 17159us; 65535us; 65535us; 17161us; 17163us; 17165us; 65535us; 65535us; 65535us; 17166us; 65535us; 17167us; 17169us; 17172us; 65535us; 17174us; 65535us; 65535us; 17175us; 65535us; 17176us; 65535us; 17177us; 65535us; 17179us; 65535us; 17180us; 65535us; 65535us; 65535us; 65535us; 17181us; 17182us; 17183us; 65535us; 65535us; 65535us; 17184us; 17185us; 65535us; 65535us; 65535us; 65535us; 17186us; 17187us; 65535us; 17188us; 17189us; 65535us; 17190us; 65535us; 17191us; 65535us; 17192us; 65535us; 65535us; 17193us; 65535us; 65535us; 65535us; 65535us; 65535us; 17199us; 65535us; 65535us; 17200us; 65535us; 65535us; 17202us; 65535us; 65535us; 17204us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17212us; 65535us; 17214us; 65535us; 65535us; 17215us; 65535us; 17216us; 65535us; 17217us; 65535us; 65535us; 17219us; 65535us; 17220us; 65535us; 17225us; 65535us; 65535us; 65535us; 65535us; 65535us; 17226us; 65535us; 17228us; 65535us; 65535us; 65535us; 17229us; 65535us; 17230us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17231us; 65535us; 17232us; 65535us; 65535us; 17233us; 65535us; 65535us; 65535us; 65535us; 65535us; 17234us; 65535us; 65535us; 17235us; 65535us; 17236us; 65535us; 17237us; 65535us; 17238us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17240us; 17241us; 65535us; 65535us; 65535us; 65535us; 17244us; 65535us; 17249us; 65535us; 65535us; 17255us; 17256us; 65535us; 65535us; 65535us; 17257us; 17258us; 17259us; 17260us; 65535us; 17262us; 17263us; 65535us; 17264us; 17265us; 65535us; 65535us; 17267us; 65535us; 17268us; 17269us; 65535us; 17270us; 65535us; 65535us; 65535us; 65535us; 17271us; 17272us; 17273us; 65535us; 17274us; 17275us; 17276us; 17277us; 65535us; 65535us; 17279us; 17281us; 17282us; 65535us; 65535us; 17284us; 65535us; 17285us; 65535us; 17287us; 65535us; 65535us; 17288us; 65535us; 65535us; 17290us; 17291us; 65535us; 17293us; 17294us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17298us; 17299us; 65535us; 65535us; 17300us; 17301us; 17302us; 17303us; 65535us; 17304us; 17305us; 65535us; 65535us; 17306us; 65535us; 17307us; 17308us; 65535us; 65535us; 17309us; 65535us; 65535us; 17310us; 17311us; 17312us; 17313us; 17314us; 17315us; 17316us; 17317us; 17318us; 17319us; 17320us; 17321us; 17322us; 17323us; 17324us; 17325us; 17326us; 17327us; 17328us; 17329us; 17330us; 17331us; 17332us; 17333us; 65535us; 17335us; 65535us; 17336us; 17337us; 65535us; 17338us; 17339us; 17340us; 17341us; 65535us; 17343us; 65535us; 17344us; 17345us; 17346us; 17347us; 17348us; 17349us; 65535us; 17351us; 65535us; 17352us; 65535us; 65535us; 17356us; 17357us; 17358us; 17359us; 17360us; 17361us; 17362us; 17363us; 17365us; 17367us; 17369us; 17371us; 17373us; 17377us; 17379us; 17381us; 17382us; 17383us; 17384us; 17385us; 17386us; 17387us; 17388us; 17389us; 17390us; 17391us; 17392us; 17393us; 17394us; 17396us; 65535us; 65535us; 17398us; 17399us; 17400us; 65535us; 65535us; 17401us; 17402us; 17403us; 65535us; 17404us; 17405us; 17406us; 65535us; 17407us; 17408us; 17409us; 65535us; 17410us; 17411us; 17412us; 17413us; 17414us; 17415us; 17416us; 17417us; 17418us; 17419us; 17420us; 17421us; 17422us; 17423us; |]
let _fsyacc_reductions ()  =    [| 
# 2720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
# 2729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
# 2738 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
# 2747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypedSeqExprEOF));
# 2756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypEOF));
# 2765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 490 "../pars.fsy"
                            IDefns (_1,lhs parseState) 
                   )
# 490 "../pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 493 "../pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(),rhs parseState 1));
                            IDefns ([],lhs parseState) 
                   )
# 493 "../pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 "../pars.fsy"
                            IDefns ([],lhs parseState) 
                   )
# 497 "../pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 "../pars.fsy"
                                              
                   )
# 501 "../pars.fsy"
                 : 'interactiveTerminator));
# 2807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 502 "../pars.fsy"
                                   checkEndOfFileError _1 
                   )
# 502 "../pars.fsy"
                 : 'interactiveTerminator));
# 2818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 "../pars.fsy"
                            [] 
                   )
# 516 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 "../pars.fsy"
                            _1 
                   )
# 519 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 "../pars.fsy"
                            _1 
                   )
# 522 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2853 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 525 "../pars.fsy"
                            _1 
                   )
# 525 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 528 "../pars.fsy"
                            _1 @ _3 
                   )
# 528 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 531 "../pars.fsy"
                            _1 @ _3 
                   )
# 531 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2891 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 "../pars.fsy"
                            _1 @ _3 
                   )
# 534 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 540 "../pars.fsy"
                             _1 
                   )
# 540 "../pars.fsy"
                 : 'interactiveDefns));
# 2915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 "../pars.fsy"
                             _1 @ _2 
                   )
# 543 "../pars.fsy"
                 : 'interactiveDefns));
# 2927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 549 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
# 549 "../pars.fsy"
                 : 'interactiveExpr));
# 2942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 "../pars.fsy"
                             [SynModuleDecl.HashDirective(_1,rhs parseState 1)] 
                   )
# 557 "../pars.fsy"
                 : 'interactiveHash));
# 2953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 "../pars.fsy"
                                                                    
                   )
# 562 "../pars.fsy"
                 : 'interactiveSeparators));
# 2964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 "../pars.fsy"
                                                                      
                   )
# 563 "../pars.fsy"
                 : 'interactiveSeparators));
# 2976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 568 "../pars.fsy"
                                     
                   )
# 568 "../pars.fsy"
                 : 'interactiveSeparator));
# 2986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 "../pars.fsy"
                                     
                   )
# 569 "../pars.fsy"
                 : 'interactiveSeparator));
# 2996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 579 "../pars.fsy"
                            ParsedHashDirective (_2,_3,lhs parseState) 
                   )
# 579 "../pars.fsy"
                 : 'hashDirective));
# 3008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 585 "../pars.fsy"
                            [] 
                   )
# 585 "../pars.fsy"
                 : 'hashDirectiveArgs));
# 3018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 588 "../pars.fsy"
                            _1 @ [_2] 
                   )
# 588 "../pars.fsy"
                 : 'hashDirectiveArgs));
# 3030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 594 "../pars.fsy"
                             _1 
                   )
# 594 "../pars.fsy"
                 : 'hashDirectiveArg));
# 3041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 603 "../pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 603 "../pars.fsy"
                 : Ast.ParsedSigFile));
# 3053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 606 "../pars.fsy"
                            _1 
                   )
# 606 "../pars.fsy"
                 : Ast.ParsedSigFile));
# 3065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 612 "../pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedSigFile([],[emptySigFileFrag]) 
                   )
# 612 "../pars.fsy"
                 : Ast.ParsedSigFile));
# 3077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 620 "../pars.fsy"
                             _3.Lid,grabXmlDoc(parseState,1),_2 
                   )
# 620 "../pars.fsy"
                 : 'moduleIntro));
# 3090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 626 "../pars.fsy"
                             _2.Lid,grabXmlDoc(parseState,1)  
                   )
# 626 "../pars.fsy"
                 : 'namespaceIntro));
# 3101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 632 "../pars.fsy"
                             ParsedSigFile([],[ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 632 "../pars.fsy"
                 : 'fileNamespaceSpecs));
# 3112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 635 "../pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedSigFile(decls, _2) 
                   )
# 635 "../pars.fsy"
                 : 'fileNamespaceSpecs));
# 3137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 653 "../pars.fsy"
                            _1 :: _2 
                   )
# 653 "../pars.fsy"
                 : 'fileNamespaceSpecList));
# 3149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 656 "../pars.fsy"
                            [_1] 
                   )
# 656 "../pars.fsy"
                 : 'fileNamespaceSpecList));
# 3160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 660 "../pars.fsy"
                            let path,xml = _1 in (_3 (path,xml)) 
                   )
# 660 "../pars.fsy"
                 : 'fileNamespaceSpec));
# 3173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 666 "../pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 3 4)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid,true, _4, xml,_1,vis,m)))  
                   )
# 666 "../pars.fsy"
                 : 'fileModuleSpec));
# 3194 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 676 "../pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedSigFileFragment.NamespaceFragment(path,false, _1, xml,[],m))  
                   )
# 676 "../pars.fsy"
                 : 'fileModuleSpec));
# 3209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 685 "../pars.fsy"
                             _1 
                   )
# 685 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 688 "../pars.fsy"
                             _2 
                   )
# 688 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 691 "../pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 691 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 697 "../pars.fsy"
                              [] 
                   )
# 697 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 702 "../pars.fsy"
                             _1 
                   )
# 702 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 705 "../pars.fsy"
                             [] 
                   )
# 705 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 708 "../pars.fsy"
                             [] 
                   )
# 708 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 713 "../pars.fsy"
                            _1 :: _3 
                   )
# 713 "../pars.fsy"
                 : 'moduleSpfns));
# 3303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 716 "../pars.fsy"
                            (* silent recovery *) _3 
                   )
# 716 "../pars.fsy"
                 : 'moduleSpfns));
# 3315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 719 "../pars.fsy"
                            [_1] 
                   )
# 719 "../pars.fsy"
                 : 'moduleSpfns));
# 3327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 724 "../pars.fsy"
                             SynModuleSigDecl.HashDirective (_1,rhs2 parseState 1 1)  
                   )
# 724 "../pars.fsy"
                 : 'moduleSpfn));
# 3338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 727 "../pars.fsy"
                             _1 
                   )
# 727 "../pars.fsy"
                 : 'moduleSpfn));
# 3349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 730 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                             if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                             if isSome(vis)           then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate());
                             SynModuleSigDecl.ModuleAbbrev(List.head path,_5,rhs2 parseState 3 5) 
                   )
# 730 "../pars.fsy"
                 : 'moduleSpfn));
# 3369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 738 "../pars.fsy"
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName());
                             let info = ComponentInfo(_1,[],[],path,xml,false,vis,rhs parseState 3)
                             if isSome(_2) then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             SynModuleSigDecl.NestedModule(info,_5,rhs2 parseState 3 5) 
                   )
# 738 "../pars.fsy"
                 : 'moduleSpfn));
# 3388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 745 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (TypeDefnSig(ComponentInfo(cas,a,cs,b,c,d,d2,d3),e,f,g)),rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h::t -> h,t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))in 
                             SynModuleSigDecl.Types (tc::rest,rhs parseState 3) 
                   )
# 745 "../pars.fsy"
                 : 'moduleSpfn));
# 3407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 754 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionSig(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let ec = (ExceptionSig(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
# 754 "../pars.fsy"
                 : 'moduleSpfn));
# 3423 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 760 "../pars.fsy"
                             SynModuleSigDecl.Open (_2.Lid, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 760 "../pars.fsy"
                 : 'moduleSpfn));
# 3434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 764 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attr1,attr2,isInline,isMutable,vis2,id,doc,explicitValTyparDecls,(ty,arity),konst = (_1),(_4),(_5),(_6),(_7),(_8),grabXmlDoc(parseState,3),(_9),(_11),(_12) 
                             if nonNil attr2 then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(),rhs parseState 4));
                             let m = rhs2 parseState 3 11 
                             let valSpfn = ValSpfn((attr1@attr2),id,explicitValTyparDecls,ty,arity,isInline,isMutable,doc, vis2,konst,m) 
                             SynModuleSigDecl.Val(valSpfn,m)
                           
                   )
# 764 "../pars.fsy"
                 : 'valSpfn));
# 3460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 775 "../pars.fsy"
                             None 
                   )
# 775 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 778 "../pars.fsy"
                             Some(_2) 
                   )
# 778 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 781 "../pars.fsy"
                             Some(_3) 
                   )
# 781 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 789 "../pars.fsy"
                             _2 
                   )
# 789 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 793 "../pars.fsy"
                             _3 
                   )
# 793 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 797 "../pars.fsy"
                             _2 
                   )
# 797 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 803 "../pars.fsy"
                            _2 
                   )
# 803 "../pars.fsy"
                 : Ast.SynTypeDefnSig list));
# 3542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 808 "../pars.fsy"
                            _1 :: _3 
                   )
# 808 "../pars.fsy"
                 : 'tyconSpfnList));
# 3554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 811 "../pars.fsy"
                            [_1] 
                   )
# 811 "../pars.fsy"
                 : 'tyconSpfnList));
# 3565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 817 "../pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
# 817 "../pars.fsy"
                 : 'tyconSpfn));
# 3578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 820 "../pars.fsy"
                             TypeDefnSig(_1,SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState),lhs parseState),_2,lhs parseState) 
                   )
# 820 "../pars.fsy"
                 : 'tyconSpfn));
# 3590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 834 "../pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 834 "../pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 839 "../pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
# 839 "../pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 847 "../pars.fsy"
                            let m = _1.Range 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.Simple (_1,m),augmentation,m)) 
                   )
# 847 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3635 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 852 "../pars.fsy"
                            let m = lhs parseState 
                            let needsCheck,(kind,decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then 
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (kind,decls,m),augmentation,m)) 
                   )
# 852 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 860 "../pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m),AbstractMemberFlags MemberKind.Member,m) 
                            (fun nameRange nameInfo augmentation -> 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[],m)) 
                   )
# 860 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 871 "../pars.fsy"
                            let needsCheck,decls = _1 
                            needsCheck,(TyconUnspecified, decls) 
                   )
# 871 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 875 "../pars.fsy"
                            false,(_1,_2) 
                   )
# 875 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 878 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct());
                            false,(_1,_2) 
                   )
# 878 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 882 "../pars.fsy"
                            // silent recovery 
                            false,(_1,[]) 
                   )
# 882 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 889 "../pars.fsy"
                            true, _2 
                   )
# 889 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 892 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature());
                            false, _2 
                   )
# 892 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 897 "../pars.fsy"
                            false, _2 
                   )
# 897 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 900 "../pars.fsy"
                            false, _2 
                   )
# 900 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 906 "../pars.fsy"
                             _2 
                   )
# 906 "../pars.fsy"
                 : 'classSpfnBlock));
# 3777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 909 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature());
                             _2 
                   )
# 909 "../pars.fsy"
                 : 'classSpfnBlock));
# 3790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 912 "../pars.fsy"
                             _1 
                   )
# 912 "../pars.fsy"
                 : 'classSpfnBlock));
# 3801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 917 "../pars.fsy"
                            _1 
                   )
# 917 "../pars.fsy"
                 : 'classSpfnMembers));
# 3812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 920 "../pars.fsy"
                            [] 
                   )
# 920 "../pars.fsy"
                 : 'classSpfnMembers));
# 3822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 926 "../pars.fsy"
                            _1 :: _3 
                   )
# 926 "../pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
# 3835 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 932 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let isInline,doc,vis2,id,explicitValTyparDecls,(ty,arity),optLiteralValue = _4,grabXmlDoc(parseState,3),_5,_6,_7,_9,_11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, vis2,optLiteralValue,wholeRange)
                            let _,flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity),wholeRange) 
                   )
# 932 "../pars.fsy"
                 : 'classMemberSpfn));
# 3866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 946 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Interface (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 946 "../pars.fsy"
                 : 'classMemberSpfn));
# 3881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 950 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Inherit (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 950 "../pars.fsy"
                 : 'classMemberSpfn));
# 3895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 954 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let fld = _4 _1 false 
                            SynMemberSig.ValField(fld,rhs2 parseState 3 4) 
                   )
# 954 "../pars.fsy"
                 : 'classMemberSpfn));
# 3910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 959 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.ValField(_5 _1 true,rhs2 parseState 3 5) 
                   )
# 959 "../pars.fsy"
                 : 'classMemberSpfn));
# 3924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 963 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.NestedType(_5,rhs2 parseState 3 5) 
                   )
# 963 "../pars.fsy"
                 : 'classMemberSpfn));
# 3939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 967 "../pars.fsy"
                            let vis,doc,(ty,valSynInfo) = _2,grabXmlDoc(parseState,3),_5 
                            let m = unionRanges (rhs parseState 3) ty.Range 
                            let isInline = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags,m) 
                   )
# 967 "../pars.fsy"
                 : 'classMemberSpfn));
# 3956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 977 "../pars.fsy"
                           None, MemberKind.Member 
                   )
# 977 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 980 "../pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 980 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3977 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 983 "../pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 983 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3988 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 986 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            Some (rhs2 parseState 1 2), _2 
                   )
# 986 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 993 "../pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 993 "../pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 999 "../pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 999 "../pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1006 "../pars.fsy"
                                       _1 
                   )
# 1006 "../pars.fsy"
                 : 'memberSpecFlags));
# 4041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1007 "../pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1007 "../pars.fsy"
                 : 'memberSpecFlags));
# 4051 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1008 "../pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1008 "../pars.fsy"
                 : 'memberSpecFlags));
# 4061 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1014 "../pars.fsy"
                            ExceptionSig(_1,_2,lhs parseState) 
                   )
# 1014 "../pars.fsy"
                 : 'exconSpfn));
# 4073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1020 "../pars.fsy"
                            _2 
                   )
# 1020 "../pars.fsy"
                 : 'opt_classSpfn));
# 4085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1023 "../pars.fsy"
                            [] 
                   )
# 1023 "../pars.fsy"
                 : 'opt_classSpfn));
# 4095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1032 "../pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 1032 "../pars.fsy"
                 : Ast.ParsedImplFile));
# 4107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1035 "../pars.fsy"
                            _1 
                   )
# 1035 "../pars.fsy"
                 : Ast.ParsedImplFile));
# 4119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1041 "../pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedImplFile([],[emptyImplFileFrag]) 
                   )
# 1041 "../pars.fsy"
                 : Ast.ParsedImplFile));
# 4131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1048 "../pars.fsy"
                             ParsedImplFile([], [ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 1048 "../pars.fsy"
                 : 'fileNamespaceImpls));
# 4142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1051 "../pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedImplFile(decls, _2) 
                   )
# 1051 "../pars.fsy"
                 : 'fileNamespaceImpls));
# 4167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1070 "../pars.fsy"
                            _1 :: _2 
                   )
# 1070 "../pars.fsy"
                 : 'fileNamespaceImplList));
# 4179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1073 "../pars.fsy"
                            [_1] 
                   )
# 1073 "../pars.fsy"
                 : 'fileNamespaceImplList));
# 4190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1079 "../pars.fsy"
                            let path,xml = _1 in (_3 (path,xml)) 
                   )
# 1079 "../pars.fsy"
                 : 'fileNamespaceImpl));
# 4203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1085 "../pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (m2, _4) ||> unionRangeWithListBy (fun modu -> modu.Range)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid,true, _4, xml,_1,vis,m))) 
                   )
# 1085 "../pars.fsy"
                 : 'fileModuleImpl));
# 4224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1095 "../pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1,m)  
                             | _ -> ParsedImplFileFragment.NamespaceFragment(path,false, _1, xml,[],m)) 
                   )
# 1095 "../pars.fsy"
                 : 'fileModuleImpl));
# 4239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1105 "../pars.fsy"
                            _2 
                   )
# 1105 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1108 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                            _2 
                   )
# 1108 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1113 "../pars.fsy"
                            []  
                   )
# 1113 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4277 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1116 "../pars.fsy"
                            _1 
                   )
# 1116 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1122 "../pars.fsy"
                            _1 
                   )
# 1122 "../pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1125 "../pars.fsy"
                            [] 
                   )
# 1125 "../pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1132 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
# 1132 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1137 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1137 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4342 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1142 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1142 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1147 "../pars.fsy"
                             _1 
                   )
# 1147 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1150 "../pars.fsy"
                            if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
# 1150 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1156 "../pars.fsy"
                             _1 @ _2 
                   )
# 1156 "../pars.fsy"
                 : 'moduleDefns));
# 4391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1159 "../pars.fsy"
                             _1 @ _3 
                   )
# 1159 "../pars.fsy"
                 : 'moduleDefns));
# 4404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1162 "../pars.fsy"
                             _1 
                   )
# 1162 "../pars.fsy"
                 : 'moduleDefns));
# 4415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1165 "../pars.fsy"
                             _1 
                   )
# 1165 "../pars.fsy"
                 : 'moduleDefns));
# 4427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1168 "../pars.fsy"
                             _3 
                   )
# 1168 "../pars.fsy"
                 : 'moduleDefns));
# 4439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1174 "../pars.fsy"
                             _1  
                   )
# 1174 "../pars.fsy"
                 : 'moduleDefnOrDirective));
# 4450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1177 "../pars.fsy"
                             [ SynModuleDecl.HashDirective (_1,rhs2 parseState 1 1) ] 
                   )
# 1177 "../pars.fsy"
                 : 'moduleDefnOrDirective));
# 4461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1186 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             parseState.ResetSynArgNameGenerator();
                             let (BindingSetPreAttrs(_,_,_,_,mWhole)) = _3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole)  
                   )
# 1186 "../pars.fsy"
                 : 'moduleDefn));
# 4477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1193 "../pars.fsy"
                             let hwlb,m = _3
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             parseState.ResetSynArgNameGenerator();
                             mkDefnBindings (m,hwlb,_1,_2,m)  
                   )
# 1193 "../pars.fsy"
                 : 'moduleDefn));
# 4493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1200 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole) 
                   )
# 1200 "../pars.fsy"
                 : 'moduleDefn));
# 4508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1206 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let      (TypeDefn(ComponentInfo(cas   ,a,cs,b,c,d,d2,d3),e,f,g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 1206 "../pars.fsy"
                 : 'moduleDefn));
# 4527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1214 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionDefn(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (ExceptionDefn(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
# 1214 "../pars.fsy"
                 : 'moduleDefn));
# 4544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1222 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attribs,(path,xml,vis) = _1,_3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                                 if isSome vis            then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate());
                                 [ SynModuleDecl.ModuleAbbrev(List.head path,eqn,(rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 let info = ComponentInfo(attribs,[],[],path,xml,false,vis,rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info,def,false,(rhs2 parseState 3 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
# 1222 "../pars.fsy"
                 : 'moduleDefn));
# 4570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1238 "../pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(),rhs parseState 1))
                             [] 
                   )
# 1238 "../pars.fsy"
                 : 'moduleDefn));
# 4583 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1243 "../pars.fsy"
                             [SynModuleDecl.Open(_1, _1.Range)] 
                   )
# 1243 "../pars.fsy"
                 : 'moduleDefn));
# 4594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1251 "../pars.fsy"
                            _2.Lid 
                   )
# 1251 "../pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4606 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1254 "../pars.fsy"
                            _1.Lid  
                   )
# 1254 "../pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1260 "../pars.fsy"
                            Choice2Of2 _2  
                   )
# 1260 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1263 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
# 1263 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1267 "../pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation , the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_,LongOrSingleIdent(false,LongIdentWithDots(path,_),None,_),_) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
# 1267 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1293 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                            Choice2Of2 _2 
                   )
# 1293 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1298 "../pars.fsy"
                            Choice2Of2 [] 
                   )
# 1298 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1301 "../pars.fsy"
                            Choice2Of2 _1 
                   )
# 1301 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1304 "../pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
# 1304 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1310 "../pars.fsy"
                            _2 
                   )
# 1310 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1313 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                            _2 
                   )
# 1313 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4749 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1317 "../pars.fsy"
                            [] 
                   )
# 1317 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1322 "../pars.fsy"
                            _2 
                   )
# 1322 "../pars.fsy"
                 : Ast.SynMemberDefns));
# 4772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1328 "../pars.fsy"
                             _1 
                   )
# 1328 "../pars.fsy"
                 : 'opt_attributes));
# 4783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1331 "../pars.fsy"
                             [] 
                   )
# 1331 "../pars.fsy"
                 : 'opt_attributes));
# 4793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1336 "../pars.fsy"
                            _1 
                   )
# 1336 "../pars.fsy"
                 : 'attributes));
# 4804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1339 "../pars.fsy"
                            _1 @ _2 
                   )
# 1339 "../pars.fsy"
                 : 'attributes));
# 4816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1345 "../pars.fsy"
                              _2 
                   )
# 1345 "../pars.fsy"
                 : 'attributeList));
# 4829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1348 "../pars.fsy"
                              [] 
                   )
# 1348 "../pars.fsy"
                 : 'attributeList));
# 4840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1351 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             _2 
                   )
# 1351 "../pars.fsy"
                 : 'attributeList));
# 4854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1355 "../pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             [] 
                   )
# 1355 "../pars.fsy"
                 : 'attributeList));
# 4866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1362 "../pars.fsy"
                            [_1] 
                   )
# 1362 "../pars.fsy"
                 : 'attributeListElements));
# 4877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1365 "../pars.fsy"
                            _1 @ [_3] 
                   )
# 1365 "../pars.fsy"
                 : 'attributeListElements));
# 4890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1372 "../pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 1372 "../pars.fsy"
                 : 'attribute));
# 4904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1377 "../pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 1377 "../pars.fsy"
                 : 'attribute));
# 4919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1382 "../pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 1382 "../pars.fsy"
                 : 'attribute));
# 4935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1389 "../pars.fsy"
                             Some(ident("module",(rhs parseState 1))) 
                   )
# 1389 "../pars.fsy"
                 : 'attributeTarget));
# 4946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1392 "../pars.fsy"
                             Some(ident("type",(rhs parseState 1))) 
                   )
# 1392 "../pars.fsy"
                 : 'attributeTarget));
# 4957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1394 "../pars.fsy"
                                       Some(_1) 
                   )
# 1394 "../pars.fsy"
                 : 'attributeTarget));
# 4968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1398 "../pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError());
                             Some(ident("return",(rhs parseState 1))) 
                   )
# 1398 "../pars.fsy"
                 : 'attributeTarget));
# 4980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1403 "../pars.fsy"
                                           (true,StaticMemberFlags) 
                   )
# 1403 "../pars.fsy"
                 : 'memberFlags));
# 4990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1404 "../pars.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 1404 "../pars.fsy"
                 : 'memberFlags));
# 5000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1405 "../pars.fsy"
                                           (false,OverrideMemberFlags) 
                   )
# 1405 "../pars.fsy"
                 : 'memberFlags));
# 5010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1406 "../pars.fsy"
                                          (false,OverrideMemberFlags) 
                   )
# 1406 "../pars.fsy"
                 : 'memberFlags));
# 5020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1411 "../pars.fsy"
                            let typars,lid,fixity,tpcs1,vis,xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1,typars,(tpcs1 @ tpcs2),lid,xmlDoc,fixity,vis,rangeOfLid lid)  
                   )
# 1411 "../pars.fsy"
                 : 'typeNameInfo));
# 5035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1418 "../pars.fsy"
                            _2 :: _3 
                   )
# 1418 "../pars.fsy"
                 : 'tyconDefnList));
# 5047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "../pars.fsy"
                            [] 
                   )
# 1420 "../pars.fsy"
                 : 'tyconDefnList));
# 5057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1425 "../pars.fsy"
                            TypeDefn(_1,SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range),_1.Range),[],_1.Range) 
                   )
# 1425 "../pars.fsy"
                 : 'tyconDefn));
# 5068 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1428 "../pars.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
# 1428 "../pars.fsy"
                 : 'tyconDefn));
# 5084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1435 "../pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            TypeDefn(_1,SynTypeDefnRepr.ObjectModel(TyconAugmentation,[],m),_2,m) 
                   )
# 1435 "../pars.fsy"
                 : 'tyconDefn));
# 5097 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1439 "../pars.fsy"
                            let vis,spats, az = _3,_5,_6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr,members) = _8 nameRange
                            let (ComponentInfo(_,_,_,lid,_,_,_,_)) = _1 
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis,_2,spats,az,rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k,cspec,m) -> SynTypeDefnRepr.ObjectModel (k,memberCtorPattern::cspec,m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            
                            TypeDefn(_1,tcDefRepr,members,mWhole) 
                   )
# 1439 "../pars.fsy"
                 : 'tyconDefn));
# 5126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1465 "../pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1465 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1469 "../pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
# 1469 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1474 "../pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
# 1474 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1483 "../pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation) 
                   )
# 1483 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1488 "../pars.fsy"
                            let needsCheck,(kind,decls),mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                SynTypeDefnRepr.ObjectModel (kind,decls,m),augmentation) 
                   )
# 1488 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1499 "../pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags MemberKind.Member,m) 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[]) 
                   )
# 1499 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1511 "../pars.fsy"
                            let needsCheck,decls,mopt = _1 
                            needsCheck,(TyconUnspecified, decls),mopt 
                   )
# 1511 "../pars.fsy"
                 : 'tyconClassDefn));
# 5232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1515 "../pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1515 "../pars.fsy"
                 : 'tyconClassDefn));
# 5245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1519 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1519 "../pars.fsy"
                 : 'tyconClassDefn));
# 5260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1524 "../pars.fsy"
                            // silent recovery 
                            false,(_1,[]),Some(rhs parseState 1) 
                   )
# 1524 "../pars.fsy"
                 : 'tyconClassDefn));
# 5272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1531 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false,_2,mopt 
                   )
# 1531 "../pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1539 "../pars.fsy"
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
# 1539 "../pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5305 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1549 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                             _2 
                   )
# 1549 "../pars.fsy"
                 : 'classDefnBlock));
# 5318 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1553 "../pars.fsy"
                             _2 
                   )
# 1553 "../pars.fsy"
                 : 'classDefnBlock));
# 5330 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1556 "../pars.fsy"
                             _1 
                   )
# 1556 "../pars.fsy"
                 : 'classDefnBlock));
# 5341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1562 "../pars.fsy"
                            _1 
                   )
# 1562 "../pars.fsy"
                 : 'classDefnMembers));
# 5352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1566 "../pars.fsy"
                            _2 
                   )
# 1566 "../pars.fsy"
                 : 'classDefnMembers));
# 5363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1569 "../pars.fsy"
                            [] 
                   )
# 1569 "../pars.fsy"
                 : 'classDefnMembers));
# 5373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1575 "../pars.fsy"
                            _1 @  _3 
                   )
# 1575 "../pars.fsy"
                 : 'classDefnMembersAtLeastOne));
# 5386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1581 "../pars.fsy"
                            _2  
                   )
# 1581 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1584 "../pars.fsy"
                            _2  
                   )
# 1584 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1587 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            _2  
                   )
# 1587 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5420 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1593 "../pars.fsy"
                            [_1]  
                   )
# 1593 "../pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1595 "../pars.fsy"
                            [_1;_3] 
                   )
# 1595 "../pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1599 "../pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1,_2,_3,_4,_6,mRhs) 
                   )
# 1599 "../pars.fsy"
                 : 'classDefnMemberGetSetElement));
# 5459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1607 "../pars.fsy"
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder attrs -> 
                                  [ SynMemberDefn.Member (bindingBuilder (vis,_1,false,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,_5,mRhs,[],attrs,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs) ]) 
                   )
# 1607 "../pars.fsy"
                 : 'memberCore));
# 5478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1616 "../pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_,_,_,_,_,m2) -> m2) 
                            let propertyNameBindingBuilder,_ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline,optAttrs,(bindingBuilder,mBindLhs),optReturnType,expr,exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs = optAttrs |> List.map (fun (a:SynAttribute) -> { a with AppliesToGetterAndSetter=true })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed,optInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id],_),_,_,_,_,_) ->  id.idText
                                                        | SynPat.Named (_,nm,_,_,_) ->  nm.idText
                                                        | SynPat.Typed (p,_,_) ->  go p
                                                        | SynPat.Attrib (p,_,_) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then (
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some MemberKind.PropertyGet
                                              ) else if getset = "set" then (
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some MemberKind.PropertySet
                                              ) else 
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it, 
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(),mBindLhs))
                                        | None -> ()
                                        end;
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet,_ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis,isInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding 
                                     
                                        let (SynValData(_,valSynInfo,_)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = if List.length valueArg = 1 then valueArg else SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | MemberKind.PropertyGet,SynValInfo ([],_ret),         false
                                            | MemberKind.PropertyGet,SynValInfo ([_],_ret), true  -> 
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet,SynValInfo (thisArg::indexOrUnitArgs::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([thisArg; indexOrUnitArgs],ret)
                                            | MemberKind.PropertyGet,SynValInfo (indexOrUnitArgs::rest,ret),          false ->
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([indexOrUnitArgs],ret)
                                            | MemberKind.PropertySet,SynValInfo ([thisArg;valueArg],ret),                 true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (thisArg::indexArgs::valueArg::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([valueArg],ret),                         false -> 
                                                SynValInfo ([adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (indexArgs::valueArg::rest,ret),          _     -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg],ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidProperty())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo,None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding, 
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis,optInline,isMutable,mBindLhs,spBind,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_,_,_,_,_,doc2,_,bindingPatOuter,_,_,_,_)) = bindingOuter 
                                            
                                        
                                            let lidOuter,lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid,None,None, SynConstructorArgs.Pats [],lidVisOuter,m) ->  lid,lidVisOuter
                                                | SynPat.Named (_,id,_,visOuter,m) -> LongIdentWithDots([id],[]),visOuter
                                                | p -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner,lidVisOuter with 
                                                | None,None -> None
                                                | Some lidVisInner,None | None,Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(),mBindLhs));
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id],_),_,tyargs,SynConstructorArgs.Pats args,lidVisInner,m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (indexPats,_),indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(indexPats@[valuePat],unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(args,unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText,id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter,Some(id),tyargs, SynConstructorArgs.Pats args,mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Named (_,nm,_,lidVisInner,m) ->  SynPat.LongIdent (lidOuter,None,None, SynConstructorArgs.Pats [], mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Typed (p,ty,m) ->  SynPat.Typed(go p,ty,m)
                                                | SynPat.Attrib (p,attribs,m) ->  SynPat.Attrib(go p,attribs,m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv,PreXmlDoc.Merge doc2 doc
                                        Some <| SynMemberDefn.Member (Binding (vis, NormalBinding, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mBindLhs, spBind),mWhole)))
                            
                   )
# 1616 "../pars.fsy"
                 : 'memberCore));
# 5637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1790 "../pars.fsy"
                                   
                   )
# 1790 "../pars.fsy"
                 : 'abstractMemberFlags));
# 5647 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1791 "../pars.fsy"
                                          
                   )
# 1791 "../pars.fsy"
                 : 'abstractMemberFlags));
# 5657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1797 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(false,None,_1,_2,_3)] 
                   )
# 1797 "../pars.fsy"
                 : 'classDefnMember));
# 5671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1801 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(true,Some (rhs parseState 3),_1,_2,_4)] 
                   )
# 1801 "../pars.fsy"
                 : 'classDefnMember));
# 5685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1805 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let _,flags = _3
                            _4 _2 flags _1 
                   )
# 1805 "../pars.fsy"
                 : 'classDefnMember));
# 5702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1810 "../pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(),rhs parseState 3));
                             let mWhole = 
                                 match _5 with
                                 | None -> rhs2 parseState 3 4
                                 | Some(mems) -> (rhs2 parseState 3 4, mems) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                             [ SynMemberDefn.Interface (_4, _5, mWhole) ] 
                   )
# 1810 "../pars.fsy"
                 : 'classDefnMember));
# 5723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1819 "../pars.fsy"
                            let ty,arity = _8
                            let isInline,doc,id,explicitValTyparDecls = _4,grabXmlDoc(parseState,3),_5,_6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(),wholeRange));
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, None,None,wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
# 1819 "../pars.fsy"
                 : 'classDefnMember));
# 5753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1833 "../pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(),rhs parseState 1));
                             [ _3 ] 
                   )
# 1833 "../pars.fsy"
                 : 'classDefnMember));
# 5768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1838 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             _3 None _1 false 
                   )
# 1838 "../pars.fsy"
                 : 'classDefnMember));
# 5783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1842 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             _4 (Some (rhs parseState 3)) _1 true  
                   )
# 1842 "../pars.fsy"
                 : 'classDefnMember));
# 5798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1846 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let isStatic, flags = _3
                             _4 _1 isStatic flags 
                   )
# 1846 "../pars.fsy"
                 : 'classDefnMember));
# 5815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1851 "../pars.fsy"
                             let m = unionRanges (rhs2 parseState 3 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4],SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"],[]),None,Some noInferredTypars, SynConstructorArgs.Pats [_4],vis,rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false);
                             [ SynMemberDefn.Member(Binding (None,NormalBinding,false,false,_1,grabXmlDoc(parseState,3),valSynData, declPat,None,expr,m,NoSequencePointAtInvisibleBinding),m) ] 
                   )
# 1851 "../pars.fsy"
                 : 'classDefnMember));
# 5838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1861 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             [ SynMemberDefn.NestedType(_5,None,rhs2 parseState 3 5) ] 
                   )
# 1861 "../pars.fsy"
                 : 'classDefnMember));
# 5853 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1868 "../pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState,4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun mLeft attribs isStatic -> 
                                 let mValDecl = match mLeft with None -> mValDecl | Some m -> unionRanges m mValDecl
                                 let fld = Field(attribs,isStatic,Some _4,_6,_2,doc,_3,mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
# 1868 "../pars.fsy"
                 : 'valDefnDecl));
# 5873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1880 "../pars.fsy"
                             let doc = grabXmlDoc(parseState,5)
                             let mValDecl = unionRanges (rhs parseState 1) _7.Range
                             let mGetSetOpt, getSet = _8
                             if _2 then errorR(Error(FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet(),rhs parseState 3))
                             (fun attribs isStatic flags -> 
                                 [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, mValDecl) ]) 
                   )
# 1880 "../pars.fsy"
                 : 'autoPropsDefnDecl));
# 5894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1890 "../pars.fsy"
                                        None 
                   )
# 1890 "../pars.fsy"
                 : 'opt_typ));
# 5904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1891 "../pars.fsy"
                                      Some _2 
                   )
# 1891 "../pars.fsy"
                 : 'opt_typ));
# 5915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1895 "../pars.fsy"
                                              let (LongIdentWithDots(lid,dotms)) = _3 in (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 1895 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 5926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1896 "../pars.fsy"
                                  (None,_1) 
                   )
# 1896 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 5937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1897 "../pars.fsy"
                                         (Some(_1), _2) 
                   )
# 1897 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 5949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1901 "../pars.fsy"
                                       None 
                   )
# 1901 "../pars.fsy"
                 : 'opt_access));
# 5959 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1902 "../pars.fsy"
                                  Some(_1) 
                   )
# 1902 "../pars.fsy"
                 : 'opt_access));
# 5970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1906 "../pars.fsy"
                                    SynAccess.Private 
                   )
# 1906 "../pars.fsy"
                 : 'access));
# 5980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1907 "../pars.fsy"
                                    SynAccess.Public 
                   )
# 1907 "../pars.fsy"
                 : 'access));
# 5990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1908 "../pars.fsy"
                                    SynAccess.Internal 
                   )
# 1908 "../pars.fsy"
                 : 'access));
# 6000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1912 "../pars.fsy"
                                       Some(_1) 
                   )
# 1912 "../pars.fsy"
                 : 'opt_declVisibility));
# 6011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1913 "../pars.fsy"
                                       None 
                   )
# 1913 "../pars.fsy"
                 : 'opt_declVisibility));
# 6021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1917 "../pars.fsy"
                                                                  Some(_2) 
                   )
# 1917 "../pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1918 "../pars.fsy"
                                                                  None 
                   )
# 1918 "../pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1922 "../pars.fsy"
                                                       _2 
                   )
# 1922 "../pars.fsy"
                 : 'opt_classDefn));
# 6055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1923 "../pars.fsy"
                                                       [] 
                   )
# 1923 "../pars.fsy"
                 : 'opt_classDefn));
# 6065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1929 "../pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2,_3,mDecl) 
                   )
# 1929 "../pars.fsy"
                 : 'inheritsDefn));
# 6078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1933 "../pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2,_4,_5,mDecl) 
                   )
# 1933 "../pars.fsy"
                 : 'inheritsDefn));
# 6093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1937 "../pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None,mDecl) 
                   )
# 1937 "../pars.fsy"
                 : 'inheritsDefn));
# 6106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1942 "../pars.fsy"
                                  Some(_1) 
                   )
# 1942 "../pars.fsy"
                 : 'optAsSpec));
# 6117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1943 "../pars.fsy"
                                  None 
                   )
# 1943 "../pars.fsy"
                 : 'optAsSpec));
# 6127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1946 "../pars.fsy"
                                    _2 
                   )
# 1946 "../pars.fsy"
                 : 'asSpec));
# 6138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1950 "../pars.fsy"
                                    Some(_1) 
                   )
# 1950 "../pars.fsy"
                 : 'optBaseSpec));
# 6149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1951 "../pars.fsy"
                                  None 
                   )
# 1951 "../pars.fsy"
                 : 'optBaseSpec));
# 6159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1956 "../pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1956 "../pars.fsy"
                 : 'baseSpec));
# 6172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1961 "../pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1961 "../pars.fsy"
                 : 'baseSpec));
# 6183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1968 "../pars.fsy"
                             _2 
                   )
# 1968 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers());
                             _2 
                   )
# 1971 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1975 "../pars.fsy"
                             _1 
                   )
# 1975 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1981 "../pars.fsy"
                             _1 @  _3 
                   )
# 1981 "../pars.fsy"
                 : 'objectImplementationMembers));
# 6232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1984 "../pars.fsy"
                             _1 
                   )
# 1984 "../pars.fsy"
                 : 'objectImplementationMembers));
# 6244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1990 "../pars.fsy"
                            _3 None OverrideMemberFlags _1 
                   )
# 1990 "../pars.fsy"
                 : 'objectImplementationMember));
# 6258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1993 "../pars.fsy"
                            _3 _1 false OverrideMemberFlags 
                   )
# 1993 "../pars.fsy"
                 : 'objectImplementationMember));
# 6272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1996 "../pars.fsy"
                             [] 
                   )
# 1996 "../pars.fsy"
                 : 'objectImplementationMember));
# 6284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1999 "../pars.fsy"
                             [] 
                   )
# 1999 "../pars.fsy"
                 : 'objectImplementationMember));
# 6297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2003 "../pars.fsy"
                                    
                   )
# 2003 "../pars.fsy"
                 : 'memberOrOverride));
# 6307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2004 "../pars.fsy"
                                      
                   )
# 2004 "../pars.fsy"
                 : 'memberOrOverride));
# 6317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2012 "../pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ThereWereSignificantParseErrorsSoDoNotTypecheckThisNode, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
# 2012 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2017 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            if isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 2017 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2023 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_,_,_,_,_,m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(),m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2, 
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
# 2023 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6376 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2041 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            SynTypeDefnSimpleRepr.Record (_2,_3,lhs parseState) 
                   )
# 2041 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyTyconRepr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2046 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            libraryOnlyError (lhs parseState);
                            if isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            _4 
                   )
# 2046 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2055 "../pars.fsy"
                            _2 
                   )
# 2055 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2058 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 2058 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6432 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2062 "../pars.fsy"
                            [] 
                   )
# 2062 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2066 "../pars.fsy"
                            libraryOnlyError (lhs parseState);
                            let lhsm = lhs parseState 
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (ParseAssemblyCodeType _2 (rhs parseState 2),lhsm) 
                   )
# 2066 "../pars.fsy"
                 : 'inlineAssemblyTyconRepr));
# 6456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2071 "../pars.fsy"
                                     TyconClass 
                   )
# 2071 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2072 "../pars.fsy"
                                     TyconInterface 
                   )
# 2072 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2073 "../pars.fsy"
                                     TyconStruct 
                   )
# 2073 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6486 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2076 "../pars.fsy"
                                     
                   )
# 2076 "../pars.fsy"
                 : 'interfaceMember));
# 6496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2077 "../pars.fsy"
                                                
                   )
# 2077 "../pars.fsy"
                 : 'interfaceMember));
# 6506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2081 "../pars.fsy"
                             [], _2.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 2081 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2084 "../pars.fsy"
                             _2, _3.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 2084 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2087 "../pars.fsy"
                             let tps,tpcs = _3 
                             tps, _2.Lid,true,tpcs,_1,grabXmlDoc(parseState,2) 
                   )
# 2087 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2091 "../pars.fsy"
                                 [ TyparDecl([],_1) ] 
                   )
# 2091 "../pars.fsy"
                 : 'prefixTyparDecls));
# 6556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2092 "../pars.fsy"
                                                        List.rev _2 
                   )
# 2092 "../pars.fsy"
                 : 'prefixTyparDecls));
# 6568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2095 "../pars.fsy"
                                                         _3 :: _1 
                   )
# 2095 "../pars.fsy"
                 : 'typarDeclList));
# 6580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2096 "../pars.fsy"
                                     [_1] 
                   )
# 2096 "../pars.fsy"
                 : 'typarDeclList));
# 6591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2100 "../pars.fsy"
                             TyparDecl(_1,_2) 
                   )
# 2100 "../pars.fsy"
                 : 'typarDecl));
# 6603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2106 "../pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             List.rev _3, _4 
                   )
# 2106 "../pars.fsy"
                 : 'postfixTyparDecls));
# 6619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2113 "../pars.fsy"
                             (List.rev _1,true) 
                   )
# 2113 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2115 "../pars.fsy"
                             (List.rev _1,false) 
                   )
# 2115 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2117 "../pars.fsy"
                             ([],false) 
                   )
# 2117 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2121 "../pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             let tps,flex = _3 
                             SynValTyparDecls(tps,flex,_4) 
                   )
# 2121 "../pars.fsy"
                 : 'explicitValTyparDecls));
# 6668 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2127 "../pars.fsy"
                             _1 
                   )
# 2127 "../pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2129 "../pars.fsy"
                             SynValTyparDecls([],true,[]) 
                   )
# 2129 "../pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2133 "../pars.fsy"
                             Some _1 
                   )
# 2133 "../pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2135 "../pars.fsy"
                             None 
                   )
# 2135 "../pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6710 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2141 "../pars.fsy"
                            [] 
                   )
# 2141 "../pars.fsy"
                 : 'opt_typeConstraints));
# 6720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2143 "../pars.fsy"
                            List.rev _2 
                   )
# 2143 "../pars.fsy"
                 : 'opt_typeConstraints));
# 6731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2148 "../pars.fsy"
                                                              _3 :: _1 
                   )
# 2148 "../pars.fsy"
                 : 'typeConstraints));
# 6743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2149 "../pars.fsy"
                                          [_1] 
                   )
# 2149 "../pars.fsy"
                 : 'typeConstraints));
# 6754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2155 "../pars.fsy"
                             libraryOnlyError (lhs parseState); WhereTyparDefaultsToType(_2,_4,lhs parseState) 
                   )
# 2155 "../pars.fsy"
                 : 'typeConstraint));
# 6766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2158 "../pars.fsy"
                             WhereTyparSubtypeOfType(_1,_3,lhs parseState) 
                   )
# 2158 "../pars.fsy"
                 : 'typeConstraint));
# 6778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2161 "../pars.fsy"
                             WhereTyparIsValueType(_1,lhs parseState) 
                   )
# 2161 "../pars.fsy"
                 : 'typeConstraint));
# 6789 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2164 "../pars.fsy"
                             if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3));  
                             WhereTyparIsReferenceType(_1,lhs parseState) 
                   )
# 2164 "../pars.fsy"
                 : 'typeConstraint));
# 6802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2168 "../pars.fsy"
                             WhereTyparSupportsNull(_1,lhs parseState) 
                   )
# 2168 "../pars.fsy"
                 : 'typeConstraint));
# 6813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2171 "../pars.fsy"
                             WhereTyparSupportsMember([ _1 ],_4,lhs parseState) 
                   )
# 2171 "../pars.fsy"
                 : 'typeConstraint));
# 6826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2174 "../pars.fsy"
                             WhereTyparSupportsMember(List.rev(_2),_6,lhs parseState) 
                   )
# 2174 "../pars.fsy"
                 : 'typeConstraint));
# 6840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2177 "../pars.fsy"
                             let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
# 2177 "../pars.fsy"
                 : 'typeConstraint));
# 6852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2180 "../pars.fsy"
                             match _3 with 
                             | "enum" -> let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2180 "../pars.fsy"
                 : 'typeConstraint));
# 6867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2185 "../pars.fsy"
                             match _3 with 
                             | "comparison" -> WhereTyparIsComparable(_1,lhs parseState)
                             | "equality" -> WhereTyparIsEquatable(_1,lhs parseState)
                             | "unmanaged" -> WhereTyparIsUnmanaged(_1,lhs parseState)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2185 "../pars.fsy"
                 : 'typeConstraint));
# 6883 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2192 "../pars.fsy"
                                             _3::_1 
                   )
# 2192 "../pars.fsy"
                 : 'typarAlts));
# 6895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2193 "../pars.fsy"
                                [_1] 
                   )
# 2193 "../pars.fsy"
                 : 'typarAlts));
# 6906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2200 "../pars.fsy"
                            _2 _1 
                   )
# 2200 "../pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2203 "../pars.fsy"
                            _1 :: _3 _2 
                   )
# 2203 "../pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2206 "../pars.fsy"
                            [_1] 
                   )
# 2206 "../pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2209 "../pars.fsy"
                               grabXmlDoc(parseState,1) 
                   )
# 2209 "../pars.fsy"
                 : 'barAndgrabXmlDoc));
# 6952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2212 "../pars.fsy"
                                                                                  (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
# 2212 "../pars.fsy"
                 : 'attrUnionCaseDecls));
# 6965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2213 "../pars.fsy"
                                             (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
# 2213 "../pars.fsy"
                 : 'attrUnionCaseDecls));
# 6976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2218 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields [],xmlDoc,None,mDecl))) 
                           
                   )
# 2218 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 6993 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2224 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields _5,xmlDoc,None,mDecl))) 
                           
                   )
# 2224 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2230 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             libraryOnlyWarning(lhs parseState);
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFullType _5,xmlDoc,None,mDecl))) 
                           
                   )
# 2230 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2237 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3,_5,xmlDoc,mDecl))) 
                           
                   )
# 2237 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2245 "../pars.fsy"
                             _1 
                   )
# 2245 "../pars.fsy"
                 : 'unionCaseName));
# 7059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2248 "../pars.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 2248 "../pars.fsy"
                 : 'unionCaseName));
# 7070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2251 "../pars.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 2251 "../pars.fsy"
                 : 'unionCaseName));
# 7081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2255 "../pars.fsy"
                             Choice2Of2 (UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,rhs parseState 1)) 
                   )
# 2255 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2258 "../pars.fsy"
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                   )
# 2258 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2261 "../pars.fsy"
                             _1 
                   )
# 2261 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7118 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2265 "../pars.fsy"
                            Choice2Of2 (UnionCase ( [],_1,UnionCaseFields _3,PreXmlDoc.Empty,None,rhs2 parseState 1 3)) 
                   )
# 2265 "../pars.fsy"
                 : 'firstUnionCaseDecl));
# 7130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2268 "../pars.fsy"
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3))  
                   )
# 2268 "../pars.fsy"
                 : 'firstUnionCaseDecl));
# 7143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2271 "../pars.fsy"
                                                                           _1::_3 
                   )
# 2271 "../pars.fsy"
                 : 'unionCaseReprElements));
# 7155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2272 "../pars.fsy"
                                                                                [_1] 
                   )
# 2272 "../pars.fsy"
                 : 'unionCaseReprElements));
# 7166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2275 "../pars.fsy"
                                               mkNamedField(_1, _3) 
                   )
# 2275 "../pars.fsy"
                 : 'unionCaseReprElement));
# 7178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2276 "../pars.fsy"
                                   mkAnonField _1 
                   )
# 2276 "../pars.fsy"
                 : 'unionCaseReprElement));
# 7189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2280 "../pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)); 
                            _1 
                   )
# 2280 "../pars.fsy"
                 : 'unionCaseRepr));
# 7201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2284 "../pars.fsy"
                            _1 
                   )
# 2284 "../pars.fsy"
                 : 'unionCaseRepr));
# 7212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2289 "../pars.fsy"
                            _1 :: _3 
                   )
# 2289 "../pars.fsy"
                 : 'recdFieldDeclList));
# 7225 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2292 "../pars.fsy"
                            [_1] 
                   )
# 2292 "../pars.fsy"
                 : 'recdFieldDeclList));
# 7237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2297 "../pars.fsy"
                            let fld = _2 _1 false 
                            let (Field(a,b,c,d,e,f,vis,g)) = fld 
                            if isSome vis then errorR(Error(FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            Field(a,b,c,d,e,f,None,g)  
                   )
# 2297 "../pars.fsy"
                 : 'recdFieldDecl));
# 7252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2305 "../pars.fsy"
                            let mRhs = rhs2 parseState 3 5 
                            let xmlDoc = grabXmlDoc(parseState,3)
                            (fun attrs stat -> Field(attrs, stat,Some _3,_5,_1,xmlDoc,_2,mRhs)) 
                   )
# 2305 "../pars.fsy"
                 : 'fieldDecl));
# 7268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2313 "../pars.fsy"
                            ExceptionDefn(_1,_2, (_1.Range,_2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
# 2313 "../pars.fsy"
                 : Ast.SynExceptionDefn));
# 7280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2317 "../pars.fsy"
                                     grabXmlDoc(parseState,1) 
                   )
# 2317 "../pars.fsy"
                 : 'exceptionAndGrabDoc));
# 7290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2322 "../pars.fsy"
                            ExceptionDefnRepr(_2,_4,_5,_1,_3,(match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
# 2322 "../pars.fsy"
                 : Ast.SynExceptionRepr));
# 7305 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2327 "../pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2327 "../pars.fsy"
                 : 'exconIntro));
# 7316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2330 "../pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields _3,PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2330 "../pars.fsy"
                 : 'exconIntro));
# 7328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2333 "../pars.fsy"
                                       None 
                   )
# 2333 "../pars.fsy"
                 : 'exconRepr));
# 7338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2334 "../pars.fsy"
                                       Some (_2.Lid) 
                   )
# 2334 "../pars.fsy"
                 : 'exconRepr));
# 7349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2337 "../pars.fsy"
                                     _2 
                   )
# 2337 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 7360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2346 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd 
                                     if not isRec && List.length binds > 1 then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                                     [],binds), 
                                 bindingSetRange) 
                   )
# 2346 "../pars.fsy"
                 : 'defnBindings));
# 7391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2368 "../pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false,false,_1,bindRange)  
                   )
# 2368 "../pars.fsy"
                 : 'defnBindings));
# 7403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2375 "../pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,mWhole)]), mWhole) 
                   )
# 2375 "../pars.fsy"
                 : 'doBinding));
# 7418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2385 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                               (fun attrs vis -> 
                                 let binds = localBindingsBuilder attrs vis mLetKwd 
                                 if not isRec && List.length binds > 1 then 
                                         reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                                 [],binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
# 2385 "../pars.fsy"
                 : 'hardwhiteLetBindings));
# 7451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2411 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,bindingSetRange)]),bindingSetRange), _2 
                   )
# 2411 "../pars.fsy"
                 : 'hardwhiteDoBinding));
# 7468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2421 "../pars.fsy"
                                        _1 
                   )
# 2421 "../pars.fsy"
                 : 'classDefnBindings));
# 7479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2422 "../pars.fsy"
                                     _1 
                   )
# 2422 "../pars.fsy"
                 : 'classDefnBindings));
# 7490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2423 "../pars.fsy"
                                                let b,m = _1 in b 
                   )
# 2423 "../pars.fsy"
                 : 'classDefnBindings));
# 7501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2424 "../pars.fsy"
                                               fst _1 
                   )
# 2424 "../pars.fsy"
                 : 'classDefnBindings));
# 7512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2430 "../pars.fsy"
                            (fun _ m -> ()) 
                   )
# 2430 "../pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2432 "../pars.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 2432 "../pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2441 "../pars.fsy"
                             let rty,vis,nm,args  = _2,_3,_4,_7 
                             let xmlDoc = grabXmlDoc(parseState,1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App(ExprAtomicFlag.NonAtomic,
                                                       false, 
                                                       SynExpr.Ident(ident("failwith",rhs parseState 6)),
                                                       SynExpr.Const(SynConst.String("extern was not given a DllImport attribute",rhs parseState 8),rhs parseState 8),
                                                       mRhs)
                             (fun attrs vis -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm],[]), None, Some noInferredTypars, SynConstructorArgs.Pats [SynPat.Tuple(args,argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, NoSequencePointAtInvisibleBinding, Some rty ,rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
# 2441 "../pars.fsy"
                 : 'cPrototype));
# 7570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2463 "../pars.fsy"
                            List.rev _1 
                   )
# 2463 "../pars.fsy"
                 : 'cArgs));
# 7581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2466 "../pars.fsy"
                            [_1] 
                   )
# 2466 "../pars.fsy"
                 : 'cArgs));
# 7592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2468 "../pars.fsy"
                            [] 
                   )
# 2468 "../pars.fsy"
                 : 'cArgs));
# 7602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2474 "../pars.fsy"
                            _3 :: _1 
                   )
# 2474 "../pars.fsy"
                 : 'cMoreArgs));
# 7614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2477 "../pars.fsy"
                            [_3; _1] 
                   )
# 2477 "../pars.fsy"
                 : 'cMoreArgs));
# 7626 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2483 "../pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m,_2,m) |> addAttribs _1 
                   )
# 2483 "../pars.fsy"
                 : 'cArg));
# 7638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2486 "../pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m,_3,false,None,m),_2,m) |> addAttribs _1 
                   )
# 2486 "../pars.fsy"
                 : 'cArg));
# 7651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2491 "../pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1),None,[],[],None,false,m) 
                   )
# 2491 "../pars.fsy"
                 : 'cType));
# 7663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2495 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2495 "../pars.fsy"
                 : 'cType));
# 7676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2499 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2499 "../pars.fsy"
                 : 'cType));
# 7688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2503 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2503 "../pars.fsy"
                 : 'cType));
# 7700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2507 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint",m)],[])),None,[],[],None,true,m) 
                   )
# 2507 "../pars.fsy"
                 : 'cType));
# 7711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2514 "../pars.fsy"
                            SynReturnInfo((_2,SynArgInfo(_1,false,None)),rhs parseState 2) 
                   )
# 2514 "../pars.fsy"
                 : 'cRetType));
# 7723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2517 "../pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit",m)],[])),None,[],[],None,false,m),SynArgInfo(_1,false,None)),m) 
                   )
# 2517 "../pars.fsy"
                 : 'cRetType));
# 7735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2523 "../pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
# 2523 "../pars.fsy"
                 : 'localBindings));
# 7757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2538 "../pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 2538 "../pars.fsy"
                 : 'moreLocalBindings));
# 7772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2544 "../pars.fsy"
                             [] 
                   )
# 2544 "../pars.fsy"
                 : 'moreLocalBindings));
# 7782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2550 "../pars.fsy"
                             let attrs2 = _1
                             let localBindingRange,localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 2550 "../pars.fsy"
                 : 'attr_localBinding));
# 7797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2556 "../pars.fsy"
                             None 
                   )
# 2556 "../pars.fsy"
                 : 'attr_localBinding));
# 7807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2562 "../pars.fsy"
                             let (expr:SynExpr),opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = unionRanges mLetKwd mRhs
                                 let spBind = if IsControlFlowExpression expr then NoSequencePointAtLetBinding else SequencePointAtBinding(mWhole)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,expr,mRhs,opts,attrs,None))
                             localBindingRange,localBindingBuilder 
                   )
# 2562 "../pars.fsy"
                 : 'localBinding));
# 7833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2576 "../pars.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2576 "../pars.fsy"
                 : 'localBinding));
# 7857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2589 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding2",mRhs),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2589 "../pars.fsy"
                 : 'localBinding));
# 7881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2604 "../pars.fsy"
                             _2 
                   )
# 2604 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2607 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 2607 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2612 "../pars.fsy"
                             _1 
                   )
# 2612 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2615 "../pars.fsy"
                                                                _1, List.rev _2 
                   )
# 2615 "../pars.fsy"
                 : 'typedExprWithStaticOptimizations));
# 7930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2618 "../pars.fsy"
                                                                      _2 :: _1 
                   )
# 2618 "../pars.fsy"
                 : 'opt_staticOptimizations));
# 7942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2619 "../pars.fsy"
                           [] 
                   )
# 2619 "../pars.fsy"
                 : 'opt_staticOptimizations));
# 7952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2622 "../pars.fsy"
                                                                                      (_2,_4) 
                   )
# 2622 "../pars.fsy"
                 : 'staticOptimization));
# 7964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2625 "../pars.fsy"
                                                                                        _3 :: _1 
                   )
# 2625 "../pars.fsy"
                 : 'staticOptimizationConditions));
# 7976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2626 "../pars.fsy"
                                                       [_1 ] 
                   )
# 2626 "../pars.fsy"
                 : 'staticOptimizationConditions));
# 7987 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2629 "../pars.fsy"
                                           WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 2629 "../pars.fsy"
                 : 'staticOptimizationCondition));
# 7999 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2630 "../pars.fsy"
                                        WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 2630 "../pars.fsy"
                 : 'staticOptimizationCondition));
# 8010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2633 "../pars.fsy"
                                if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState));
                                SynConst.SByte (fst _1) 
                   )
# 2633 "../pars.fsy"
                 : 'rawConstant));
# 8022 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2635 "../pars.fsy"
                                 SynConst.Byte _1 
                   )
# 2635 "../pars.fsy"
                 : 'rawConstant));
# 8033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2636 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState));
                                 SynConst.Int16 (fst _1) 
                   )
# 2636 "../pars.fsy"
                 : 'rawConstant));
# 8045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2638 "../pars.fsy"
                                  SynConst.UInt16 _1 
                   )
# 2638 "../pars.fsy"
                 : 'rawConstant));
# 8056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2639 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynConst.Int32 (fst _1) 
                   )
# 2639 "../pars.fsy"
                 : 'rawConstant));
# 8068 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2641 "../pars.fsy"
                                  SynConst.UInt32 _1 
                   )
# 2641 "../pars.fsy"
                 : 'rawConstant));
# 8079 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2642 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState));
                                 SynConst.Int64 (fst _1) 
                   )
# 2642 "../pars.fsy"
                 : 'rawConstant));
# 8091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2644 "../pars.fsy"
                                  SynConst.UInt64 _1 
                   )
# 2644 "../pars.fsy"
                 : 'rawConstant));
# 8102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2645 "../pars.fsy"
                                     SynConst.IntPtr _1 
                   )
# 2645 "../pars.fsy"
                 : 'rawConstant));
# 8113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2646 "../pars.fsy"
                                      SynConst.UIntPtr _1 
                   )
# 2646 "../pars.fsy"
                 : 'rawConstant));
# 8124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2647 "../pars.fsy"
                                  SynConst.Single _1 
                   )
# 2647 "../pars.fsy"
                 : 'rawConstant));
# 8135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2648 "../pars.fsy"
                                  SynConst.Double _1 
                   )
# 2648 "../pars.fsy"
                 : 'rawConstant));
# 8146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2649 "../pars.fsy"
                                SynConst.Char _1 
                   )
# 2649 "../pars.fsy"
                 : 'rawConstant));
# 8157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2650 "../pars.fsy"
                                   SynConst.Decimal _1 
                   )
# 2650 "../pars.fsy"
                 : 'rawConstant));
# 8168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2651 "../pars.fsy"
                                  SynConst.UserNum _1 
                   )
# 2651 "../pars.fsy"
                 : 'rawConstant));
# 8179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2652 "../pars.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 2652 "../pars.fsy"
                 : 'rawConstant));
# 8190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[])) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2653 "../pars.fsy"
                                     SynConst.Bytes (_1,lhs parseState) 
                   )
# 2653 "../pars.fsy"
                 : 'rawConstant));
# 8201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2657 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if fst _3 = 0 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsIllegalDenominatorForMeasureExponent());
                           if (snd _1) || (snd _3) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                           SynRationalConst.Rational(fst _1, fst _3, lhs parseState) 
                   )
# 2657 "../pars.fsy"
                 : 'rationalConstant));
# 8217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2663 "../pars.fsy"
                           if _3 <> "/" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if fst _4 = 0 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsIllegalDenominatorForMeasureExponent());
                           if (snd _2) || (snd _4) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                           SynRationalConst.Negate(SynRationalConst.Rational(fst _2, fst _4, lhs parseState)) 
                   )
# 2663 "../pars.fsy"
                 : 'rationalConstant));
# 8233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2668 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynRationalConst.Integer(fst _1) 
                   )
# 2668 "../pars.fsy"
                 : 'rationalConstant));
# 8245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2671 "../pars.fsy"
                                       if snd _2 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                       SynRationalConst.Negate(SynRationalConst.Integer(fst _2)) 
                   )
# 2671 "../pars.fsy"
                 : 'rationalConstant));
# 8257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2675 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynRationalConst.Integer(fst _1) 
                   )
# 2675 "../pars.fsy"
                 : 'atomicUnsignedRationalConstant));
# 8269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rationalConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2679 "../pars.fsy"
                           _2 
                   )
# 2679 "../pars.fsy"
                 : 'atomicUnsignedRationalConstant));
# 8281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2682 "../pars.fsy"
                                                          _1 
                   )
# 2682 "../pars.fsy"
                 : 'atomicRationalConstant));
# 8292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2685 "../pars.fsy"
                           SynRationalConst.Negate(_2) 
                   )
# 2685 "../pars.fsy"
                 : 'atomicRationalConstant));
# 8303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2688 "../pars.fsy"
                                       _1 
                   )
# 2688 "../pars.fsy"
                 : 'constant));
# 8314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2689 "../pars.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 2689 "../pars.fsy"
                 : 'constant));
# 8326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2693 "../pars.fsy"
                              let xmlDoc = grabXmlDoc(parseState,1)
                              mkSynBinding (xmlDoc,_1), rhs parseState 1 
                   )
# 2693 "../pars.fsy"
                 : 'bindingPattern));
# 8338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2699 "../pars.fsy"
                             SynSimplePat.Id (_1,None,false,false,false,rhs parseState 1) 
                   )
# 2699 "../pars.fsy"
                 : 'simplePattern));
# 8349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2701 "../pars.fsy"
                             SynSimplePat.Id (_2,None,false,false,true,rhs parseState 2) 
                   )
# 2701 "../pars.fsy"
                 : 'simplePattern));
# 8360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2703 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Typed(_1,_3,lhsm) 
                   )
# 2703 "../pars.fsy"
                 : 'simplePattern));
# 8373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2706 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Attrib(_2,_1,lhsm) 
                   )
# 2706 "../pars.fsy"
                 : 'simplePattern));
# 8386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2711 "../pars.fsy"
                             [_1] 
                   )
# 2711 "../pars.fsy"
                 : 'simplePatternCommaList));
# 8397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2713 "../pars.fsy"
                             _1 :: _3 
                   )
# 2713 "../pars.fsy"
                 : 'simplePatternCommaList));
# 8409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2717 "../pars.fsy"
                             _2 
                   )
# 2717 "../pars.fsy"
                 : 'simplePatterns));
# 8421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2719 "../pars.fsy"
                             [] 
                   )
# 2719 "../pars.fsy"
                 : 'simplePatterns));
# 8432 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2721 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             [] 
                   )
# 2721 "../pars.fsy"
                 : 'simplePatterns));
# 8445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2724 "../pars.fsy"
                             (* silent recovery *) [] 
                   )
# 2724 "../pars.fsy"
                 : 'simplePatterns));
# 8456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2726 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             [] 
                   )
# 2726 "../pars.fsy"
                 : 'simplePatterns));
# 8468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2732 "../pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2732 "../pars.fsy"
                 : Ast.SynPat));
# 8480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2734 "../pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2734 "../pars.fsy"
                 : Ast.SynPat));
# 8492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2736 "../pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, SynConstructorArgs.Pats [SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],None,lhs parseState) 
                   )
# 2736 "../pars.fsy"
                 : Ast.SynPat));
# 8504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2738 "../pars.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 2738 "../pars.fsy"
                 : Ast.SynPat));
# 8515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2740 "../pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 2740 "../pars.fsy"
                 : Ast.SynPat));
# 8526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2742 "../pars.fsy"
                             _1 
                   )
# 2742 "../pars.fsy"
                 : Ast.SynPat));
# 8537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2746 "../pars.fsy"
                             _3 :: _1 
                   )
# 2746 "../pars.fsy"
                 : 'tuplePatternElements));
# 8549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2748 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2748 "../pars.fsy"
                 : 'tuplePatternElements));
# 8561 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2752 "../pars.fsy"
                             _3 :: _1 
                   )
# 2752 "../pars.fsy"
                 : 'conjPatternElements));
# 8573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2754 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2754 "../pars.fsy"
                 : 'conjPatternElements));
# 8585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2757 "../pars.fsy"
                                                 [_1], lhs parseState 
                   )
# 2757 "../pars.fsy"
                 : 'namePatPairs));
# 8597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2758 "../pars.fsy"
                                                          let (rs, _) = _3 in (_1::rs), lhs parseState 
                   )
# 2758 "../pars.fsy"
                 : 'namePatPairs));
# 8610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2761 "../pars.fsy"
                                                      (_1, _3) 
                   )
# 2761 "../pars.fsy"
                 : 'namePatPair));
# 8622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2765 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,Some _2, SynConstructorArgs.Pats [],vis,lhs parseState) 
                   )
# 2765 "../pars.fsy"
                 : 'constrPattern));
# 8634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2767 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _3,vis,lhs parseState) 
                   )
# 2767 "../pars.fsy"
                 : 'constrPattern));
# 8647 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2769 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _4,vis,lhs parseState) 
                   )
# 2769 "../pars.fsy"
                 : 'constrPattern));
# 8660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2771 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _4,vis,lhs parseState) 
                   )
# 2771 "../pars.fsy"
                 : 'constrPattern));
# 8673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2773 "../pars.fsy"
                             SynPat.IsInst(_2,lhs parseState) 
                   )
# 2773 "../pars.fsy"
                 : 'constrPattern));
# 8684 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2775 "../pars.fsy"
                             _1 
                   )
# 2775 "../pars.fsy"
                 : 'constrPattern));
# 8695 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2778 "../pars.fsy"
                                                      SynConstructorArgs.NamePatPairs _2 
                   )
# 2778 "../pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2779 "../pars.fsy"
                                          SynConstructorArgs.Pats _1 
                   )
# 2779 "../pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2783 "../pars.fsy"
                             _1 :: _2 
                   )
# 2783 "../pars.fsy"
                 : 'atomicPatterns));
# 8730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2785 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2785 "../pars.fsy"
                 : 'atomicPatterns));
# 8743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2788 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2788 "../pars.fsy"
                 : 'atomicPatterns));
# 8756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2790 "../pars.fsy"
                                         [_1] 
                   )
# 2790 "../pars.fsy"
                 : 'atomicPatterns));
# 8767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2795 "../pars.fsy"
                             SynPat.QuoteExpr(_1,lhs parseState) 
                   )
# 2795 "../pars.fsy"
                 : 'atomicPattern));
# 8778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2796 "../pars.fsy"
                                             SynPat.DeprecatedCharRange (_1,_3,rhs2 parseState 1 3) 
                   )
# 2796 "../pars.fsy"
                 : 'atomicPattern));
# 8790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2798 "../pars.fsy"
                             _2 
                   )
# 2798 "../pars.fsy"
                 : 'atomicPattern));
# 8802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2800 "../pars.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 2800 "../pars.fsy"
                 : 'atomicPattern));
# 8813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2802 "../pars.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 2802 "../pars.fsy"
                 : 'atomicPattern));
# 8824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2804 "../pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 2804 "../pars.fsy"
                 : 'atomicPattern));
# 8834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2806 "../pars.fsy"
                             SynPat.OptionalVal(_2,lhs parseState) 
                   )
# 2806 "../pars.fsy"
                 : 'atomicPattern));
# 8845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2808 "../pars.fsy"
                             let vis,lidwd = _1 
                             if List.length lidwd.Lid > 1 || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
# 2808 "../pars.fsy"
                 : 'atomicPattern));
# 8859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2813 "../pars.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2813 "../pars.fsy"
                 : 'atomicPattern));
# 8870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2815 "../pars.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2815 "../pars.fsy"
                 : 'atomicPattern));
# 8880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2817 "../pars.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2817 "../pars.fsy"
                 : 'atomicPattern));
# 8890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2819 "../pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 2819 "../pars.fsy"
                 : 'atomicPattern));
# 8900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2821 "../pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 2821 "../pars.fsy"
                 : 'atomicPattern));
# 8913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2824 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 2824 "../pars.fsy"
                 : 'atomicPattern));
# 8926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2827 "../pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 2827 "../pars.fsy"
                 : 'atomicPattern));
# 8937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2829 "../pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 2829 "../pars.fsy"
                 : 'atomicPattern));
# 8949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2836 "../pars.fsy"
                             (fun m -> _1) 
                   )
# 2836 "../pars.fsy"
                 : 'parenPatternBody));
# 8960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2838 "../pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 2838 "../pars.fsy"
                 : 'parenPatternBody));
# 8970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2867 "../pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2867 "../pars.fsy"
                 : 'parenPattern));
# 8982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2869 "../pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2869 "../pars.fsy"
                 : 'parenPattern));
# 8994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2871 "../pars.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 2871 "../pars.fsy"
                 : 'parenPattern));
# 9005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2873 "../pars.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 2873 "../pars.fsy"
                 : 'parenPattern));
# 9016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2875 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 2875 "../pars.fsy"
                 : 'parenPattern));
# 9029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2878 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2,_1,lhsm) 
                   )
# 2878 "../pars.fsy"
                 : 'parenPattern));
# 9042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2881 "../pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, SynConstructorArgs.Pats [ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],None,lhs parseState) 
                   )
# 2881 "../pars.fsy"
                 : 'parenPattern));
# 9054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2882 "../pars.fsy"
                                         _1 
                   )
# 2882 "../pars.fsy"
                 : 'parenPattern));
# 9065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2886 "../pars.fsy"
                             _3 :: _1 
                   )
# 2886 "../pars.fsy"
                 : 'tupleParenPatternElements));
# 9077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2888 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2888 "../pars.fsy"
                 : 'tupleParenPatternElements));
# 9089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2892 "../pars.fsy"
                             _3 :: _1 
                   )
# 2892 "../pars.fsy"
                 : 'conjParenPatternElements));
# 9101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2894 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2894 "../pars.fsy"
                 : 'conjParenPatternElements));
# 9113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2897 "../pars.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 2897 "../pars.fsy"
                 : 'recordPatternElements));
# 9124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2901 "../pars.fsy"
                             [_1],lhs parseState 
                   )
# 2901 "../pars.fsy"
                 : 'recordPatternElementsAux));
# 9136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2903 "../pars.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 2903 "../pars.fsy"
                 : 'recordPatternElementsAux));
# 9149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2906 "../pars.fsy"
                                                    (List.frontAndBack _1.Lid,_3) 
                   )
# 2906 "../pars.fsy"
                 : 'recordPatternElement));
# 9161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2910 "../pars.fsy"
                             [] 
                   )
# 2910 "../pars.fsy"
                 : 'listPatternElements));
# 9171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2912 "../pars.fsy"
                             [_1] 
                   )
# 2912 "../pars.fsy"
                 : 'listPatternElements));
# 9183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2914 "../pars.fsy"
                             _1 :: _3 
                   )
# 2914 "../pars.fsy"
                 : 'listPatternElements));
# 9196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2919 "../pars.fsy"
                             _2 
                   )
# 2919 "../pars.fsy"
                 : Ast.SynExpr));
# 9208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2921 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                             exprFromParseError _2 
                   )
# 2921 "../pars.fsy"
                 : Ast.SynExpr));
# 9221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2924 "../pars.fsy"
                             _1 
                   )
# 2924 "../pars.fsy"
                 : Ast.SynExpr));
# 9232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2929 "../pars.fsy"
                             _2 
                   )
# 2929 "../pars.fsy"
                 : Ast.SynExpr));
# 9244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2931 "../pars.fsy"
                             _1 
                   )
# 2931 "../pars.fsy"
                 : Ast.SynExpr));
# 9255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2936 "../pars.fsy"
                                                         _1 
                   )
# 2936 "../pars.fsy"
                 : 'typedSeqExprBlockR));
# 9266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2937 "../pars.fsy"
                                        _1 
                   )
# 2937 "../pars.fsy"
                 : 'typedSeqExprBlockR));
# 9277 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2940 "../pars.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2940 "../pars.fsy"
                 : 'typedSeqExpr));
# 9289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2941 "../pars.fsy"
                                   _1 
                   )
# 2941 "../pars.fsy"
                 : 'typedSeqExpr));
# 9300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2944 "../pars.fsy"
                                            checkEndOfFileError _2; _1 
                   )
# 2944 "../pars.fsy"
                 : Ast.SynExpr));
# 9312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2948 "../pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 2948 "../pars.fsy"
                 : 'seqExpr));
# 9325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2950 "../pars.fsy"
                             _1 
                   )
# 2950 "../pars.fsy"
                 : 'seqExpr));
# 9337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2952 "../pars.fsy"
                             _1 
                   )
# 2952 "../pars.fsy"
                 : 'seqExpr));
# 9348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2954 "../pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 2954 "../pars.fsy"
                 : 'seqExpr));
# 9360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2956 "../pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 2956 "../pars.fsy"
                 : 'seqExpr));
# 9373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2958 "../pars.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_))  -> m,isUse
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 2958 "../pars.fsy"
                 : 'seqExpr));
# 9388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2969 "../pars.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 2969 "../pars.fsy"
                 : 'recover));
# 9398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2970 "../pars.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 2970 "../pars.fsy"
                 : 'recover));
# 9409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2975 "../pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 2975 "../pars.fsy"
                 : Ast.SynExpr));
# 9421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2978 "../pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 2978 "../pars.fsy"
                 : Ast.SynExpr));
# 9432 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2984 "../pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 2984 "../pars.fsy"
                 : Ast.SynExpr));
# 9445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2988 "../pars.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 2988 "../pars.fsy"
                 : Ast.SynExpr));
# 9458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2993 "../pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 2993 "../pars.fsy"
                 : Ast.SynExpr));
# 9471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2997 "../pars.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 2997 "../pars.fsy"
                 : Ast.SynExpr));
# 9484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "../pars.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 3002 "../pars.fsy"
                 : Ast.SynExpr));
# 9496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3006 "../pars.fsy"
                             _1 
                   )
# 3006 "../pars.fsy"
                 : Ast.SynExpr));
# 9507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3009 "../pars.fsy"
                             _1 
                   )
# 3009 "../pars.fsy"
                 : Ast.SynExpr));
# 9518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3012 "../pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 3012 "../pars.fsy"
                 : Ast.SynExpr));
# 9533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3018 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch());
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 3018 "../pars.fsy"
                 : Ast.SynExpr));
# 9547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3023 "../pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = SequencePointAtTry(mTry) 
                             let mWith,(clauses,mLast) = _3 
                             let spWith = SequencePointAtWith(mWith) 
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith(_2, mTryToWith, clauses,mWithToLast, mTryToLast,spTry,spWith) 
                   )
# 3023 "../pars.fsy"
                 : Ast.SynExpr));
# 9566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3033 "../pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry());
                             exprFromParseError _2 
                   )
# 3033 "../pars.fsy"
                 : Ast.SynExpr));
# 9581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3039 "../pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = SequencePointAtTry(mTry) 
                             let spFinally = SequencePointAtFinally(rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally(_2, _4,mTryToLast,spTry,spFinally) 
                   )
# 3039 "../pars.fsy"
                 : Ast.SynExpr));
# 9597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3046 "../pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 3046 "../pars.fsy"
                 : Ast.SynExpr));
# 9610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3050 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 3050 "../pars.fsy"
                 : Ast.SynExpr));
# 9627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3058 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m.EndRange
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 3058 "../pars.fsy"
                 : Ast.SynExpr));
# 9644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3067 "../pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3067 "../pars.fsy"
                 : Ast.SynExpr));
# 9655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3070 "../pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3070 "../pars.fsy"
                 : Ast.SynExpr));
# 9666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3073 "../pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3073 "../pars.fsy"
                 : Ast.SynExpr));
# 9676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3076 "../pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3076 "../pars.fsy"
                 : Ast.SynExpr));
# 9687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3079 "../pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3079 "../pars.fsy"
                 : Ast.SynExpr));
# 9698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3082 "../pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3082 "../pars.fsy"
                 : Ast.SynExpr));
# 9708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3085 "../pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 3085 "../pars.fsy"
                 : Ast.SynExpr));
# 9725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3091 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 3091 "../pars.fsy"
                 : Ast.SynExpr));
# 9743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3098 "../pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 3098 "../pars.fsy"
                 : Ast.SynExpr));
# 9761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3106 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 3106 "../pars.fsy"
                 : Ast.SynExpr));
# 9778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3114 "../pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 3114 "../pars.fsy"
                 : Ast.SynExpr));
# 9790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3118 "../pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 3118 "../pars.fsy"
                 : Ast.SynExpr));
# 9806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3126 "../pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3126 "../pars.fsy"
                 : Ast.SynExpr));
# 9822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3131 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 3131 "../pars.fsy"
                 : Ast.SynExpr));
# 9840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3138 "../pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 3138 "../pars.fsy"
                 : Ast.SynExpr));
# 9859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3147 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 3147 "../pars.fsy"
                 : Ast.SynExpr));
# 9878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3156 "../pars.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 3156 "../pars.fsy"
                 : Ast.SynExpr));
# 9896 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3165 "../pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 3165 "../pars.fsy"
                 : Ast.SynExpr));
# 9914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3172 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 3172 "../pars.fsy"
                 : Ast.SynExpr));
# 9934 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3181 "../pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 3181 "../pars.fsy"
                 : Ast.SynExpr));
# 9953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3190 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3190 "../pars.fsy"
                 : Ast.SynExpr));
# 9972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3199 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3199 "../pars.fsy"
                 : Ast.SynExpr));
# 9990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3209 "../pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 3209 "../pars.fsy"
                 : Ast.SynExpr));
# 10007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3228 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 3228 "../pars.fsy"
                 : Ast.SynExpr));
# 10019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3232 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 3232 "../pars.fsy"
                 : Ast.SynExpr));
# 10036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3240 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3240 "../pars.fsy"
                 : Ast.SynExpr));
# 10053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3249 "../pars.fsy"
                            SynExpr.YieldOrReturn((_1,not _1),_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3249 "../pars.fsy"
                 : Ast.SynExpr));
# 10065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3252 "../pars.fsy"
                            SynExpr.YieldOrReturnFrom((_1,not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3252 "../pars.fsy"
                 : Ast.SynExpr));
# 10077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3255 "../pars.fsy"
                            let spBind = SequencePointAtBinding(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 3255 "../pars.fsy"
                 : Ast.SynExpr));
# 10094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3260 "../pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1);  // report unterminated error 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 3260 "../pars.fsy"
                 : Ast.SynExpr));
# 10113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3266 "../pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4, SynExpr.ImplicitZero m, mAll) 
                   )
# 3266 "../pars.fsy"
                 : Ast.SynExpr));
# 10132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3273 "../pars.fsy"
                            let spBind = NoSequencePointAtDoBinding
                            SynExpr.LetOrUseBang(spBind,false,true,SynPat.Const(SynConst.Unit,_2.Range),_2,_5, unionRanges (rhs parseState 1) _5.Range) 
                   )
# 3273 "../pars.fsy"
                 : Ast.SynExpr));
# 10146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3277 "../pars.fsy"
                            SynExpr.DoBang(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3277 "../pars.fsy"
                 : Ast.SynExpr));
# 10158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3280 "../pars.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3280 "../pars.fsy"
                 : Ast.SynExpr));
# 10172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3284 "../pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(),lhs parseState));
                            SynExpr.YieldOrReturn((true,true),_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 3284 "../pars.fsy"
                 : Ast.SynExpr));
# 10184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3289 "../pars.fsy"
                                                             SynExpr.TypeTest(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3289 "../pars.fsy"
                 : Ast.SynExpr));
# 10196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3290 "../pars.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3290 "../pars.fsy"
                 : Ast.SynExpr));
# 10208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3291 "../pars.fsy"
                                                             SynExpr.Downcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3291 "../pars.fsy"
                 : Ast.SynExpr));
# 10220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3294 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 3294 "../pars.fsy"
                 : Ast.SynExpr));
# 10232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3295 "../pars.fsy"
                                                                         mkSynAssign _1 _3 
                   )
# 3295 "../pars.fsy"
                 : Ast.SynExpr));
# 10244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3297 "../pars.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 3297 "../pars.fsy"
                 : Ast.SynExpr));
# 10255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3298 "../pars.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 3298 "../pars.fsy"
                 : Ast.SynExpr));
# 10267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3299 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 3299 "../pars.fsy"
                 : Ast.SynExpr));
# 10279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3300 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3300 "../pars.fsy"
                 : Ast.SynExpr));
# 10292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3301 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 3301 "../pars.fsy"
                 : Ast.SynExpr));
# 10304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3302 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 3302 "../pars.fsy"
                 : Ast.SynExpr));
# 10316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3303 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 3303 "../pars.fsy"
                 : Ast.SynExpr));
# 10328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3304 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3304 "../pars.fsy"
                 : Ast.SynExpr));
# 10341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3305 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 3305 "../pars.fsy"
                 : Ast.SynExpr));
# 10353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3306 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3306 "../pars.fsy"
                 : Ast.SynExpr));
# 10366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3307 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 3307 "../pars.fsy"
                 : Ast.SynExpr));
# 10378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3308 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 3308 "../pars.fsy"
                 : Ast.SynExpr));
# 10391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3309 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 3309 "../pars.fsy"
                 : Ast.SynExpr));
# 10404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3310 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3310 "../pars.fsy"
                 : Ast.SynExpr));
# 10417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3311 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3311 "../pars.fsy"
                 : Ast.SynExpr));
# 10430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3312 "../pars.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 3312 "../pars.fsy"
                 : Ast.SynExpr));
# 10442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3313 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3313 "../pars.fsy"
                 : Ast.SynExpr));
# 10455 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3314 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 3314 "../pars.fsy"
                 : Ast.SynExpr));
# 10467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3315 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 3315 "../pars.fsy"
                 : Ast.SynExpr));
# 10479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3316 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3316 "../pars.fsy"
                 : Ast.SynExpr));
# 10492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3317 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3317 "../pars.fsy"
                 : Ast.SynExpr));
# 10505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3319 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3319 "../pars.fsy"
                 : Ast.SynExpr));
# 10517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3321 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3321 "../pars.fsy"
                 : Ast.SynExpr));
# 10529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3323 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3323 "../pars.fsy"
                 : Ast.SynExpr));
# 10542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3325 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3325 "../pars.fsy"
                 : Ast.SynExpr));
# 10554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3327 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3327 "../pars.fsy"
                 : Ast.SynExpr));
# 10566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3329 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3329 "../pars.fsy"
                 : Ast.SynExpr));
# 10578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3331 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3331 "../pars.fsy"
                 : Ast.SynExpr));
# 10591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3333 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3333 "../pars.fsy"
                 : Ast.SynExpr));
# 10603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3335 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3335 "../pars.fsy"
                 : Ast.SynExpr));
# 10616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3337 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3337 "../pars.fsy"
                 : Ast.SynExpr));
# 10628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3339 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3339 "../pars.fsy"
                 : Ast.SynExpr));
# 10641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3341 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3341 "../pars.fsy"
                 : Ast.SynExpr));
# 10654 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3343 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3343 "../pars.fsy"
                 : Ast.SynExpr));
# 10667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3345 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3345 "../pars.fsy"
                 : Ast.SynExpr));
# 10680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3347 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")); 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3).StartRange))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3).StartRange),unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
# 3347 "../pars.fsy"
                 : Ast.SynExpr));
# 10692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3349 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3349 "../pars.fsy"
                 : Ast.SynExpr));
# 10705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3351 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3351 "../pars.fsy"
                 : Ast.SynExpr));
# 10717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3353 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3353 "../pars.fsy"
                 : Ast.SynExpr));
# 10729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3355 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3355 "../pars.fsy"
                 : Ast.SynExpr));
# 10742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3357 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3357 "../pars.fsy"
                 : Ast.SynExpr));
# 10755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3360 "../pars.fsy"
                                                                  _1 
                   )
# 3360 "../pars.fsy"
                 : Ast.SynExpr));
# 10766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3364 "../pars.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 3364 "../pars.fsy"
                 : 'dynamicArg));
# 10779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3368 "../pars.fsy"
                             _2 
                   )
# 3368 "../pars.fsy"
                 : 'dynamicArg));
# 10791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3372 "../pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3372 "../pars.fsy"
                 : 'withClauses));
# 10802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3374 "../pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3374 "../pars.fsy"
                 : 'withClauses));
# 10813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3376 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith());
                             rhs parseState 1, _2 
                   )
# 3376 "../pars.fsy"
                 : 'withClauses));
# 10826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3381 "../pars.fsy"
                             _1 
                   )
# 3381 "../pars.fsy"
                 : 'withPatternClauses));
# 10837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3383 "../pars.fsy"
                              _2 
                   )
# 3383 "../pars.fsy"
                 : 'withPatternClauses));
# 10848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3385 "../pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 3385 "../pars.fsy"
                 : 'withPatternClauses));
# 10860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3389 "../pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 3389 "../pars.fsy"
                 : 'withPatternClauses));
# 10872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3396 "../pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 3396 "../pars.fsy"
                 : 'patternAndGuard));
# 10884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3400 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3400 "../pars.fsy"
                 : 'patternClauses));
# 10898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3404 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 3404 "../pars.fsy"
                 : 'patternClauses));
# 10913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3408 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3408 "../pars.fsy"
                 : 'patternClauses));
# 10928 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3413 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 3413 "../pars.fsy"
                 : 'patternClauses));
# 10943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3418 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast.EndRange),patm,SequencePointAtTarget)], mLast 
                   )
# 3418 "../pars.fsy"
                 : 'patternClauses));
# 10957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3425 "../pars.fsy"
                            Some _2 
                   )
# 3425 "../pars.fsy"
                 : 'patternGuard));
# 10968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3427 "../pars.fsy"
                            None 
                   )
# 3427 "../pars.fsy"
                 : 'patternGuard));
# 10978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3431 "../pars.fsy"
                            _2 
                   )
# 3431 "../pars.fsy"
                 : Ast.SynExpr));
# 10989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3435 "../pars.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 3435 "../pars.fsy"
                 : 'ifExprCases));
# 11007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3445 "../pars.fsy"
                             _2, rhs parseState 1 
                   )
# 3445 "../pars.fsy"
                 : 'ifExprThen));
# 11018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3447 "../pars.fsy"
                             _3,rhs parseState 1 
                   )
# 3447 "../pars.fsy"
                 : 'ifExprThen));
# 11030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3449 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3,rhs parseState 1 
                   )
# 3449 "../pars.fsy"
                 : 'ifExprThen));
# 11043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3454 "../pars.fsy"
                             None 
                   )
# 3454 "../pars.fsy"
                 : 'ifExprElifs));
# 11053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3456 "../pars.fsy"
                             Some _2 
                   )
# 3456 "../pars.fsy"
                 : 'ifExprElifs));
# 11064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3458 "../pars.fsy"
                             Some _3 
                   )
# 3458 "../pars.fsy"
                 : 'ifExprElifs));
# 11076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3460 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse());
                             Some (exprFromParseError _3) 
                   )
# 3460 "../pars.fsy"
                 : 'ifExprElifs));
# 11089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3463 "../pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 3463 "../pars.fsy"
                 : 'ifExprElifs));
# 11102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3466 "../pars.fsy"
                             Some (exprFromParseError _2) 
                   )
# 3466 "../pars.fsy"
                 : 'ifExprElifs));
# 11114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3470 "../pars.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 3470 "../pars.fsy"
                 : 'tupleExpr));
# 11126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3472 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs,commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1",zeroWidthAtNextToken)) :: exprs), (rhs parseState 2)::commas 
                   )
# 3472 "../pars.fsy"
                 : 'tupleExpr));
# 11141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3477 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2",zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
# 3477 "../pars.fsy"
                 : 'tupleExpr));
# 11155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3481 "../pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 3481 "../pars.fsy"
                 : 'tupleExpr));
# 11167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3485 "../pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 3485 "../pars.fsy"
                 : Ast.SynExpr));
# 11178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3487 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3487 "../pars.fsy"
                 : Ast.SynExpr));
# 11191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3490 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if _1 = "&" then 
                                 SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             elif _1 = "&&" then 
                                 SynExpr.AddressOf(false,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             else
                                 mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3490 "../pars.fsy"
                 : Ast.SynExpr));
# 11209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3498 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3498 "../pars.fsy"
                 : Ast.SynExpr));
# 11222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3501 "../pars.fsy"
                             SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3501 "../pars.fsy"
                 : Ast.SynExpr));
# 11233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3503 "../pars.fsy"
                             SynExpr.AddressOf(false,_2,rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3503 "../pars.fsy"
                 : Ast.SynExpr));
# 11244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3505 "../pars.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3505 "../pars.fsy"
                 : Ast.SynExpr));
# 11257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3507 "../pars.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 3507 "../pars.fsy"
                 : Ast.SynExpr));
# 11269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3509 "../pars.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 3509 "../pars.fsy"
                 : Ast.SynExpr));
# 11279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3511 "../pars.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3511 "../pars.fsy"
                 : Ast.SynExpr));
# 11290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3513 "../pars.fsy"
                             SynExpr.InferredDowncast(_2,unionRanges (rhs parseState 1) _2.Range)
                   )
# 3513 "../pars.fsy"
                 : Ast.SynExpr));
# 11301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3515 "../pars.fsy"
                             _1 
                   )
# 3515 "../pars.fsy"
                 : Ast.SynExpr));
# 11312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3519 "../pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 3519 "../pars.fsy"
                 : Ast.SynExpr));
# 11324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3521 "../pars.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 3521 "../pars.fsy"
                 : Ast.SynExpr));
# 11336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3526 "../pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 3526 "../pars.fsy"
                 : Ast.SynExpr));
# 11351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3531 "../pars.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 3531 "../pars.fsy"
                 : Ast.SynExpr));
# 11364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3538 "../pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3538 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3543 "../pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3543 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3548 "../pars.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 3548 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3554 "../pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 3554 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3559 "../pars.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 3559 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3562 "../pars.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 3562 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3565 "../pars.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 3565 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3567 "../pars.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 3567 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3570 "../pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 3570 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3572 "../pars.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 3572 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3574 "../pars.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 3574 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3576 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 3576 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3579 "../pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 3579 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3582 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 3582 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3586 "../pars.fsy"
                             _1,false 
                   )
# 3586 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11550 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3590 "../pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 3590 "../pars.fsy"
                 : 'atomicExprQualification));
# 11562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3593 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 3593 "../pars.fsy"
                 : 'atomicExprQualification));
# 11575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3598 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 3598 "../pars.fsy"
                 : 'atomicExprQualification));
# 11590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3604 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState);
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e,mkSynCaseName lhsm opNameCons,(fst _5),lhsm)) 
                   )
# 3604 "../pars.fsy"
                 : 'atomicExprQualification));
# 11604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3609 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState); 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 3609 "../pars.fsy"
                 : 'atomicExprQualification));
# 11618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3614 "../pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 3614 "../pars.fsy"
                 : 'atomicExprQualification));
# 11629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3617 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 3617 "../pars.fsy"
                 : 'atomicExprQualification));
# 11642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3621 "../pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSeqSliceGet lhsm dotm e _2) 
                   )
# 3621 "../pars.fsy"
                 : 'atomicExprQualification));
# 11653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3624 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackSeqSliceGet lhsm dotm e _2)) 
                   )
# 3624 "../pars.fsy"
                 : 'atomicExprQualification));
# 11666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3628 "../pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 3628 "../pars.fsy"
                 : 'atomicExprQualification));
# 11677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3632 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 3632 "../pars.fsy"
                 : 'atomicExprQualification));
# 11690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3637 "../pars.fsy"
                                                                            _1::_3 
                   )
# 3637 "../pars.fsy"
                 : 'optRangeSeqExpr));
# 11702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3638 "../pars.fsy"
                                    [_1] 
                   )
# 3638 "../pars.fsy"
                 : 'optRangeSeqExpr));
# 11713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3642 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3)) 
                   )
# 3642 "../pars.fsy"
                 : 'optRange));
# 11725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3644 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None) 
                   )
# 3644 "../pars.fsy"
                 : 'optRange));
# 11736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3646 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2)) 
                   )
# 3646 "../pars.fsy"
                 : 'optRange));
# 11747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3648 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None) 
                   )
# 3648 "../pars.fsy"
                 : 'optRange));
# 11757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3650 "../pars.fsy"
                             SynIndexerArg.One(_1) 
                   )
# 3650 "../pars.fsy"
                 : 'optRange));
# 11768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3655 "../pars.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 3655 "../pars.fsy"
                 : Ast.SynExpr));
# 11779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3657 "../pars.fsy"
                             _1 
                   )
# 3657 "../pars.fsy"
                 : Ast.SynExpr));
# 11790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3659 "../pars.fsy"
                             _1 
                   )
# 3659 "../pars.fsy"
                 : Ast.SynExpr));
# 11801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3661 "../pars.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 3661 "../pars.fsy"
                 : Ast.SynExpr));
# 11811 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3663 "../pars.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 3663 "../pars.fsy"
                 : Ast.SynExpr));
# 11821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3665 "../pars.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 3665 "../pars.fsy"
                 : Ast.SynExpr));
# 11831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3667 "../pars.fsy"
                             _1 
                   )
# 3667 "../pars.fsy"
                 : Ast.SynExpr));
# 11842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3669 "../pars.fsy"
                             _1 
                   )
# 3669 "../pars.fsy"
                 : Ast.SynExpr));
# 11853 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3671 "../pars.fsy"
                             _1 
                   )
# 3671 "../pars.fsy"
                 : Ast.SynExpr));
# 11864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3675 "../pars.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 3675 "../pars.fsy"
                 : 'beginEndExpr));
# 11875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3678 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 3678 "../pars.fsy"
                 : 'beginEndExpr));
# 11887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3681 "../pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 3681 "../pars.fsy"
                 : 'beginEndExpr));
# 11897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3684 "../pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 3684 "../pars.fsy"
                 : 'beginEndExpr));
# 11907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3688 "../pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
# 3688 "../pars.fsy"
                 : 'quoteExpr));
# 11921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3692 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, _2, false, mExpr))  
                   )
# 3692 "../pars.fsy"
                 : 'quoteExpr));
# 11936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3697 "../pars.fsy"
                             (* silent recovery *) SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr",(rhs parseState 2)), false, lhs parseState)  
                   )
# 3697 "../pars.fsy"
                 : 'quoteExpr));
# 11948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3700 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr2",(rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
# 3700 "../pars.fsy"
                 : 'quoteExpr));
# 11961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3705 "../pars.fsy"
                              _2 (lhs parseState) true 
                   )
# 3705 "../pars.fsy"
                 : 'arrayExpr));
# 11972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3708 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 3708 "../pars.fsy"
                 : 'arrayExpr));
# 11985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3712 "../pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 3712 "../pars.fsy"
                 : 'arrayExpr));
# 11995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3715 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar());  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 3715 "../pars.fsy"
                 : 'arrayExpr));
# 12008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3721 "../pars.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 3721 "../pars.fsy"
                 : 'parenExpr));
# 12019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3724 "../pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 3724 "../pars.fsy"
                 : 'parenExpr));
# 12032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3728 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3).Start
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 3728 "../pars.fsy"
                 : 'parenExpr));
# 12046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3733 "../pars.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1).EndRange),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 3733 "../pars.fsy"
                 : 'parenExpr));
# 12058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3737 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 3737 "../pars.fsy"
                 : 'parenExpr));
# 12070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3742 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 3742 "../pars.fsy"
                 : 'parenExpr));
# 12082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3747 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 3747 "../pars.fsy"
                 : 'parenExpr));
# 12094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3752 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 3752 "../pars.fsy"
                 : 'parenExpr));
# 12106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3757 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 3757 "../pars.fsy"
                 : 'parenExpr));
# 12118 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3769 "../pars.fsy"
                             (fun m -> SynExpr.TraitCall(_1,_4,_6,m)) 
                   )
# 3769 "../pars.fsy"
                 : 'parenExprBody));
# 12132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3771 "../pars.fsy"
                             (fun _m -> _1) 
                   )
# 3771 "../pars.fsy"
                 : 'parenExprBody));
# 12143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3773 "../pars.fsy"
                             _1 
                   )
# 3773 "../pars.fsy"
                 : 'parenExprBody));
# 12154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3777 "../pars.fsy"
                             [_1] 
                   )
# 3777 "../pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3780 "../pars.fsy"
                             List.rev _2 
                   )
# 3780 "../pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3784 "../pars.fsy"
                            _3 :: _1
                   )
# 3784 "../pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3787 "../pars.fsy"
                             [_1] 
                   )
# 3787 "../pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3791 "../pars.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 3791 "../pars.fsy"
                 : 'braceExpr));
# 12212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3794 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 3794 "../pars.fsy"
                 : 'braceExpr));
# 12227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3800 "../pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 3800 "../pars.fsy"
                 : 'braceExpr));
# 12239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3804 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 3804 "../pars.fsy"
                 : 'braceExpr));
# 12252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3809 "../pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 3809 "../pars.fsy"
                 : 'braceExpr));
# 12264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3814 "../pars.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 3814 "../pars.fsy"
                 : 'braceExprBody));
# 12275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3817 "../pars.fsy"
                            _1 
                   )
# 3817 "../pars.fsy"
                 : 'braceExprBody));
# 12286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3820 "../pars.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 3820 "../pars.fsy"
                 : 'braceExprBody));
# 12297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3824 "../pars.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 3824 "../pars.fsy"
                 : 'listExprElements));
# 12308 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3826 "../pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 3826 "../pars.fsy"
                 : 'listExprElements));
# 12318 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3830 "../pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 3830 "../pars.fsy"
                 : 'monadicExprInitial));
# 12329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3833 "../pars.fsy"
                            _1 
                   )
# 3833 "../pars.fsy"
                 : 'monadicExprInitial));
# 12340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3837 "../pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3837 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3845 "../pars.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 3845 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3848 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3848 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3861 "../pars.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3861 "../pars.fsy"
                 : 'arrowThenExprR));
# 12402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3866 "../pars.fsy"
                            (_1, _3, true) 
                   )
# 3866 "../pars.fsy"
                 : 'forLoopBinder));
# 12414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3869 "../pars.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 3869 "../pars.fsy"
                 : 'forLoopBinder));
# 12426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3872 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 3872 "../pars.fsy"
                 : 'forLoopBinder));
# 12439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3876 "../pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1).EndRange), false) 
                   )
# 3876 "../pars.fsy"
                 : 'forLoopBinder));
# 12452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3881 "../pars.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 3881 "../pars.fsy"
                 : 'forLoopRange));
# 12466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3885 "../pars.fsy"
                             libraryOnlyWarning (lhs parseState);
                             let s,sm = _2,rhs parseState 2
                             (fun m -> SynExpr.LibraryOnlyILAssembly (ParseAssemblyCodeInstructions s sm,_3,List.rev _4,_5,m)) 
                   )
# 3885 "../pars.fsy"
                 : 'inlineAssemblyExpr));
# 12482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3891 "../pars.fsy"
                             _2 :: _1 
                   )
# 3891 "../pars.fsy"
                 : 'opt_curriedArgExprs));
# 12494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3894 "../pars.fsy"
                             [] 
                   )
# 3894 "../pars.fsy"
                 : 'opt_curriedArgExprs));
# 12504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3898 "../pars.fsy"
                             None 
                   )
# 3898 "../pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3901 "../pars.fsy"
                             Some(_1) 
                   )
# 3901 "../pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3904 "../pars.fsy"
                            [] 
                   )
# 3904 "../pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3905 "../pars.fsy"
                                                           [_3] 
                   )
# 3905 "../pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3909 "../pars.fsy"
                            [] 
                   )
# 3909 "../pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3912 "../pars.fsy"
                            [_2] 
                   )
# 3912 "../pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3915 "../pars.fsy"
                             [] 
                   )
# 3915 "../pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3919 "../pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 3919 "../pars.fsy"
                 : 'recdExpr));
# 12601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3928 "../pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 3928 "../pars.fsy"
                 : 'recdExpr));
# 12621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3941 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 3941 "../pars.fsy"
                 : 'recdExpr));
# 12635 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3948 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 3948 "../pars.fsy"
                 : 'recdExpr));
# 12650 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3957 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 3957 "../pars.fsy"
                 : 'recdExpr));
# 12667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3966 "../pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 3966 "../pars.fsy"
                 : 'recdExpr));
# 12683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3971 "../pars.fsy"
                            (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 3971 "../pars.fsy"
                 : 'recdExpr));
# 12695 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3974 "../pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 3974 "../pars.fsy"
                 : 'recdExpr));
# 12711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3979 "../pars.fsy"
                                     Some _1 
                   )
# 3979 "../pars.fsy"
                 : 'opt_seps_recd));
# 12722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3980 "../pars.fsy"
                           None 
                   )
# 3980 "../pars.fsy"
                 : 'opt_seps_recd));
# 12732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3983 "../pars.fsy"
                                     (rhs parseState 1), None 
                   )
# 3983 "../pars.fsy"
                 : 'seps_recd));
# 12742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3984 "../pars.fsy"
                                      let m = (rhs parseState 1) in (m, Some m.End) 
                   )
# 3984 "../pars.fsy"
                 : 'seps_recd));
# 12752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3985 "../pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
# 3985 "../pars.fsy"
                 : 'seps_recd));
# 12762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3986 "../pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
# 3986 "../pars.fsy"
                 : 'seps_recd));
# 12772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3992 "../pars.fsy"
                                mkRecdField _1 
                   )
# 3992 "../pars.fsy"
                 : 'pathOrUnderscore));
# 12783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3994 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 3994 "../pars.fsy"
                 : 'pathOrUnderscore));
# 12795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4000 "../pars.fsy"
                            (_3, Some _2) :: _1 
                   )
# 4000 "../pars.fsy"
                 : 'recdExprBindings));
# 12808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4001 "../pars.fsy"
                            [] 
                   )
# 4001 "../pars.fsy"
                 : 'recdExprBindings));
# 12818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4005 "../pars.fsy"
                             (_1, Some _3) 
                   )
# 4005 "../pars.fsy"
                 : 'recdBinding));
# 12830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4008 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4008 "../pars.fsy"
                 : 'recdBinding));
# 12842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4012 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4012 "../pars.fsy"
                 : 'recdBinding));
# 12855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4016 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4016 "../pars.fsy"
                 : 'recdBinding));
# 12867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4020 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4020 "../pars.fsy"
                 : 'recdBinding));
# 12880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4031 "../pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,_2,_4, mNewExpr, m)) 
                   )
# 4031 "../pars.fsy"
                 : 'objExpr));
# 12896 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4036 "../pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,[],_3, mNewExpr, m)) 
                   )
# 4036 "../pars.fsy"
                 : 'objExpr));
# 12911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4041 "../pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a,b) = _2,None in SynExpr.ObjExpr(a,b,[],[], mNewExpr, m)) 
                   )
# 4041 "../pars.fsy"
                 : 'objExpr));
# 12923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4047 "../pars.fsy"
                            (_2, Some(_4,Some(_5))) 
                   )
# 4047 "../pars.fsy"
                 : 'objExprBaseCall));
# 12937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4050 "../pars.fsy"
                            (_2, Some(_4,None)) 
                   )
# 4050 "../pars.fsy"
                 : 'objExprBaseCall));
# 12950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4053 "../pars.fsy"
                            _2,None 
                   )
# 4053 "../pars.fsy"
                 : 'objExprBaseCall));
# 12961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4058 "../pars.fsy"
                                           _1 
                   )
# 4058 "../pars.fsy"
                 : 'opt_objExprBindings));
# 12972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4059 "../pars.fsy"
                                           [] 
                   )
# 4059 "../pars.fsy"
                 : 'opt_objExprBindings));
# 12982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4063 "../pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4063 "../pars.fsy"
                 : 'objExprBindings));
# 12995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4068 "../pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4068 "../pars.fsy"
                 : 'objExprBindings));
# 13008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4073 "../pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b,m) -> Some b
                                               | SynMemberDefn.AutoProperty(_,_,_,_,_,_,_,_,_,_,m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(),m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(),x.Range)); None)) 
                   )
# 4073 "../pars.fsy"
                 : 'objExprBindings));
# 13024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4080 "../pars.fsy"
                                                                  _1 :: _2 
                   )
# 4080 "../pars.fsy"
                 : 'objExprInterfaces));
# 13036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4084 "../pars.fsy"
                            [] 
                   )
# 4084 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 13046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4087 "../pars.fsy"
                            _1 :: _2 
                   )
# 4087 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 13058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4090 "../pars.fsy"
                            (* silent recovery *) _2 
                   )
# 4090 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 13069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4094 "../pars.fsy"
                           InterfaceImpl(_2, _3, lhs parseState) 
                   )
# 4094 "../pars.fsy"
                 : 'objExprInterface));
# 13084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4097 "../pars.fsy"
                                  true 
                   )
# 4097 "../pars.fsy"
                 : 'forLoopDirection));
# 13094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4098 "../pars.fsy"
                                  false 
                   )
# 4098 "../pars.fsy"
                 : 'forLoopDirection));
# 13104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4102 "../pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4102 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4106 "../pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 4106 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13129 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4110 "../pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4110 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4114 "../pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4) 
                   )
# 4114 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4119 "../pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 4119 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13169 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4123 "../pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 4123 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4127 "../pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 4127 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4130 "../pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 4130 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4134 "../pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 4134 "../pars.fsy"
                 : 'anonMatchingExpr));
# 13216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4139 "../pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 4139 "../pars.fsy"
                 : 'anonMatchingExpr));
# 13229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4148 "../pars.fsy"
                            _1 
                   )
# 4148 "../pars.fsy"
                 : 'typeWithTypeConstraints));
# 13240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4151 "../pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3,lhs parseState) 
                   )
# 4151 "../pars.fsy"
                 : 'typeWithTypeConstraints));
# 13252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4155 "../pars.fsy"
                            _1 
                   )
# 4155 "../pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13263 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4158 "../pars.fsy"
                            let ty,arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty,List.rev _3,lhs parseState), arity 
                   )
# 4158 "../pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13277 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4164 "../pars.fsy"
                            None 
                   )
# 4164 "../pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4167 "../pars.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 4167 "../pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4173 "../pars.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 4173 "../pars.fsy"
                 : 'topType));
# 13314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4178 "../pars.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 4178 "../pars.fsy"
                 : 'topType));
# 13325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4182 "../pars.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 4182 "../pars.fsy"
                 : 'topTupleType));
# 13337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4185 "../pars.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 4185 "../pars.fsy"
                 : 'topTupleType));
# 13348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4189 "../pars.fsy"
                            _1 :: _3 
                   )
# 4189 "../pars.fsy"
                 : 'topTupleTypeElements));
# 13360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4192 "../pars.fsy"
                            [_1] 
                   )
# 4192 "../pars.fsy"
                 : 'topTupleTypeElements));
# 13371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4196 "../pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _4,SynArgInfo(_1,false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4196 "../pars.fsy"
                 : 'topAppType));
# 13386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4201 "../pars.fsy"
                            _5,SynArgInfo(_1,true,Some _3) 
                   )
# 4201 "../pars.fsy"
                 : 'topAppType));
# 13399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4204 "../pars.fsy"
                            (_2,SynArgInfo(_1,false,None)) 
                   )
# 4204 "../pars.fsy"
                 : 'topAppType));
# 13411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4207 "../pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo([],false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4207 "../pars.fsy"
                 : 'topAppType));
# 13425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4212 "../pars.fsy"
                            _4,SynArgInfo([],true,Some _2) 
                   )
# 4212 "../pars.fsy"
                 : 'topAppType));
# 13437 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4215 "../pars.fsy"
                            _1,SynArgInfo([],false,None) 
                   )
# 4215 "../pars.fsy"
                 : 'topAppType));
# 13448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4221 "../pars.fsy"
                            SynType.Fun(_1,_3,lhs parseState) 
                   )
# 4221 "../pars.fsy"
                 : Ast.SynType));
# 13460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4224 "../pars.fsy"
                            _1 
                   )
# 4224 "../pars.fsy"
                 : Ast.SynType));
# 13471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4227 "../pars.fsy"
                                   checkEndOfFileError _2; _1 
                   )
# 4227 "../pars.fsy"
                 : Ast.SynType));
# 13483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4232 "../pars.fsy"
                           SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 4232 "../pars.fsy"
                 : 'tupleType));
# 13495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4235 "../pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 4235 "../pars.fsy"
                 : 'tupleType));
# 13508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4239 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 4239 "../pars.fsy"
                 : 'tupleType));
# 13522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4243 "../pars.fsy"
                           _1 
                   )
# 4243 "../pars.fsy"
                 : 'tupleType));
# 13533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4247 "../pars.fsy"
                           (false,_1) :: _3 
                   )
# 4247 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4250 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true,_1) :: _3 
                   )
# 4250 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4254 "../pars.fsy"
                           [(false,_1)] 
                   )
# 4254 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4258 "../pars.fsy"
                           _1 :: _3 
                   )
# 4258 "../pars.fsy"
                 : 'tupleTypeElements));
# 13582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4261 "../pars.fsy"
                           [_1] 
                   )
# 4261 "../pars.fsy"
                 : 'tupleTypeElements));
# 13593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4265 "../pars.fsy"
                           SynType.LongIdent(_1) 
                   )
# 4265 "../pars.fsy"
                 : 'appTypeCon));
# 13604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4268 "../pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
# 4268 "../pars.fsy"
                 : 'appTypeCon));
# 13615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4272 "../pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                           else SynType.MeasurePower(_1, _3, lhs parseState)  
                   )
# 4272 "../pars.fsy"
                 : 'appTypeConPower));
# 13630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4277 "../pars.fsy"
                           _1 
                   )
# 4277 "../pars.fsy"
                 : 'appTypeConPower));
# 13641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4281 "../pars.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 4281 "../pars.fsy"
                 : 'appType));
# 13653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4284 "../pars.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 4284 "../pars.fsy"
                 : 'appType));
# 13665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4287 "../pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 4287 "../pars.fsy"
                 : 'appType));
# 13677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4290 "../pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4290 "../pars.fsy"
                 : 'appType));
# 13692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4295 "../pars.fsy"
                             _1 
                   )
# 4295 "../pars.fsy"
                 : 'appType));
# 13703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4298 "../pars.fsy"
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 4298 "../pars.fsy"
                 : 'appType));
# 13717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4303 "../pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4303 "../pars.fsy"
                 : 'appType));
# 13728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4307 "../pars.fsy"
                             1 
                   )
# 4307 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13738 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4310 "../pars.fsy"
                             2 
                   )
# 4310 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4313 "../pars.fsy"
                             3 
                   )
# 4313 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4316 "../pars.fsy"
                             4 
                   )
# 4316 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4320 "../pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 4320 "../pars.fsy"
                 : 'appTypePrefixArguments));
# 13781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4324 "../pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 4324 "../pars.fsy"
                 : 'typeArgListElements));
# 13794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4328 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 4328 "../pars.fsy"
                 : 'typeArgListElements));
# 13808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4333 "../pars.fsy"
                             [], [] 
                   )
# 4333 "../pars.fsy"
                 : 'typeArgListElements));
# 13818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4337 "../pars.fsy"
                           _1 
                   )
# 4337 "../pars.fsy"
                 : 'powerType));
# 13829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4340 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
# 4340 "../pars.fsy"
                 : 'powerType));
# 13844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4347 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 4347 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4351 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 4351 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4355 "../pars.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 4355 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4360 "../pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4360 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4365 "../pars.fsy"
                             _1 
                   )
# 4365 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4368 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 4368 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4374 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4374 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4380 "../pars.fsy"
                           _1 
                   )
# 4380 "../pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4383 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
# 4383 "../pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4393 "../pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
# 4393 "../pars.fsy"
                 : 'atomType));
# 13975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4396 "../pars.fsy"
                            _1 
                   )
# 4396 "../pars.fsy"
                 : 'atomType));
# 13986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4399 "../pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 4399 "../pars.fsy"
                 : 'atomType));
# 13996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4402 "../pars.fsy"
                             _2 
                   )
# 4402 "../pars.fsy"
                 : 'atomType));
# 14008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4405 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 4405 "../pars.fsy"
                 : 'atomType));
# 14021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4409 "../pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 4409 "../pars.fsy"
                 : 'atomType));
# 14032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4412 "../pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 4412 "../pars.fsy"
                 : 'atomType));
# 14043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4416 "../pars.fsy"
                             let e,_ = _2
                             SynType.StaticConstantExpr(e, e.Range) 
                   )
# 4416 "../pars.fsy"
                 : 'atomType));
# 14055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4420 "../pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 4420 "../pars.fsy"
                 : 'atomType));
# 14065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4423 "../pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 4423 "../pars.fsy"
                 : 'atomType));
# 14075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4426 "../pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 4426 "../pars.fsy"
                 : 'atomType));
# 14086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4429 "../pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 4429 "../pars.fsy"
                 : 'atomType));
# 14098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4432 "../pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 4432 "../pars.fsy"
                 : 'atomType));
# 14110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4435 "../pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
# 4435 "../pars.fsy"
                 : 'atomType));
# 14124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4439 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 4439 "../pars.fsy"
                 : 'atomType));
# 14137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4445 "../pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 4445 "../pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 14151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4451 "../pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 4451 "../pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 14163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4456 "../pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 4456 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4460 "../pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4460 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4470 "../pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4470 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4476 "../pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 4476 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4479 "../pars.fsy"
                            if not _3 then 
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsMissingGreaterThan())
                            (rhs parseState 1), None, false, [_2], [], (rhs2 parseState 1 2) 
                   )
# 4479 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4486 "../pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 4486 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4489 "../pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4489 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14277 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4499 "../pars.fsy"
                            _1 
                   )
# 4499 "../pars.fsy"
                 : 'typeArgActual));
# 14288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4502 "../pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 4502 "../pars.fsy"
                 : 'typeArgActual));
# 14300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4505 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
# 4505 "../pars.fsy"
                 : 'typeArgActual));
# 14314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4512 "../pars.fsy"
                            _1 
                   )
# 4512 "../pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4515 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
# 4515 "../pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4520 "../pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("",m)],[]))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
# 4520 "../pars.fsy"
                 : 'dummyTypeArg));
# 14351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4529 "../pars.fsy"
                            _2 
                   )
# 4529 "../pars.fsy"
                 : 'measureTypeArg));
# 14364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4532 "../pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 4532 "../pars.fsy"
                 : 'measureTypeArg));
# 14376 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4536 "../pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 4536 "../pars.fsy"
                 : 'measureTypeAtom));
# 14387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4539 "../pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
# 4539 "../pars.fsy"
                 : 'measureTypeAtom));
# 14398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4542 "../pars.fsy"
                            _2 
                   )
# 4542 "../pars.fsy"
                 : 'measureTypeAtom));
# 14410 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4546 "../pars.fsy"
                             _1 
                   )
# 4546 "../pars.fsy"
                 : 'measureTypePower));
# 14421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4549 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynMeasure.Power(_1, _3, lhs parseState) 
                   )
# 4549 "../pars.fsy"
                 : 'measureTypePower));
# 14436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4554 "../pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 4554 "../pars.fsy"
                 : 'measureTypePower));
# 14448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4559 "../pars.fsy"
                           [_1] 
                   )
# 4559 "../pars.fsy"
                 : 'measureTypeSeq));
# 14459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4562 "../pars.fsy"
                           _1 :: _2 
                   )
# 4562 "../pars.fsy"
                 : 'measureTypeSeq));
# 14471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4566 "../pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 4566 "../pars.fsy"
                 : 'measureTypeExpr));
# 14482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4569 "../pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 4569 "../pars.fsy"
                 : 'measureTypeExpr));
# 14494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4572 "../pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 4572 "../pars.fsy"
                 : 'measureTypeExpr));
# 14509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4577 "../pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 4577 "../pars.fsy"
                 : 'measureTypeExpr));
# 14522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4582 "../pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 4582 "../pars.fsy"
                 : Ast.SynTypar));
# 14534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4586 "../pars.fsy"
                            _1 
                   )
# 4586 "../pars.fsy"
                 : Ast.SynTypar));
# 14545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4590 "../pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            let id = mkSynId (lhs parseState) (_2).idText
                            Typar(id,HeadTypeStaticReq,false) 
                   )
# 4590 "../pars.fsy"
                 : 'staticallyKnownHeadTypar));
# 14559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4598 "../pars.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 4598 "../pars.fsy"
                 : Ast.Ident));
# 14570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4604 "../pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 4604 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4607 "../pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4607 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4610 "../pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 4610 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4613 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 4613 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4620 "../pars.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 4620 "../pars.fsy"
                 : 'opName));
# 14628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4623 "../pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 4623 "../pars.fsy"
                 : 'opName));
# 14639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4626 "../pars.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 4626 "../pars.fsy"
                 : 'opName));
# 14649 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4630 "../pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 4630 "../pars.fsy"
                 : 'opName));
# 14662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4635 "../pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 4635 "../pars.fsy"
                 : 'opName));
# 14675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4641 "../pars.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 4641 "../pars.fsy"
                 : 'operatorName));
# 14688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4645 "../pars.fsy"
                                               _1 
                   )
# 4645 "../pars.fsy"
                 : 'operatorName));
# 14699 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4647 "../pars.fsy"
                                            _1 
                   )
# 4647 "../pars.fsy"
                 : 'operatorName));
# 14710 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4649 "../pars.fsy"
                                            _1 
                   )
# 4649 "../pars.fsy"
                 : 'operatorName));
# 14721 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4651 "../pars.fsy"
                                         _1 
                   )
# 4651 "../pars.fsy"
                 : 'operatorName));
# 14732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4653 "../pars.fsy"
                                        _1 
                   )
# 4653 "../pars.fsy"
                 : 'operatorName));
# 14743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4655 "../pars.fsy"
                                          _1 
                   )
# 4655 "../pars.fsy"
                 : 'operatorName));
# 14754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4657 "../pars.fsy"
                                                 _1 
                   )
# 4657 "../pars.fsy"
                 : 'operatorName));
# 14765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4659 "../pars.fsy"
                                  "$" 
                   )
# 4659 "../pars.fsy"
                 : 'operatorName));
# 14775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4661 "../pars.fsy"
                                              _1 
                   )
# 4661 "../pars.fsy"
                 : 'operatorName));
# 14786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4663 "../pars.fsy"
                                 "-" 
                   )
# 4663 "../pars.fsy"
                 : 'operatorName));
# 14796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4665 "../pars.fsy"
                                "*" 
                   )
# 4665 "../pars.fsy"
                 : 'operatorName));
# 14806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4667 "../pars.fsy"
                                  "=" 
                   )
# 4667 "../pars.fsy"
                 : 'operatorName));
# 14816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4669 "../pars.fsy"
                              "or" 
                   )
# 4669 "../pars.fsy"
                 : 'operatorName));
# 14826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4671 "../pars.fsy"
                                "<" 
                   )
# 4671 "../pars.fsy"
                 : 'operatorName));
# 14837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4673 "../pars.fsy"
                                   ">" 
                   )
# 4673 "../pars.fsy"
                 : 'operatorName));
# 14848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4675 "../pars.fsy"
                                 "?" 
                   )
# 4675 "../pars.fsy"
                 : 'operatorName));
# 14858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4677 "../pars.fsy"
                               "&" 
                   )
# 4677 "../pars.fsy"
                 : 'operatorName));
# 14868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4679 "../pars.fsy"
                                   "&&" 
                   )
# 4679 "../pars.fsy"
                 : 'operatorName));
# 14878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4681 "../pars.fsy"
                                   "||" 
                   )
# 4681 "../pars.fsy"
                 : 'operatorName));
# 14888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4683 "../pars.fsy"
                                        ":=" 
                   )
# 4683 "../pars.fsy"
                 : 'operatorName));
# 14898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4686 "../pars.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 4686 "../pars.fsy"
                 : 'operatorName));
# 14911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4690 "../pars.fsy"
                                      _1 
                   )
# 4690 "../pars.fsy"
                 : 'operatorName));
# 14922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4692 "../pars.fsy"
                                   ".." 
                   )
# 4692 "../pars.fsy"
                 : 'operatorName));
# 14932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4694 "../pars.fsy"
                                           ".. .." 
                   )
# 4694 "../pars.fsy"
                 : 'operatorName));
# 14942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4697 "../pars.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 4697 "../pars.fsy"
                 : 'operatorName));
# 14955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4703 "../pars.fsy"
                             if not (String.isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                             _1 
                   )
# 4703 "../pars.fsy"
                 : 'activePatternCaseName));
# 14968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4710 "../pars.fsy"
                             [_2] 
                   )
# 4710 "../pars.fsy"
                 : 'activePatternCaseNames));
# 14979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4713 "../pars.fsy"
                             _3 :: _1 
                   )
# 4713 "../pars.fsy"
                 : 'activePatternCaseNames));
# 14991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4718 "../pars.fsy"
                            _1 
                   )
# 4718 "../pars.fsy"
                 : 'identOrOp));
# 15002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4721 "../pars.fsy"
                            _1 
                   )
# 4721 "../pars.fsy"
                 : 'identOrOp));
# 15013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4727 "../pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4727 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 15024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4730 "../pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4730 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 15035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4733 "../pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 4733 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 15047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4736 "../pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 4736 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 15058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4741 "../pars.fsy"
                                      _1 
                   )
# 4741 "../pars.fsy"
                 : 'nameop));
# 15069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4744 "../pars.fsy"
                                     
                   )
# 4744 "../pars.fsy"
                 : 'topSeparator));
# 15079 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4745 "../pars.fsy"
                                               
                   )
# 4745 "../pars.fsy"
                 : 'topSeparator));
# 15089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4746 "../pars.fsy"
                                     
                   )
# 4746 "../pars.fsy"
                 : 'topSeparator));
# 15099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4749 "../pars.fsy"
                                                            
                   )
# 4749 "../pars.fsy"
                 : 'topSeparators));
# 15110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4750 "../pars.fsy"
                                                      
                   )
# 4750 "../pars.fsy"
                 : 'topSeparators));
# 15122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4753 "../pars.fsy"
                                                          
                   )
# 4753 "../pars.fsy"
                 : 'opt_topSeparators));
# 15134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4754 "../pars.fsy"
                                                          
                   )
# 4754 "../pars.fsy"
                 : 'opt_topSeparators));
# 15144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4758 "../pars.fsy"
                                     
                   )
# 4758 "../pars.fsy"
                 : 'seps));
# 15154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4759 "../pars.fsy"
                                     
                   )
# 4759 "../pars.fsy"
                 : 'seps));
# 15164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4760 "../pars.fsy"
                                               
                   )
# 4760 "../pars.fsy"
                 : 'seps));
# 15174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4761 "../pars.fsy"
                                               
                   )
# 4761 "../pars.fsy"
                 : 'seps));
# 15184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4766 "../pars.fsy"
                             
                   )
# 4766 "../pars.fsy"
                 : 'declEnd));
# 15194 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4768 "../pars.fsy"
                               
                   )
# 4768 "../pars.fsy"
                 : 'declEnd));
# 15204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4770 "../pars.fsy"
                             
                   )
# 4770 "../pars.fsy"
                 : 'declEnd));
# 15214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4775 "../pars.fsy"
                            
                   )
# 4775 "../pars.fsy"
                 : 'opt_declEnd));
# 15224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4777 "../pars.fsy"
                             
                   )
# 4777 "../pars.fsy"
                 : 'opt_declEnd));
# 15234 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4779 "../pars.fsy"
                            
                   )
# 4779 "../pars.fsy"
                 : 'opt_declEnd));
# 15244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4781 "../pars.fsy"
                            
                   )
# 4781 "../pars.fsy"
                 : 'opt_declEnd));
# 15254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4784 "../pars.fsy"
                                       
                   )
# 4784 "../pars.fsy"
                 : 'opt_ODECLEND));
# 15264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4785 "../pars.fsy"
                                       
                   )
# 4785 "../pars.fsy"
                 : 'opt_ODECLEND));
# 15274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4788 "../pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 4788 "../pars.fsy"
                 : 'deprecated_opt_equals));
# 15284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4789 "../pars.fsy"
                                        
                   )
# 4789 "../pars.fsy"
                 : 'deprecated_opt_equals));
# 15294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4792 "../pars.fsy"
                                       
                   )
# 4792 "../pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4793 "../pars.fsy"
                                       
                   )
# 4793 "../pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4796 "../pars.fsy"
                                       
                   )
# 4796 "../pars.fsy"
                 : 'opt_seps));
# 15325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4797 "../pars.fsy"
                                       
                   )
# 4797 "../pars.fsy"
                 : 'opt_seps));
# 15335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4800 "../pars.fsy"
                                       true 
                   )
# 4800 "../pars.fsy"
                 : 'opt_rec));
# 15345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4801 "../pars.fsy"
                                       false 
                   )
# 4801 "../pars.fsy"
                 : 'opt_rec));
# 15355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4804 "../pars.fsy"
                                       
                   )
# 4804 "../pars.fsy"
                 : 'opt_bar));
# 15365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4805 "../pars.fsy"
                                       
                   )
# 4805 "../pars.fsy"
                 : 'opt_bar));
# 15375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4808 "../pars.fsy"
                                       true 
                   )
# 4808 "../pars.fsy"
                 : 'opt_inline));
# 15385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4809 "../pars.fsy"
                                       false 
                   )
# 4809 "../pars.fsy"
                 : 'opt_inline));
# 15395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4812 "../pars.fsy"
                                       true 
                   )
# 4812 "../pars.fsy"
                 : 'opt_mutable));
# 15405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4813 "../pars.fsy"
                                       false 
                   )
# 4813 "../pars.fsy"
                 : 'opt_mutable));
# 15415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4817 "../pars.fsy"
                               
                   )
# 4817 "../pars.fsy"
                 : 'doToken));
# 15425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4818 "../pars.fsy"
                               
                   )
# 4818 "../pars.fsy"
                 : 'doToken));
# 15435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4821 "../pars.fsy"
                                
                   )
# 4821 "../pars.fsy"
                 : 'doneDeclEnd));
# 15445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4822 "../pars.fsy"
                                    
                   )
# 4822 "../pars.fsy"
                 : 'doneDeclEnd));
# 15455 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4825 "../pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 4825 "../pars.fsy"
                 : 'structOrBegin));
# 15465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4826 "../pars.fsy"
                                 
                   )
# 4826 "../pars.fsy"
                 : 'structOrBegin));
# 15475 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4829 "../pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4829 "../pars.fsy"
                 : 'sigOrBegin));
# 15485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4830 "../pars.fsy"
                                 
                   )
# 4830 "../pars.fsy"
                 : 'sigOrBegin));
# 15495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4833 "../pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4833 "../pars.fsy"
                 : 'colonOrEquals));
# 15505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4834 "../pars.fsy"
                                  
                   )
# 4834 "../pars.fsy"
                 : 'colonOrEquals));
# 15515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4838 "../pars.fsy"
                                  _1 
                   )
# 4838 "../pars.fsy"
                 : 'stringOrKeywordString));
# 15526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4839 "../pars.fsy"
                                          _1 
                   )
# 4839 "../pars.fsy"
                 : 'stringOrKeywordString));
# 15537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4842 "../pars.fsy"
                                                     
                   )
# 4842 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4843 "../pars.fsy"
                                                     
                   )
# 4843 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4844 "../pars.fsy"
                                         
                   )
# 4844 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4847 "../pars.fsy"
                                                 
                   )
# 4847 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4848 "../pars.fsy"
                                         
                   )
# 4848 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4852 "../pars.fsy"
                                                        
                   )
# 4852 "../pars.fsy"
                 : 'typeKeyword));
# 15598 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4853 "../pars.fsy"
                                        
                   )
# 4853 "../pars.fsy"
                 : 'typeKeyword));
# 15608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4854 "../pars.fsy"
                                
                   )
# 4854 "../pars.fsy"
                 : 'typeKeyword));
# 15618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4858 "../pars.fsy"
                                                            
                   )
# 4858 "../pars.fsy"
                 : 'moduleKeyword));
# 15629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4859 "../pars.fsy"
                                          
                   )
# 4859 "../pars.fsy"
                 : 'moduleKeyword));
# 15639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4860 "../pars.fsy"
                                  
                   )
# 4860 "../pars.fsy"
                 : 'moduleKeyword));
# 15649 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4863 "../pars.fsy"
                                                     
                   )
# 4863 "../pars.fsy"
                 : 'rbrace));
# 15660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4864 "../pars.fsy"
                                          
                   )
# 4864 "../pars.fsy"
                 : 'rbrace));
# 15670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4865 "../pars.fsy"
                                  
                   )
# 4865 "../pars.fsy"
                 : 'rbrace));
# 15680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4868 "../pars.fsy"
                                                     
                   )
# 4868 "../pars.fsy"
                 : 'rparen));
# 15691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4869 "../pars.fsy"
                                          
                   )
# 4869 "../pars.fsy"
                 : 'rparen));
# 15701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4870 "../pars.fsy"
                                  
                   )
# 4870 "../pars.fsy"
                 : 'rparen));
# 15711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4873 "../pars.fsy"
                                                           
                   )
# 4873 "../pars.fsy"
                 : 'oblockend));
# 15722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4874 "../pars.fsy"
                                             
                   )
# 4874 "../pars.fsy"
                 : 'oblockend));
# 15732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4875 "../pars.fsy"
                                     
                   )
# 4875 "../pars.fsy"
                 : 'oblockend));
# 15742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4878 "../pars.fsy"
                                            false 
                   )
# 4878 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4879 "../pars.fsy"
                                              false 
                   )
# 4879 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4880 "../pars.fsy"
                                              false 
                   )
# 4880 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4881 "../pars.fsy"
                                                 false 
                   )
# 4881 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4882 "../pars.fsy"
                                   _1 
                   )
# 4882 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4885 "../pars.fsy"
                                            false 
                   )
# 4885 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4886 "../pars.fsy"
                                              false 
                   )
# 4886 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4887 "../pars.fsy"
                                              false 
                   )
# 4887 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15823 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4888 "../pars.fsy"
                                              false 
                   )
# 4888 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4889 "../pars.fsy"
                                                 false 
                   )
# 4889 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4890 "../pars.fsy"
                                   _1 
                   )
# 4890 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 15855 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 195;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : Ast.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : Ast.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : Ast.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let typedSeqExprEOF lexer lexbuf : Ast.SynExpr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
let typEOF lexer lexbuf : Ast.SynType =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 8))
